{
  "version": 3,
  "sources": ["../../turf-helpers/index.js", "../../turf-tin/index.js", "../../turf-invariant/index.js", "../../turf-inside/index.js", "../../turf-point/index.js", "../../turf-grid/index.js", "../../turf-meta/index.js", "../../turf-bbox/index.js", "../../turf-planepoint/index.js", "../../turf-distance/index.js", "../../turf-square/index.js", "../../turf-isolines/conrec.js", "../../turf-isolines/index.js", "../../convex-hull/lib/ch1d.js", "../../two-product/two-product.js", "../../robust-sum/robust-sum.js", "../../two-sum/two-sum.js", "../../robust-scale/robust-scale.js", "../../robust-subtract/robust-diff.js", "../../robust-orientation/orientation.js", "../../monotone-convex-hull-2d/index.js", "../../convex-hull/lib/ch2d.js", "../../bit-twiddle/twiddle.js", "../../union-find/index.js", "../../simplicial-complex/topology.js", "../../incremental-convex-hull/ich.js", "../../affine-hull/aff.js", "../../convex-hull/lib/chnd.js", "../../convex-hull/ch.js", "../../turf-convex/index.js", "../../turf-within/index.js", "../../jsts/dist/jsts.min.js", "../../turf-union/index.js", "../../turf-concave/index.js", "../../turf-difference/index.js", "../../turf-collect/index.js", "../../turf-flip/index.js", "../../simplify-js/simplify.js", "../../turf-simplify/index.js", "../../turf-bezier/spline.js", "../../turf-bezier/index.js", "../../turf-tag/index.js", "../../turf-sample/index.js", "../../turf-bbox-polygon/index.js", "../../turf-envelope/index.js", "../../turf-bearing/index.js", "../../turf-destination/index.js", "../../turf-midpoint/index.js", "../../geojson-normalize/index.js", "../../turf-buffer/index.js", "../../turf-center/index.js", "../../turf-centroid/index.js", "../../turf-combine/index.js", "../../turf-explode/index.js", "../../earcut/src/earcut.js", "../../turf-tesselate/index.js", "../../turf-intersect/index.js", "../../turf-nearest/index.js", "../../geojson-random/index.js", "../../turf-random/index.js", "../../turf-kinks/index.js", "../../turf-point-on-surface/index.js", "../../wgs84/index.js", "../../geojson-area/index.js", "../../turf-area/index.js", "../../turf-along/index.js", "../../turf-line-distance/index.js", "../../turf-point-on-line/index.js", "../../turf-line-slice/index.js", "../../turf-point-grid/index.js", "../../turf-square-grid/index.js", "../../turf-triangle-grid/index.js", "../../turf-hex-grid/index.js", "../../turf/index.js"],
  "sourcesContent": ["/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} properties properties\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var geometry = {\n *      \"type\": \"Point\",\n *      \"coordinates\": [\n *        67.5,\n *        32.84267363195431\n *      ]\n *    }\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties) {\n    return {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: geometry\n    };\n}\n\nmodule.exports.feature = feature;\n\n/**\n * Takes coordinates and properties (optional) and returns a new {@link Point} feature.\n *\n * @name point\n * @param {number[]} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object=} properties an Object that is used as the {@link Feature}'s\n * properties\n * @returns {Feature<Point>} a Point feature\n * @example\n * var pt1 = turf.point([-75.343, 39.984]);\n *\n * //=pt1\n */\nmodule.exports.point = function (coordinates, properties) {\n    if (!Array.isArray(coordinates)) throw new Error('Coordinates must be an array');\n    if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n    return feature({\n        type: 'Point',\n        coordinates: coordinates.slice()\n    }, properties);\n};\n\n/**\n * Takes an array of LinearRings and optionally an {@link Object} with properties and returns a {@link Polygon} feature.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object=} properties a properties object\n * @returns {Feature<Polygon>} a Polygon feature\n * @throws {Error} throw an error if a LinearRing of the polygon has too few positions\n * or if a LinearRing of the Polygon does not have matching Positions at the\n * beginning & end.\n * @example\n * var polygon = turf.polygon([[\n *  [-2.275543, 53.464547],\n *  [-2.275543, 53.489271],\n *  [-2.215118, 53.489271],\n *  [-2.215118, 53.464547],\n *  [-2.275543, 53.464547]\n * ]], { name: 'poly1', population: 400});\n *\n * //=polygon\n */\nmodule.exports.polygon = function (coordinates, properties) {\n\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link LineString} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<LineString>} a LineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var linestring1 = turf.lineString([\n *\t[-21.964416, 64.148203],\n *\t[-21.956176, 64.141316],\n *\t[-21.93901, 64.135924],\n *\t[-21.927337, 64.136673]\n * ]);\n * var linestring2 = turf.lineString([\n *\t[-21.929054, 64.127985],\n *\t[-21.912918, 64.134726],\n *\t[-21.916007, 64.141016],\n * \t[-21.930084, 64.14446]\n * ], {name: 'line 1', distance: 145});\n *\n * //=linestring1\n *\n * //=linestring2\n */\nmodule.exports.lineString = function (coordinates, properties) {\n    if (!coordinates) {\n        throw new Error('No coordinates passed');\n    }\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var features = [\n *  turf.point([-75.343, 39.984], {name: 'Location A'}),\n *  turf.point([-75.833, 39.284], {name: 'Location B'}),\n *  turf.point([-75.534, 39.123], {name: 'Location C'})\n * ];\n *\n * var fc = turf.featureCollection(features);\n *\n * //=fc\n */\nmodule.exports.featureCollection = function (features) {\n    return {\n        type: 'FeatureCollection',\n        features: features\n    };\n};\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n *\n */\nmodule.exports.multiLineString = function (coordinates, properties) {\n    if (!coordinates) {\n        throw new Error('No coordinates passed');\n    }\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n *\n */\nmodule.exports.multiPoint = function (coordinates, properties) {\n    if (!coordinates) {\n        throw new Error('No coordinates passed');\n    }\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties);\n};\n\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]);\n *\n * //=multiPoly\n *\n */\nmodule.exports.multiPolygon = function (coordinates, properties) {\n    if (!coordinates) {\n        throw new Error('No coordinates passed');\n    }\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<{Geometry}>} geometries an array of GeoJSON Geometries\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<GeometryCollection>} a geometrycollection feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometrycollection([[0,0],[10,10]]);\n *\n * //=collection\n */\nmodule.exports.geometryCollection = function (geometries, properties) {\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties);\n};\n\nvar factors = {\n    miles: 3960,\n    nauticalmiles: 3441.145,\n    degrees: 57.2957795,\n    radians: 1,\n    inches: 250905600,\n    yards: 6969600,\n    meters: 6373000,\n    metres: 6373000,\n    kilometers: 6373,\n    kilometres: 6373\n};\n\n/*\n * Convert a distance measurement from radians to a more friendly unit.\n *\n * @name radiansToDistance\n * @param {number} distance in radians across the sphere\n * @param {string=kilometers} units: one of miles, nauticalmiles, degrees, radians,\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nmodule.exports.radiansToDistance = function (radians, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) {\n        throw new Error('Invalid unit');\n    }\n    return radians * factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into radians\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string=kilometers} units: one of miles, nauticalmiles, degrees, radians,\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nmodule.exports.distanceToRadians = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) {\n        throw new Error('Invalid unit');\n    }\n    return distance / factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into degrees\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string=kilometers} units: one of miles, nauticalmiles, degrees, radians,\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nmodule.exports.distanceToDegrees = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) {\n        throw new Error('Invalid unit');\n    }\n    return (distance / factor) * 57.2958;\n};\n", "//http://en.wikipedia.org/wiki/Delaunay_triangulation\n//https://github.com/ironwallaby/delaunay\nvar polygon = require('turf-helpers').polygon;\nvar featurecollection = require('turf-helpers').featureCollection;\n\n/**\n * Takes a set of {@link Point|points} and the name of a z-value property and\n * creates a [Triangulated Irregular Network](http://en.wikipedia.org/wiki/Triangulated_irregular_network),\n * or a TIN for short, returned as a collection of Polygons. These are often used\n * for developing elevation contour maps or stepped heat visualizations.\n *\n * This triangulates the points, as well as adds properties called `a`, `b`,\n * and `c` representing the value of the given `propertyName` at each of\n * the points that represent the corners of the triangle.\n *\n * @name tin\n * @param {FeatureCollection<Point>} points input points\n * @param {String=} z name of the property from which to pull z values\n * This is optional: if not given, then there will be no extra data added to the derived triangles.\n * @return {FeatureCollection<Polygon>} TIN output\n * @example\n * // generate some random point data\n * var points = turf.random('points', 30, {\n *   bbox: [50, 30, 70, 50]\n * });\n * //=points\n * // add a random property to each point between 0 and 9\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = ~~(Math.random() * 9);\n * }\n * var tin = turf.tin(points, 'z')\n * for (var i = 0; i < tin.features.length; i++) {\n *   var properties  = tin.features[i].properties;\n *   // roughly turn the properties of each\n *   // triangle into a fill color\n *   // so we can visualize the result\n *   properties.fill = '#' + properties.a +\n *     properties.b + properties.c;\n * }\n * //=tin\n */\nmodule.exports = function (points, z) {\n    //break down points\n    return featurecollection(triangulate(points.features.map(function (p) {\n        var point = {\n            x: p.geometry.coordinates[0],\n            y: p.geometry.coordinates[1]\n        };\n        if (z) point.z = p.properties[z];\n        return point;\n    })).map(function (triangle) {\n        return polygon([[\n        [triangle.a.x, triangle.a.y],\n        [triangle.b.x, triangle.b.y],\n        [triangle.c.x, triangle.c.y],\n        [triangle.a.x, triangle.a.y]\n        ]], {\n            a: triangle.a.z,\n            b: triangle.b.z,\n            c: triangle.c.z\n        });\n    }));\n};\n\nfunction Triangle(a, b, c) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n\n    var A = b.x - a.x,\n        B = b.y - a.y,\n        C = c.x - a.x,\n        D = c.y - a.y,\n        E = A * (a.x + b.x) + B * (a.y + b.y),\n        F = C * (a.x + c.x) + D * (a.y + c.y),\n        G = 2 * (A * (c.y - b.y) - B * (c.x - b.x)),\n        minx, miny, dx, dy;\n\n    // If the points of the triangle are collinear, then just find the\n    // extremes and use the midpoint as the center of the circumcircle.\n    if (Math.abs(G) < 0.000001) {\n        minx = Math.min(a.x, b.x, c.x);\n        miny = Math.min(a.y, b.y, c.y);\n        dx = (Math.max(a.x, b.x, c.x) - minx) * 0.5;\n        dy = (Math.max(a.y, b.y, c.y) - miny) * 0.5;\n\n        this.x = minx + dx;\n        this.y = miny + dy;\n        this.r = dx * dx + dy * dy;\n    } else {\n        this.x = (D * E - B * F) / G;\n        this.y = (A * F - C * E) / G;\n        dx = this.x - a.x;\n        dy = this.y - a.y;\n        this.r = dx * dx + dy * dy;\n    }\n}\n\nfunction byX(a, b) {\n    return b.x - a.x;\n}\n\nfunction dedup(edges) {\n    var j = edges.length,\n        a, b, i, m, n;\n\n    outer:\n  while (j) {\n      b = edges[--j];\n      a = edges[--j];\n      i = j;\n      while (i) {\n          n = edges[--i];\n          m = edges[--i];\n          if ((a === m && b === n) || (a === n && b === m)) {\n              edges.splice(j, 2);\n              edges.splice(i, 2);\n              j -= 2;\n              continue outer;\n          }\n      }\n  }\n}\n\nfunction triangulate(vertices) {\n    // Bail if there aren't enough vertices to form any triangles.\n    if (vertices.length < 3)\n        return [];\n\n    // Ensure the vertex array is in order of descending X coordinate\n    // (which is needed to ensure a subquadratic runtime), and then find\n    // the bounding box around the points.\n    vertices.sort(byX);\n\n    var i = vertices.length - 1,\n        xmin = vertices[i].x,\n        xmax = vertices[0].x,\n        ymin = vertices[i].y,\n        ymax = ymin;\n\n    while (i--) {\n        if (vertices[i].y < ymin)\n            ymin = vertices[i].y;\n        if (vertices[i].y > ymax)\n            ymax = vertices[i].y;\n    }\n\n    //Find a supertriangle, which is a triangle that surrounds all the\n    //vertices. This is used like something of a sentinel value to remove\n    //cases in the main algorithm, and is removed before we return any\n    // results.\n\n    // Once found, put it in the \"open\" list. (The \"open\" list is for\n    // triangles who may still need to be considered; the \"closed\" list is\n    // for triangles which do not.)\n    var dx = xmax - xmin,\n        dy = ymax - ymin,\n        dmax = (dx > dy) ? dx : dy,\n        xmid = (xmax + xmin) * 0.5,\n        ymid = (ymax + ymin) * 0.5,\n        open = [\n            new Triangle({\n                x: xmid - 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }, {\n                x: xmid,\n                y: ymid + 20 * dmax,\n                __sentinel: true\n            }, {\n                x: xmid + 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }\n        )],\n        closed = [],\n        edges = [],\n        j, a, b;\n\n    // Incrementally add each vertex to the mesh.\n    i = vertices.length;\n    while (i--) {\n        // For each open triangle, check to see if the current point is\n        // inside it's circumcircle. If it is, remove the triangle and add\n        // it's edges to an edge list.\n        edges.length = 0;\n        j = open.length;\n        while (j--) {\n            // If this point is to the right of this triangle's circumcircle,\n            // then this triangle should never get checked again. Remove it\n            // from the open list, add it to the closed list, and skip.\n            dx = vertices[i].x - open[j].x;\n            if (dx > 0 && dx * dx > open[j].r) {\n                closed.push(open[j]);\n                open.splice(j, 1);\n                continue;\n            }\n\n            // If not, skip this triangle.\n            dy = vertices[i].y - open[j].y;\n            if (dx * dx + dy * dy > open[j].r)\n                continue;\n\n            // Remove the triangle and add it's edges to the edge list.\n            edges.push(\n        open[j].a, open[j].b,\n        open[j].b, open[j].c,\n        open[j].c, open[j].a\n      );\n            open.splice(j, 1);\n        }\n\n        // Remove any doubled edges.\n        dedup(edges);\n\n        // Add a new triangle for each edge.\n        j = edges.length;\n        while (j) {\n            b = edges[--j];\n            a = edges[--j];\n            open.push(new Triangle(a, b, vertices[i]));\n        }\n    }\n\n    // Copy any remaining open triangles to the closed list, and then\n    // remove any triangles that share a vertex with the supertriangle.\n    Array.prototype.push.apply(closed, open);\n\n    i = closed.length;\n    while (i--)\n        if (closed[i].a.__sentinel ||\n      closed[i].b.__sentinel ||\n      closed[i].c.__sentinel)\n            closed.splice(i, 1);\n\n    return closed;\n}\n", "/**\n * Unwrap a coordinate from a Feature with a Point geometry, a Point\n * geometry, or a single coordinate.\n *\n * @param {*} obj any value\n * @returns {Array<number>} a coordinate\n */\nfunction getCoord(obj) {\n    if (Array.isArray(obj) &&\n        typeof obj[0] === 'number' &&\n        typeof obj[1] === 'number') {\n        return obj;\n    } else if (obj) {\n        if (obj.type === 'Feature' &&\n            obj.geometry &&\n            obj.geometry.type === 'Point' &&\n            Array.isArray(obj.geometry.coordinates)) {\n            return obj.geometry.coordinates;\n        } else if (obj.type === 'Point' &&\n            Array.isArray(obj.coordinates)) {\n            return obj.coordinates;\n        }\n    }\n    throw new Error('A coordinate, feature, or point geometry is required');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @alias geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @alias featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @alias collectionOf\n * @param {FeatureCollection} featurecollection a featurecollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featurecollection, type, name) {\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featurecollection || featurecollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featurecollection.features.length; i++) {\n        var feature = featurecollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\nmodule.exports.geojsonType = geojsonType;\nmodule.exports.collectionOf = collectionOf;\nmodule.exports.featureOf = featureOf;\nmodule.exports.getCoord = getCoord;\n", "var invariant = require('turf-invariant');\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name inside\n * @param {Feature<Point>} point input point\n * @param {Feature<(Polygon|MultiPolygon)>} polygon input polygon or multipolygon\n * @return {Boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#f00\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-111.467285, 40.75766]\n *   }\n * };\n * var pt2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-111.873779, 40.647303]\n *   }\n * };\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-112.074279, 40.52215],\n *       [-112.074279, 40.853293],\n *       [-111.610107, 40.853293],\n *       [-111.610107, 40.52215],\n *       [-112.074279, 40.52215]\n *     ]]\n *   }\n * };\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [pt1, pt2, poly]\n * };\n *\n * //=features\n *\n * var isInside1 = turf.inside(pt1, poly);\n * //=isInside1\n *\n * var isInside2 = turf.inside(pt2, poly);\n * //=isInside2\n */\nmodule.exports = function input(point, polygon) {\n    var pt = invariant.getCoord(point);\n    var polys = polygon.geometry.coordinates;\n    // normalize to multipolygon\n    if (polygon.geometry.type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0])) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k])) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n};\n\n// pt is [x,y] and ring is [[x,y], [x,y],..]\nfunction inRing(pt, ring) {\n    var isInside = false;\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n", "/**\n * Takes coordinates and properties (optional) and returns a new {@link Point} feature.\n *\n * @module turf/point\n * @category helper\n * @param {number} longitude position west to east in decimal degrees\n * @param {number} latitude position south to north in decimal degrees\n * @param {Object} properties an Object that is used as the {@link Feature}'s\n * properties\n * @return {Point} a Point feature\n * @example\n * var pt1 = turf.point([-75.343, 39.984]);\n *\n * //=pt1\n */\nvar isArray = Array.isArray || function(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\nmodule.exports = function(coordinates, properties) {\n  if (!isArray(coordinates)) throw new Error('Coordinates must be an array');\n  if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n  return {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: coordinates\n    },\n    properties: properties || {}\n  };\n};\n", "var point = require('turf-point');\n\n/**\n * Takes a bounding box and a cell depth and returns a {@link FeatureCollection} of {@link Point} features in a grid.\n *\n * @module turf/grid\n * @category interpolation\n * @param {Array<number>} extent extent in [minX, minY, maxX, maxY] order\n * @param {Number} depth how many cells to output\n * @return {FeatureCollection} grid as FeatureCollection with {@link Point} features\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var depth = 10;\n *\n * var grid = turf.grid(extent, depth);\n *\n * //=grid\n */\nmodule.exports = function(extents, depth) {\n  var xmin = extents[0];\n  var ymin = extents[1];\n  var xmax = extents[2];\n  var ymax = extents[3];\n  var interval = (xmax - xmin) / depth;\n  var coords = [];\n  var fc = {\n    type: 'FeatureCollection',\n    features: []\n  };\n\n  for (var x=0; x<=depth; x++){\n    for (var y=0;y<=depth; y++){\n      fc.features.push(point([(x * interval) + xmin, (y * interval) + ymin]));\n    }\n  }\n  return fc;\n}\n", "/**\n * Iterate over coordinates in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (value)\n * @param {boolean=} excludeWrapCoord whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var point = { type: 'Point', coordinates: [0, 0] };\n * coordEach(point, function(coords) {\n *   // coords is equal to [0, 0]\n * });\n */\nfunction coordEach(layer, callback, excludeWrapCoord) {\n    var i, j, k, g, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        isGeometryCollection,\n        isFeatureCollection = layer.type === 'FeatureCollection',\n        isFeature = layer.type === 'Feature',\n        stop = isFeatureCollection ? layer.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? layer.features[i].geometry :\n        (isFeature ? layer.geometry : layer));\n        isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n            coords = geometry.coordinates;\n\n            wrapShrink = (excludeWrapCoord &&\n                (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon')) ?\n                1 : 0;\n\n            if (geometry.type === 'Point') {\n                callback(coords);\n            } else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n                for (j = 0; j < coords.length; j++) callback(coords[j]);\n            } else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length - wrapShrink; k++)\n                        callback(coords[j][k]);\n            } else if (geometry.type === 'MultiPolygon') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length; k++)\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++)\n                            callback(coords[j][k][l]);\n            } else {\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\nmodule.exports.coordEach = coordEach;\n\n/**\n * Reduce coordinates in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all coordinates is unnecessary.\n *\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (memo, value) and returns\n * a new memo\n * @param {*} memo the starting value of memo: can be any type.\n * @param {boolean=} excludeWrapCoord whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @return {*} combined value\n */\nfunction coordReduce(layer, callback, memo, excludeWrapCoord) {\n    coordEach(layer, function (coord) {\n        memo = callback(memo, coord);\n    }, excludeWrapCoord);\n    return memo;\n}\nmodule.exports.coordReduce = coordReduce;\n\n/**\n * Iterate over property objects in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (value)\n * @example\n * var point = { type: 'Feature', geometry: null, properties: { foo: 1 } };\n * propEach(point, function(props) {\n *   // props is equal to { foo: 1}\n * });\n */\nfunction propEach(layer, callback) {\n    var i;\n    switch (layer.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i].properties);\n        }\n        break;\n    case 'Feature':\n        callback(layer.properties);\n        break;\n    }\n}\nmodule.exports.propEach = propEach;\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (memo, coord) and returns\n * a new memo\n * @param {*} memo the starting value of memo: can be any type.\n * @return {*} combined value\n */\nfunction propReduce(layer, callback, memo) {\n    propEach(layer, function (prop) {\n        memo = callback(memo, prop);\n    });\n    return memo;\n}\nmodule.exports.propReduce = propReduce;\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (value)\n * @example\n * var feature = { type: 'Feature', geometry: null, properties: {} };\n * featureEach(feature, function(feature) {\n *   // feature == feature\n * });\n */\nfunction featureEach(layer, callback) {\n    if (layer.type === 'Feature') {\n        callback(layer);\n    } else if (layer.type === 'FeatureCollection') {\n        for (var i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i]);\n        }\n    }\n}\nmodule.exports.featureEach = featureEach;\n\n/**\n * Get all coordinates from any GeoJSON object, returning an array of coordinate\n * arrays.\n * @param {Object} layer any GeoJSON object\n * @return {Array<Array<Number>>} coordinate position array\n */\nfunction coordAll(layer) {\n    var coords = [];\n    coordEach(layer, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\nmodule.exports.coordAll = coordAll;\n", "var each = require('turf-meta').coordEach;\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {Array<number>} the bounding box of `input` given\n * as an array in WSEN order (west, south, east, north)\n * @example\n * var input = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.175329, 22.2524]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.170007, 22.267969]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.200649, 22.274641]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.186744, 22.265745]\n *       }\n *     }\n *   ]\n * };\n *\n * var bbox = turf.bbox(input);\n *\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * var resultFeatures = input.features.concat(bboxPolygon);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    each(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n};\n", "/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon needs to have properties `a`, `b`, and `c`\n * that define the values at its three corners.\n *\n * @name planepoint\n * @param {Feature<Point>} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @return {Number} the z-value for `interpolatedPoint`\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.3221, 39.529]\n *   }\n * };\n * var point = turf.point([-75.3221, 39.529]);\n * // triangle is a polygon with \"a\", \"b\",\n * // and \"c\" values representing\n * // the values of the coordinates in order.\n * var triangle = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"a\": 11,\n *     \"b\": 122,\n *     \"c\": 44\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-75.1221, 39.57],\n *       [-75.58, 39.18],\n *       [-75.97, 39.86],\n *       [-75.1221, 39.57]\n *     ]]\n *   }\n * };\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [triangle, point]\n * };\n *\n * var zValue = turf.planepoint(point, triangle);\n *\n * //=features\n *\n * //=zValue\n */\nmodule.exports = function (point, triangle) {\n    var x = point.geometry.coordinates[0],\n        y = point.geometry.coordinates[1],\n        x1 = triangle.geometry.coordinates[0][0][0],\n        y1 = triangle.geometry.coordinates[0][0][1],\n        z1 = triangle.properties.a,\n        x2 = triangle.geometry.coordinates[0][1][0],\n        y2 = triangle.geometry.coordinates[0][1][1],\n        z2 = triangle.properties.b,\n        x3 = triangle.geometry.coordinates[0][2][0],\n        y3 = triangle.geometry.coordinates[0][2][1],\n        z3 = triangle.properties.c;\n\n    var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) -\n      z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) /\n      ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) -\n       (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n\n    return z;\n};\n", "var getCoord = require('turf-invariant').getCoord;\nvar radiansToDistance = require('turf-helpers').radiansToDistance;\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Feature<Point>} from origin point\n * @param {Feature<Point>} to destination point\n * @param {String} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @return {Number} distance between the two points\n * @example\n * var from = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var to = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n * var units = \"miles\";\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [from, to]\n * };\n *\n * //=points\n *\n * var distance = turf.distance(from, to, units);\n *\n * //=distance\n */\nmodule.exports = function (from, to, units) {\n    var degrees2radians = Math.PI / 180;\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degrees2radians * (coordinates2[1] - coordinates1[1]);\n    var dLon = degrees2radians * (coordinates2[0] - coordinates1[0]);\n    var lat1 = degrees2radians * coordinates1[1];\n    var lat2 = degrees2radians * coordinates2[1];\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToDistance(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n};\n", "var distance = require('turf-distance');\n\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {Array<number>} bbox a bounding box\n * @return {Array<number>} a square surrounding `bbox`\n * @example\n * var bbox = [-20,-20,-15,0];\n *\n * var squared = turf.square(bbox);\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     turf.bboxPolygon(bbox),\n *     turf.bboxPolygon(squared)\n *   ]\n * };\n *\n * //=features\n */\nmodule.exports = function (bbox) {\n    var horizontalDistance = distance(bbox.slice(0, 2), [bbox[2], bbox[1]], 'miles');\n    var verticalDistance = distance(bbox.slice(0, 2), [bbox[0], bbox[3]], 'miles');\n    if (horizontalDistance >= verticalDistance) {\n        var verticalMidpoint = (bbox[1] + bbox[3]) / 2;\n        return [\n            bbox[0],\n            verticalMidpoint - ((bbox[2] - bbox[0]) / 2),\n            bbox[2],\n            verticalMidpoint + ((bbox[2] - bbox[0]) / 2)\n        ];\n    } else {\n        var horizontalMidpoint = (bbox[0] + bbox[2]) / 2;\n        return [\n            horizontalMidpoint - ((bbox[3] - bbox[1]) / 2),\n            bbox[1],\n            horizontalMidpoint + ((bbox[3] - bbox[1]) / 2),\n            bbox[3]\n        ];\n    }\n};\n", "/* eslint-disable */\n\n/*\n * Copyright (c) 2010, Jason Davies.\n *\n * All rights reserved.  This code is based on Bradley White's Java version,\n * which is in turn based on Nicholas Yue's C++ version, which in turn is based\n * on Paul D. Bourke's original Fortran version.  See below for the respective\n * copyright notices.\n *\n * See http://local.wasp.uwa.edu.au/~pbourke/papers/conrec/ for the original\n * paper by Paul D. Bourke.\n *\n * The vector conversion code is based on http://apptree.net/conrec.htm by\n * Graham Cox.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the <organization> nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Copyright (c) 1996-1997 Nicholas Yue\n *\n * This software is copyrighted by Nicholas Yue. This code is based on Paul D.\n * Bourke's CONREC.F routine.\n *\n * The authors hereby grant permission to use, copy, and distribute this\n * software and its documentation for any purpose, provided that existing\n * copyright notices are retained in all copies and that this notice is\n * included verbatim in any distributions. Additionally, the authors grant\n * permission to modify this software and its documentation for any purpose,\n * provided that such modifications are not distributed without the explicit\n * consent of the authors and that existing copyright notices are retained in\n * all copies. Some of the algorithms implemented by this software are\n * patented, observe all applicable patent law.\n *\n * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR\n * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT\n * OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,\n * EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS\n * PROVIDED ON AN \"AS IS\" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO\n * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\n * MODIFICATIONS.\n */\n\n\n  module.exports = Conrec;\n\n  var EPSILON = 1e-10;\n\n  function pointsEqual(a, b) {\n      var x = a.x - b.x, y = a.y - b.y;\n      return x * x + y * y < EPSILON;\n  }\n\n  function reverseList(list) {\n      var pp = list.head;\n\n      while (pp) {\n      // swap prev/next pointers\n          var temp = pp.next;\n          pp.next = pp.prev;\n          pp.prev = temp;\n\n      // continue through the list\n          pp = temp;\n      }\n\n    // swap head/tail pointers\n      var temp = list.head;\n      list.head = list.tail;\n      list.tail = temp;\n  }\n\n  function ContourBuilder(level) {\n      this.level = level;\n      this.s = null;\n      this.count = 0;\n  }\n  ContourBuilder.prototype.remove_seq = function (list) {\n    // if list is the first item, static ptr s is updated\n      if (list.prev) {\n          list.prev.next = list.next;\n      } else {\n          this.s = list.next;\n      }\n\n      if (list.next) {\n          list.next.prev = list.prev;\n      }\n      --this.count;\n  };\n  ContourBuilder.prototype.addSegment = function (a, b) {\n      var ss = this.s;\n      var ma = null;\n      var mb = null;\n      var prependA = false;\n      var prependB = false;\n\n      while (ss) {\n          if (ma == null) {\n        // no match for a yet\n              if (pointsEqual(a, ss.head.p)) {\n                  ma = ss;\n                  prependA = true;\n              } else if (pointsEqual(a, ss.tail.p)) {\n                  ma = ss;\n              }\n          }\n          if (mb == null) {\n        // no match for b yet\n              if (pointsEqual(b, ss.head.p)) {\n                  mb = ss;\n                  prependB = true;\n              } else if (pointsEqual(b, ss.tail.p)) {\n                  mb = ss;\n              }\n          }\n      // if we matched both no need to continue searching\n          if (mb != null && ma != null) {\n              break;\n          } else {\n              ss = ss.next;\n          }\n      }\n\n    // c is the case selector based on which of ma and/or mb are set\n      var c = ((ma != null) ? 1 : 0) | ((mb != null) ? 2 : 0);\n\n      switch (c) {\n      case 0:   // both unmatched, add as new sequence\n          var aa = {p: a, prev: null};\n          var bb = {p: b, next: null};\n          aa.next = bb;\n          bb.prev = aa;\n\n        // create sequence element and push onto head of main list. The order\n        // of items in this list is unimportant\n          ma = {head: aa, tail: bb, next: this.s, prev: null, closed: false};\n          if (this.s) {\n              this.s.prev = ma;\n          }\n          this.s = ma;\n\n          ++this.count;    // not essential - tracks number of unmerged sequences\n          break;\n\n      case 1:   // a matched, b did not - thus b extends sequence ma\n          var pp = {p: b};\n\n          if (prependA) {\n              pp.next = ma.head;\n              pp.prev = null;\n              ma.head.prev = pp;\n              ma.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = ma.tail;\n              ma.tail.next = pp;\n              ma.tail = pp;\n          }\n          break;\n\n      case 2:   // b matched, a did not - thus a extends sequence mb\n          var pp = {p: a};\n\n          if (prependB) {\n              pp.next = mb.head;\n              pp.prev = null;\n              mb.head.prev = pp;\n              mb.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = mb.tail;\n              mb.tail.next = pp;\n              mb.tail = pp;\n          }\n          break;\n\n      case 3:   // both matched, can merge sequences\n        // if the sequences are the same, do nothing, as we are simply closing this path (could set a flag)\n\n          if (ma === mb) {\n              var pp = {p: ma.tail.p, next: ma.head, prev: null};\n              ma.head.prev = pp;\n              ma.head = pp;\n              ma.closed = true;\n              break;\n          }\n\n        // there are 4 ways the sequence pair can be joined. The current setting of prependA and\n        // prependB will tell us which type of join is needed. For head/head and tail/tail joins\n        // one sequence needs to be reversed\n          switch ((prependA ? 1 : 0) | (prependB ? 2 : 0)) {\n          case 0:   // tail-tail\n            // reverse ma and append to mb\n              reverseList(ma);\n            // fall through to head/tail case\n          case 1:   // head-tail\n            // ma is appended to mb and ma discarded\n              mb.tail.next = ma.head;\n              ma.head.prev = mb.tail;\n              mb.tail = ma.tail;\n\n            //discard ma sequence record\n              this.remove_seq(ma);\n              break;\n\n          case 3:   // head-head\n            // reverse ma and append mb to it\n              reverseList(ma);\n            // fall through to tail/head case\n          case 2:   // tail-head\n            // mb is appended to ma and mb is discarded\n              ma.tail.next = mb.head;\n              mb.head.prev = ma.tail;\n              ma.tail = mb.tail;\n\n            //discard mb sequence record\n              this.remove_seq(mb);\n              break;\n          }\n      }\n  };\n\n  /*\n   * Implements CONREC.\n   *\n   * @private\n   * @param {function} drawContour function for drawing contour.  Defaults to a\n   *                               custom \"contour builder\", which populates the\n   *                               contours property.\n   */\n  function Conrec(drawContour) {\n      if (!drawContour) {\n          var c = this;\n          c.contours = {};\n      /**\n       * drawContour - interface for implementing the user supplied method to\n       * render the countours.\n       *\n       * Draws a line between the start and end coordinates.\n       *\n       * @private\n       * @param startX    - start coordinate for X\n       * @param startY    - start coordinate for Y\n       * @param endX      - end coordinate for X\n       * @param endY      - end coordinate for Y\n       * @param contourLevel - Contour level for line.\n       */\n          this.drawContour = function (startX, startY, endX, endY, contourLevel, k) {\n              var cb = c.contours[k];\n              if (!cb) {\n                  cb = c.contours[k] = new ContourBuilder(contourLevel);\n              }\n              cb.addSegment({x: startX, y: startY}, {x: endX, y: endY});\n          };\n          this.contourList = function () {\n              var l = [];\n              var a = c.contours;\n              for (var k in a) {\n                  var s = a[k].s;\n                  var level = a[k].level;\n                  while (s) {\n                      var h = s.head;\n                      var l2 = [];\n                      l2.level = level;\n                      l2.k = k;\n                      while (h && h.p) {\n                          l2.push(h.p);\n                          h = h.next;\n                      }\n                      l.push(l2);\n                      s = s.next;\n                  }\n              }\n              l.sort(function (a, b) { return a.k - b.k; });\n              return l;\n          };\n      } else {\n          this.drawContour = drawContour;\n      }\n      this.h  = new Array(5);\n      this.sh = new Array(5);\n      this.xh = new Array(5);\n      this.yh = new Array(5);\n  }\n\n  /*\n   * contour is a contouring subroutine for rectangularily spaced data\n   *\n   * It emits calls to a line drawing subroutine supplied by the user which\n   * draws a contour map corresponding to real*4data on a randomly spaced\n   * rectangular grid. The coordinates emitted are in the same units given in\n   * the x() and y() arrays.\n   *\n   * Any number of contour levels may be specified but they must be in order of\n   * increasing value.\n   *\n   *\n   * @param {number[][]} d - matrix of data to contour\n   * @param {number} ilb,iub,jlb,jub - index bounds of data matrix\n   *\n   *             The following two, one dimensional arrays (x and y) contain\n   *             the horizontal and vertical coordinates of each sample points.\n   * @param {number[]} x  - data matrix column coordinates\n   * @param {number[]} y  - data matrix row coordinates\n   * @param {number} nc   - number of contour levels\n   * @param {number[]} z  - contour levels in increasing order.\n   */\n  Conrec.prototype.contour = function (d, ilb, iub, jlb, jub, x, y, nc, z) {\n      var h = this.h, sh = this.sh, xh = this.xh, yh = this.yh;\n      var drawContour = this.drawContour;\n      this.contours = {};\n\n      var xsect = function (p1, p2) {\n          return (h[p2] * xh[p1] - h[p1] * xh[p2]) / (h[p2] - h[p1]);\n      };\n\n      var ysect = function (p1, p2) {\n          return (h[p2] * yh[p1] - h[p1] * yh[p2]) / (h[p2] - h[p1]);\n      };\n      var m1;\n      var m2;\n      var m3;\n      var case_value;\n      var dmin;\n      var dmax;\n      var x1 = 0.0;\n      var x2 = 0.0;\n      var y1 = 0.0;\n      var y2 = 0.0;\n\n    // The indexing of im and jm should be noted as it has to start from zero\n    // unlike the fortran counter part\n      var im = [0, 1, 1, 0];\n      var jm = [0, 0, 1, 1];\n\n    // Note that castab is arranged differently from the FORTRAN code because\n    // Fortran and C/C++ arrays are transposed of each other, in this case\n    // it is more tricky as castab is in 3 dimensions\n      var castab = [\n          [\n        [0, 0, 8], [0, 2, 5], [7, 6, 9]\n          ],\n          [\n        [0, 3, 4], [1, 3, 1], [4, 3, 0]\n          ],\n          [\n        [9, 6, 7], [5, 2, 0], [8, 0, 0]\n          ]\n      ];\n\n      for (var j = (jub - 1); j >= jlb; j--) {\n          for (var i = ilb; i <= iub - 1; i++) {\n              var temp1, temp2;\n              temp1 = Math.min(d[i][j], d[i][j + 1]);\n              temp2 = Math.min(d[i + 1][j], d[i + 1][j + 1]);\n              dmin  = Math.min(temp1, temp2);\n              temp1 = Math.max(d[i][j], d[i][j + 1]);\n              temp2 = Math.max(d[i + 1][j], d[i + 1][j + 1]);\n              dmax  = Math.max(temp1, temp2);\n\n              if (dmax >= z[0] && dmin <= z[nc - 1]) {\n                  for (var k = 0; k < nc; k++) {\n                      if (z[k] >= dmin && z[k] <= dmax) {\n                          for (var m = 4; m >= 0; m--) {\n                            if (m > 0) {\n                  // The indexing of im and jm should be noted as it has to\n                  // start from zero\n                              h[m] = d[i + im[m - 1]][j + jm[m - 1]] - z[k];\n                              xh[m] = x[i + im[m - 1]];\n                              yh[m] = y[j + jm[m - 1]];\n                          } else {\n                              h[0] = 0.25 * (h[1] + h[2] + h[3] + h[4]);\n                              xh[0] = 0.5 * (x[i] + x[i + 1]);\n                              yh[0] = 0.5 * (y[j] + y[j + 1]);\n                          }\n                            if (h[m] > EPSILON) {\n                              sh[m] = 1;\n                          } else if (h[m] < -EPSILON) {\n                            sh[m] = -1;\n                        } else\n                  sh[m] = 0;\n                        }\n              //\n              // Note: at this stage the relative heights of the corners and the\n              // centre are in the h array, and the corresponding coordinates are\n              // in the xh and yh arrays. The centre of the box is indexed by 0\n              // and the 4 corners by 1 to 4 as shown below.\n              // Each triangle is then indexed by the parameter m, and the 3\n              // vertices of each triangle are indexed by parameters m1,m2,and\n              // m3.\n              // It is assumed that the centre of the box is always vertex 2\n              // though this isimportant only when all 3 vertices lie exactly on\n              // the same contour level, in which case only the side of the box\n              // is drawn.\n              //\n              //\n              //      vertex 4 +-------------------+ vertex 3\n              //               | \\               / |\n              //               |   \\    m-3    /   |\n              //               |     \\       /     |\n              //               |       \\   /       |\n              //               |  m=2    X   m=2   |       the centre is vertex 0\n              //               |       /   \\       |\n              //               |     /       \\     |\n              //               |   /    m=1    \\   |\n              //               | /               \\ |\n              //      vertex 1 +-------------------+ vertex 2\n              //\n              //\n              //\n              //               Scan each triangle in the box\n              //\n                          for (m = 1; m <= 4; m++) {\n                            m1 = m;\n                            m2 = 0;\n                            if (m != 4) {\n                              m3 = m + 1;\n                          } else {\n                              m3 = 1;\n                          }\n                            case_value = castab[sh[m1] + 1][sh[m2] + 1][sh[m3] + 1];\n                            if (case_value != 0) {\n                              switch (case_value) {\n                            case 1: // Line between vertices 1 and 2\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xh[m2];\n                                y2 = yh[m2];\n                                break;\n                            case 2: // Line between vertices 2 and 3\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xh[m3];\n                                y2 = yh[m3];\n                                break;\n                            case 3: // Line between vertices 3 and 1\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xh[m1];\n                                y2 = yh[m1];\n                                break;\n                            case 4: // Line between vertex 1 and side 2-3\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 5: // Line between vertex 2 and side 3-1\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 6: //  Line between vertex 3 and side 1-2\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            case 7: // Line between sides 1-2 and 2-3\n                                x1 = xsect(m1, m2);\n                                y1 = ysect(m1, m2);\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 8: // Line between sides 2-3 and 3-1\n                                x1 = xsect(m2, m3);\n                                y1 = ysect(m2, m3);\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 9: // Line between sides 3-1 and 1-2\n                                x1 = xsect(m3, m1);\n                                y1 = ysect(m3, m1);\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            default:\n                                break;\n                            }\n                  // Put your processing code here and comment out the printf\n                  //printf(\"%f %f %f %f %f\\n\",x1,y1,x2,y2,z[k]);\n                              drawContour(x1, y1, x2, y2, z[k], k);\n                          }\n                        }\n                      }\n                  }\n              }\n          }\n      }\n  };\n", "//https://github.com/jasondavies/conrec.js\n//http://stackoverflow.com/questions/263305/drawing-a-topographical-map\nvar tin = require('turf-tin');\nvar inside = require('turf-inside');\nvar grid = require('turf-grid');\nvar bbox = require('turf-bbox');\nvar planepoint = require('turf-planepoint');\nvar featurecollection = require('turf-helpers').featureCollection;\nvar linestring = require('turf-helpers').lineString;\nvar square = require('turf-square');\nvar Conrec = require('./conrec');\n\n/**\n * Takes {@link Point|points} with z-values and an array of\n * value breaks and generates [isolines](http://en.wikipedia.org/wiki/Isoline).\n *\n * @name isolines\n * @param {FeatureCollection<Point>} points input points\n * @param {string} z the property name in `points` from which z-values will be pulled\n * @param {number} resolution resolution of the underlying grid\n * @param {Array<number>} breaks where to draw contours\n * @returns {FeatureCollection<LineString>} isolines\n * @example\n * // create random points with random\n * // z-values in their properties\n * var points = turf.random('point', 100, {\n *   bbox: [0, 30, 20, 50]\n * });\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = Math.random() * 10;\n * }\n * var breaks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n * var isolined = turf.isolines(points, 'z', 15, breaks);\n * //=isolined\n */\nmodule.exports = function (points, z, resolution, breaks) {\n    var tinResult = tin(points, z);\n    var bboxBBox = bbox(points);\n    var squareBBox = square(bboxBBox);\n    var gridResult = grid(squareBBox, resolution);\n    var data = [];\n\n    for (var i = 0; i < gridResult.features.length; i++) {\n        var pt = gridResult.features[i];\n        for (var j = 0; j < tinResult.features.length; j++) {\n            var triangle = tinResult.features[j];\n            if (inside(pt, triangle)) {\n                pt.properties = {};\n                pt.properties[z] = planepoint(pt, triangle);\n            }\n        }\n    }\n\n    var depth = Math.sqrt(gridResult.features.length);\n    for (var x = 0; x < depth; x++) {\n        var xGroup = gridResult.features.slice(x * depth, (x + 1) * depth);\n        var xFlat = [];\n\n        for (var g = 0; g < xGroup.length; g++) {\n            if (xGroup[g].properties) {\n                xFlat.push(xGroup[g].properties[z]);\n            } else {\n                xFlat.push(0);\n            }\n        }\n        data.push(xFlat);\n    }\n    var interval = (squareBBox[2] - squareBBox[0]) / depth;\n    var xCoordinates = [];\n    var yCoordinates = [];\n    for (var d = 0; d < depth; d++) {\n        xCoordinates.push(d * interval + squareBBox[0]);\n        yCoordinates.push(d * interval + squareBBox[1]);\n    }\n\n    var c = new Conrec();\n    c.contour(data, 0, resolution, 0, resolution, xCoordinates, yCoordinates, breaks.length, breaks);\n    var contourList = c.contourList();\n\n    var fc = featurecollection([]);\n    contourList.forEach(function (c) {\n        if (c.length > 2) {\n            var polyCoordinates = [];\n            c.forEach(function (coord) {\n                polyCoordinates.push([coord.x, coord.y]);\n            });\n            var poly = linestring(polyCoordinates);\n            poly.properties = {};\n            poly.properties[z] = c.level;\n\n            fc.features.push(poly);\n        }\n    });\n\n    return fc;\n};\n", "\"use strict\"\n\nmodule.exports = convexHull1d\n\nfunction convexHull1d(points) {\n  var lo = 0\n  var hi = 0\n  for(var i=1; i<points.length; ++i) {\n    if(points[i][0] < points[lo][0]) {\n      lo = i\n    }\n    if(points[i][0] > points[hi][0]) {\n      hi = i\n    }\n  }\n  if(lo < hi) {\n    return [[lo], [hi]]\n  } else if(lo > hi) {\n    return [[hi], [lo]]\n  } else {\n    return [[lo]]\n  }\n}", "\"use strict\"\n\nmodule.exports = twoProduct\n\nvar SPLITTER = +(Math.pow(2, 27) + 1.0)\n\nfunction twoProduct(a, b, result) {\n  var x = a * b\n\n  var c = SPLITTER * a\n  var abig = c - a\n  var ahi = c - abig\n  var alo = a - ahi\n\n  var d = SPLITTER * b\n  var bbig = d - b\n  var bhi = d - bbig\n  var blo = b - bhi\n\n  var err1 = x - (ahi * bhi)\n  var err2 = err1 - (alo * bhi)\n  var err3 = err2 - (ahi * blo)\n\n  var y = alo * blo - err3\n\n  if(result) {\n    result[0] = y\n    result[1] = x\n    return result\n  }\n\n  return [ y, x ]\n}", "\"use strict\"\n\nmodule.exports = linearExpansionSum\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction linearExpansionSum(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}", "\"use strict\"\n\nmodule.exports = fastTwoSum\n\nfunction fastTwoSum(a, b, result) {\n\tvar x = a + b\n\tvar bv = x - a\n\tvar av = x - bv\n\tvar br = b - bv\n\tvar ar = a - av\n\tif(result) {\n\t\tresult[0] = ar + br\n\t\tresult[1] = x\n\t\treturn result\n\t}\n\treturn [ar+br, x]\n}", "\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}", "\"use strict\"\n\nmodule.exports = robustSubtract\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction robustSubtract(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], -f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = -f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = -f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}", "\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar robustSubtract = require(\"robust-subtract\")\n\nvar NUM_EXPAND = 5\n\nvar EPSILON     = 1.1102230246251565e-16\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON\n\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])))\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))))\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))))\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation(n) {\n  var fn =\n    n === 3 ? orientation_3 :\n    n === 4 ? orientation_4 : orientation_5\n\n  return fn(robustSum, twoProduct, robustScale, robustSubtract)\n}\n\nvar orientation3Exact = orientation(3)\nvar orientation4Exact = orientation(4)\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) {\n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0])\n    var r = (a[0] - c[0]) * (b[1] - c[1])\n    var det = l - r\n    var s\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r)\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0]\n    var bdx = b[0] - d[0]\n    var cdx = c[0] - d[0]\n    var ady = a[1] - d[1]\n    var bdy = b[1] - d[1]\n    var cdy = c[1] - d[1]\n    var adz = a[2] - d[2]\n    var bdz = b[2] - d[2]\n    var cdz = c[2] - d[2]\n    var bdxcdy = bdx * cdy\n    var cdxbdy = cdx * bdy\n    var cdxady = cdx * ady\n    var adxcdy = adx * cdy\n    var adxbdy = adx * bdy\n    var bdxady = bdx * ady\n    var det = adz * (bdxcdy - cdxbdy)\n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady)\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz)\n    var tol = ERRBOUND4 * permanent\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n]\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length]\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length)\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction proc (slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(a0, a1)\n      case 3:\n        return o3(a0, a1, a2)\n      case 4:\n        return o4(a0, a1, a2, a3)\n      case 5:\n        return o5(a0, a1, a2, a3, a4)\n    }\n\n    var s = new Array(arguments.length)\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i]\n    }\n    return slow(s)\n  }\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length))\n  }\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED))\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i]\n  }\n}\n\ngenerateOrientationProc()", "'use strict'\n\nmodule.exports = monotoneConvexHull2D\n\nvar orient = require('robust-orientation')[3]\n\nfunction monotoneConvexHull2D(points) {\n  var n = points.length\n\n  if(n < 3) {\n    var result = new Array(n)\n    for(var i=0; i<n; ++i) {\n      result[i] = i\n    }\n\n    if(n === 2 &&\n       points[0][0] === points[1][0] &&\n       points[0][1] === points[1][1]) {\n      return [0]\n    }\n\n    return result\n  }\n\n  //Sort point indices along x-axis\n  var sorted = new Array(n)\n  for(var i=0; i<n; ++i) {\n    sorted[i] = i\n  }\n  sorted.sort(function(a,b) {\n    var d = points[a][0]-points[b][0]\n    if(d) {\n      return d\n    }\n    return points[a][1] - points[b][1]\n  })\n\n  //Construct upper and lower hulls\n  var lower = [sorted[0], sorted[1]]\n  var upper = [sorted[0], sorted[1]]\n\n  for(var i=2; i<n; ++i) {\n    var idx = sorted[i]\n    var p   = points[idx]\n\n    //Insert into lower list\n    var m = lower.length\n    while(m > 1 && orient(\n        points[lower[m-2]], \n        points[lower[m-1]], \n        p) <= 0) {\n      m -= 1\n      lower.pop()\n    }\n    lower.push(idx)\n\n    //Insert into upper list\n    m = upper.length\n    while(m > 1 && orient(\n        points[upper[m-2]], \n        points[upper[m-1]], \n        p) >= 0) {\n      m -= 1\n      upper.pop()\n    }\n    upper.push(idx)\n  }\n\n  //Merge lists together\n  var result = new Array(upper.length + lower.length - 2)\n  var ptr    = 0\n  for(var i=0, nl=lower.length; i<nl; ++i) {\n    result[ptr++] = lower[i]\n  }\n  for(var j=upper.length-2; j>0; --j) {\n    result[ptr++] = upper[j]\n  }\n\n  //Return result\n  return result\n}", "'use strict'\n\nmodule.exports = convexHull2D\n\nvar monotoneHull = require('monotone-convex-hull-2d')\n\nfunction convexHull2D(points) {\n  var hull = monotoneHull(points)\n  var h = hull.length\n  if(h <= 2) {\n    return []\n  }\n  var edges = new Array(h)\n  var a = hull[h-1]\n  for(var i=0; i<h; ++i) {\n    var b = hull[i]\n    edges[i] = [a,b]\n    a = b\n  }\n  return edges\n}\n", "/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n", "\"use strict\"; \"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  \n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nvar proto = UnionFind.prototype\n\nObject.defineProperty(proto, \"length\", {\n  \"get\": function() {\n    return this.roots.length\n  }\n})\n\nproto.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nproto.find = function(x) {\n  var x0 = x\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    x = roots[x]\n  }\n  while(roots[x0] !== x) {\n    var y = roots[x0]\n    roots[x0] = x\n    x0 = y\n  }\n  return x;\n}\n\nproto.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}", "\"use strict\"; \"use restrict\";\n\nvar bits      = require(\"bit-twiddle\")\n  , UnionFind = require(\"union-find\")\n\n//Returns the dimension of a cell complex\nfunction dimension(cells) {\n  var d = 0\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    d = max(d, cells[i].length)\n  }\n  return d-1\n}\nexports.dimension = dimension\n\n//Counts the number of vertices in faces\nfunction countVertices(cells) {\n  var vc = -1\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0, jl=c.length; j<jl; ++j) {\n      vc = max(vc, c[j])\n    }\n  }\n  return vc+1\n}\nexports.countVertices = countVertices\n\n//Returns a deep copy of cells\nfunction cloneCells(cells) {\n  var ncells = new Array(cells.length)\n  for(var i=0, il=cells.length; i<il; ++i) {\n    ncells[i] = cells[i].slice(0)\n  }\n  return ncells\n}\nexports.cloneCells = cloneCells\n\n//Ranks a pair of cells up to permutation\nfunction compareCells(a, b) {\n  var n = a.length\n    , t = a.length - b.length\n    , min = Math.min\n  if(t) {\n    return t\n  }\n  switch(n) {\n    case 0:\n      return 0;\n    case 1:\n      return a[0] - b[0];\n    case 2:\n      var d = a[0]+a[1]-b[0]-b[1]\n      if(d) {\n        return d\n      }\n      return min(a[0],a[1]) - min(b[0],b[1])\n    case 3:\n      var l1 = a[0]+a[1]\n        , m1 = b[0]+b[1]\n      d = l1+a[2] - (m1+b[2])\n      if(d) {\n        return d\n      }\n      var l0 = min(a[0], a[1])\n        , m0 = min(b[0], b[1])\n        , d  = min(l0, a[2]) - min(m0, b[2])\n      if(d) {\n        return d\n      }\n      return min(l0+a[2], l1) - min(m0+b[2], m1)\n    \n    //TODO: Maybe optimize n=4 as well?\n    \n    default:\n      var as = a.slice(0)\n      as.sort()\n      var bs = b.slice(0)\n      bs.sort()\n      for(var i=0; i<n; ++i) {\n        t = as[i] - bs[i]\n        if(t) {\n          return t\n        }\n      }\n      return 0\n  }\n}\nexports.compareCells = compareCells\n\nfunction compareZipped(a, b) {\n  return compareCells(a[0], b[0])\n}\n\n//Puts a cell complex into normal order for the purposes of findCell queries\nfunction normalize(cells, attr) {\n  if(attr) {\n    var len = cells.length\n    var zipped = new Array(len)\n    for(var i=0; i<len; ++i) {\n      zipped[i] = [cells[i], attr[i]]\n    }\n    zipped.sort(compareZipped)\n    for(var i=0; i<len; ++i) {\n      cells[i] = zipped[i][0]\n      attr[i] = zipped[i][1]\n    }\n    return cells\n  } else {\n    cells.sort(compareCells)\n    return cells\n  }\n}\nexports.normalize = normalize\n\n//Removes all duplicate cells in the complex\nfunction unique(cells) {\n  if(cells.length === 0) {\n    return []\n  }\n  var ptr = 1\n    , len = cells.length\n  for(var i=1; i<len; ++i) {\n    var a = cells[i]\n    if(compareCells(a, cells[i-1])) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      cells[ptr++] = a\n    }\n  }\n  cells.length = ptr\n  return cells\n}\nexports.unique = unique;\n\n//Finds a cell in a normalized cell complex\nfunction findCell(cells, c) {\n  var lo = 0\n    , hi = cells.length-1\n    , r  = -1\n  while (lo <= hi) {\n    var mid = (lo + hi) >> 1\n      , s   = compareCells(cells[mid], c)\n    if(s <= 0) {\n      if(s === 0) {\n        r = mid\n      }\n      lo = mid + 1\n    } else if(s > 0) {\n      hi = mid - 1\n    }\n  }\n  return r\n}\nexports.findCell = findCell;\n\n//Builds an index for an n-cell.  This is more general than dual, but less efficient\nfunction incidence(from_cells, to_cells) {\n  var index = new Array(from_cells.length)\n  for(var i=0, il=index.length; i<il; ++i) {\n    index[i] = []\n  }\n  var b = []\n  for(var i=0, n=to_cells.length; i<n; ++i) {\n    var c = to_cells[i]\n    var cl = c.length\n    for(var k=1, kn=(1<<cl); k<kn; ++k) {\n      b.length = bits.popCount(k)\n      var l = 0\n      for(var j=0; j<cl; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      var idx=findCell(from_cells, b)\n      if(idx < 0) {\n        continue\n      }\n      while(true) {\n        index[idx++].push(i)\n        if(idx >= from_cells.length || compareCells(from_cells[idx], b) !== 0) {\n          break\n        }\n      }\n    }\n  }\n  return index\n}\nexports.incidence = incidence\n\n//Computes the dual of the mesh.  This is basically an optimized version of buildIndex for the situation where from_cells is just the list of vertices\nfunction dual(cells, vertex_count) {\n  if(!vertex_count) {\n    return incidence(unique(skeleton(cells, 0)), cells, 0)\n  }\n  var res = new Array(vertex_count)\n  for(var i=0; i<vertex_count; ++i) {\n    res[i] = []\n  }\n  for(var i=0, len=cells.length; i<len; ++i) {\n    var c = cells[i]\n    for(var j=0, cl=c.length; j<cl; ++j) {\n      res[c[j]].push(i)\n    }\n  }\n  return res\n}\nexports.dual = dual\n\n//Enumerates all cells in the complex\nfunction explode(cells) {\n  var result = []\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n      , cl = c.length|0\n    for(var j=1, jl=(1<<cl); j<jl; ++j) {\n      var b = []\n      for(var k=0; k<cl; ++k) {\n        if((j >>> k) & 1) {\n          b.push(c[k])\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.explode = explode\n\n//Enumerates all of the n-cells of a cell complex\nfunction skeleton(cells, n) {\n  if(n < 0) {\n    return []\n  }\n  var result = []\n    , k0     = (1<<(n+1))-1\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var k=k0; k<(1<<c.length); k=bits.nextCombination(k)) {\n      var b = new Array(n+1)\n        , l = 0\n      for(var j=0; j<c.length; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.skeleton = skeleton;\n\n//Computes the boundary of all cells, does not remove duplicates\nfunction boundary(cells) {\n  var res = []\n  for(var i=0,il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0,cl=c.length; j<cl; ++j) {\n      var b = new Array(c.length-1)\n      for(var k=0, l=0; k<cl; ++k) {\n        if(k !== j) {\n          b[l++] = c[k]\n        }\n      }\n      res.push(b)\n    }\n  }\n  return normalize(res)\n}\nexports.boundary = boundary;\n\n//Computes connected components for a dense cell complex\nfunction connectedComponents_dense(cells, vertex_count) {\n  var labels = new UnionFind(vertex_count)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(c[j], c[k])\n      }\n    }\n  }\n  var components = []\n    , component_labels = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(cells[i][0])\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a sparse graph\nfunction connectedComponents_sparse(cells) {\n  var vertices  = unique(normalize(skeleton(cells, 0)))\n    , labels    = new UnionFind(vertices.length)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      var vj = findCell(vertices, [c[j]])\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(vj, findCell(vertices, [c[k]]))\n      }\n    }\n  }\n  var components        = []\n    , component_labels  = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(findCell(vertices, [cells[i][0]]));\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a cell complex\nfunction connectedComponents(cells, vertex_count) {\n  if(vertex_count) {\n    return connectedComponents_dense(cells, vertex_count)\n  }\n  return connectedComponents_sparse(cells)\n}\nexports.connectedComponents = connectedComponents\n", "\"use strict\"\n\n//High level idea:\n// 1. Use Clarkson's incremental construction to find convex hull\n// 2. Point location in triangulation by jump and walk\n\nmodule.exports = incrementalConvexHull\n\nvar orient = require(\"robust-orientation\")\nvar compareCell = require(\"simplicial-complex\").compareCells\n\nfunction compareInt(a, b) {\n  return a - b\n}\n\nfunction Simplex(vertices, adjacent, boundary) {\n  this.vertices = vertices\n  this.adjacent = adjacent\n  this.boundary = boundary\n  this.lastVisited = -1\n}\n\nSimplex.prototype.flip = function() {\n  var t = this.vertices[0]\n  this.vertices[0] = this.vertices[1]\n  this.vertices[1] = t\n  var u = this.adjacent[0]\n  this.adjacent[0] = this.adjacent[1]\n  this.adjacent[1] = u\n}\n\nfunction GlueFacet(vertices, cell, index) {\n  this.vertices = vertices\n  this.cell = cell\n  this.index = index\n}\n\nfunction compareGlue(a, b) {\n  return compareCell(a.vertices, b.vertices)\n}\n\nfunction bakeOrient(d) {\n  var code = [\"function orient(){var tuple=this.tuple;return test(\"]\n  for(var i=0; i<=d; ++i) {\n    if(i > 0) {\n      code.push(\",\")\n    }\n    code.push(\"tuple[\", i, \"]\")\n  }\n  code.push(\")}return orient\")\n  var proc = new Function(\"test\", code.join(\"\"))\n  var test = orient[d+1]\n  if(!test) {\n    test = orient\n  }\n  return proc(test)\n}\n\nvar BAKED = []\n\nfunction Triangulation(dimension, vertices, simplices) {\n  this.dimension = dimension\n  this.vertices = vertices\n  this.simplices = simplices\n  this.interior = simplices.filter(function(c) {\n    return !c.boundary\n  })\n\n  this.tuple = new Array(dimension+1)\n  for(var i=0; i<=dimension; ++i) {\n    this.tuple[i] = this.vertices[i]\n  }\n\n  var o = BAKED[dimension]\n  if(!o) {\n    o = BAKED[dimension] = bakeOrient(dimension)\n  }\n  this.orient = o\n}\n\nvar proto = Triangulation.prototype\n\n//Degenerate situation where we are on boundary, but coplanar to face\nproto.handleBoundaryDegeneracy = function(cell, point) {\n  var d = this.dimension\n  var n = this.vertices.length - 1\n  var tuple = this.tuple\n  var verts = this.vertices\n\n  //Dumb solution: Just do dfs from boundary cell until we find any peak, or terminate\n  var toVisit = [ cell ]\n  cell.lastVisited = -n\n  while(toVisit.length > 0) {\n    cell = toVisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited <= -n) {\n        continue\n      }\n      var nv = neighbor.vertices\n      for(var j=0; j<=d; ++j) {\n        var vv = nv[j]\n        if(vv < 0) {\n          tuple[j] = point\n        } else {\n          tuple[j] = verts[vv]\n        }\n      }\n      var o = this.orient()\n      if(o > 0) {\n        return neighbor\n      }\n      neighbor.lastVisited = -n\n      if(o === 0) {\n        toVisit.push(neighbor)\n      }\n    }\n  }\n  return null\n}\n\nproto.walk = function(point, random) {\n  //Alias local properties\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n\n  //Compute initial jump cell\n  var initIndex = random ? (this.interior.length * Math.random())|0 : (this.interior.length-1)\n  var cell = this.interior[ initIndex ]\n\n  //Start walking\nouterLoop:\n  while(!cell.boundary) {\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n\n    for(var i=0; i<=d; ++i) {\n      tuple[i] = verts[cellVerts[i]]\n    }\n    cell.lastVisited = n\n\n    //Find farthest adjacent cell\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(neighbor.lastVisited >= n) {\n        continue\n      }\n      var prev = tuple[i]\n      tuple[i] = point\n      var o = this.orient()\n      tuple[i] = prev\n      if(o < 0) {\n        cell = neighbor\n        continue outerLoop\n      } else {\n        if(!neighbor.boundary) {\n          neighbor.lastVisited = n\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n    }\n    return\n  }\n\n  return cell\n}\n\nproto.addPeaks = function(point, cell) {\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n  var interior = this.interior\n  var simplices = this.simplices\n\n  //Walking finished at boundary, time to add peaks\n  var tovisit = [ cell ]\n\n  //Stretch initial boundary cell into a peak\n  cell.lastVisited = n\n  cell.vertices[cell.vertices.indexOf(-1)] = n\n  cell.boundary = false\n  interior.push(cell)\n\n  //Record a list of all new boundaries created by added peaks so we can glue them together when we are all done\n  var glueFacets = []\n\n  //Do a traversal of the boundary walking outward from starting peak\n  while(tovisit.length > 0) {\n    //Pop off peak and walk over adjacent cells\n    var cell = tovisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    var indexOfN = cellVerts.indexOf(n)\n    if(indexOfN < 0) {\n      continue\n    }\n\n    for(var i=0; i<=d; ++i) {\n      if(i === indexOfN) {\n        continue\n      }\n\n      //For each boundary neighbor of the cell\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited >= n) {\n        continue\n      }\n\n      var nv = neighbor.vertices\n\n      //Test if neighbor is a peak\n      if(neighbor.lastVisited !== -n) {      \n        //Compute orientation of p relative to each boundary peak\n        var indexOfNeg1 = 0\n        for(var j=0; j<=d; ++j) {\n          if(nv[j] < 0) {\n            indexOfNeg1 = j\n            tuple[j] = point\n          } else {\n            tuple[j] = verts[nv[j]]\n          }\n        }\n        var o = this.orient()\n\n        //Test if neighbor cell is also a peak\n        if(o > 0) {\n          nv[indexOfNeg1] = n\n          neighbor.boundary = false\n          interior.push(neighbor)\n          tovisit.push(neighbor)\n          neighbor.lastVisited = n\n          continue\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n\n      var na = neighbor.adjacent\n\n      //Otherwise, replace neighbor with new face\n      var vverts = cellVerts.slice()\n      var vadj = cellAdj.slice()\n      var ncell = new Simplex(vverts, vadj, true)\n      simplices.push(ncell)\n\n      //Connect to neighbor\n      var opposite = na.indexOf(cell)\n      if(opposite < 0) {\n        continue\n      }\n      na[opposite] = ncell\n      vadj[indexOfN] = neighbor\n\n      //Connect to cell\n      vverts[i] = -1\n      vadj[i] = cell\n      cellAdj[i] = ncell\n\n      //Flip facet\n      ncell.flip()\n\n      //Add to glue list\n      for(var j=0; j<=d; ++j) {\n        var uu = vverts[j]\n        if(uu < 0 || uu === n) {\n          continue\n        }\n        var nface = new Array(d-1)\n        var nptr = 0\n        for(var k=0; k<=d; ++k) {\n          var vv = vverts[k]\n          if(vv < 0 || k === j) {\n            continue\n          }\n          nface[nptr++] = vv\n        }\n        glueFacets.push(new GlueFacet(nface, ncell, j))\n      }\n    }\n  }\n\n  //Glue boundary facets together\n  glueFacets.sort(compareGlue)\n\n  for(var i=0; i+1<glueFacets.length; i+=2) {\n    var a = glueFacets[i]\n    var b = glueFacets[i+1]\n    var ai = a.index\n    var bi = b.index\n    if(ai < 0 || bi < 0) {\n      continue\n    }\n    a.cell.adjacent[a.index] = b.cell\n    b.cell.adjacent[b.index] = a.cell\n  }\n}\n\nproto.insert = function(point, random) {\n  //Add point\n  var verts = this.vertices\n  verts.push(point)\n\n  var cell = this.walk(point, random)\n  if(!cell) {\n    return\n  }\n\n  //Alias local properties\n  var d = this.dimension\n  var tuple = this.tuple\n\n  //Degenerate case: If point is coplanar to cell, then walk until we find a non-degenerate boundary\n  for(var i=0; i<=d; ++i) {\n    var vv = cell.vertices[i]\n    if(vv < 0) {\n      tuple[i] = point\n    } else {\n      tuple[i] = verts[vv]\n    }\n  }\n  var o = this.orient(tuple)\n  if(o < 0) {\n    return\n  } else if(o === 0) {\n    cell = this.handleBoundaryDegeneracy(cell, point)\n    if(!cell) {\n      return\n    }\n  }\n\n  //Add peaks\n  this.addPeaks(point, cell)\n}\n\n//Extract all boundary cells\nproto.boundary = function() {\n  var d = this.dimension\n  var boundary = []\n  var cells = this.simplices\n  var nc = cells.length\n  for(var i=0; i<nc; ++i) {\n    var c = cells[i]\n    if(c.boundary) {\n      var bcell = new Array(d)\n      var cv = c.vertices\n      var ptr = 0\n      var parity = 0\n      for(var j=0; j<=d; ++j) {\n        if(cv[j] >= 0) {\n          bcell[ptr++] = cv[j]\n        } else {\n          parity = j&1\n        }\n      }\n      if(parity === (d&1)) {\n        var t = bcell[0]\n        bcell[0] = bcell[1]\n        bcell[1] = t\n      }\n      boundary.push(bcell)\n    }\n  }\n  return boundary\n}\n\nfunction incrementalConvexHull(points, randomSearch) {\n  var n = points.length\n  if(n === 0) {\n    throw new Error(\"Must have at least d+1 points\")\n  }\n  var d = points[0].length\n  if(n <= d) {\n    throw new Error(\"Must input at least d+1 points\")\n  }\n\n  //FIXME: This could be degenerate, but need to select d+1 non-coplanar points to bootstrap process\n  var initialSimplex = points.slice(0, d+1)\n\n  //Make sure initial simplex is positively oriented\n  var o = orient.apply(void 0, initialSimplex)\n  if(o === 0) {\n    throw new Error(\"Input not in general position\")\n  }\n  var initialCoords = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    initialCoords[i] = i\n  }\n  if(o < 0) {\n    initialCoords[0] = 1\n    initialCoords[1] = 0\n  }\n\n  //Create initial topological index, glue pointers together (kind of messy)\n  var initialCell = new Simplex(initialCoords, new Array(d+1), false)\n  var boundary = initialCell.adjacent\n  var list = new Array(d+2)\n  for(var i=0; i<=d; ++i) {\n    var verts = initialCoords.slice()\n    for(var j=0; j<=d; ++j) {\n      if(j === i) {\n        verts[j] = -1\n      }\n    }\n    var t = verts[0]\n    verts[0] = verts[1]\n    verts[1] = t\n    var cell = new Simplex(verts, new Array(d+1), true)\n    boundary[i] = cell\n    list[i] = cell\n  }\n  list[d+1] = initialCell\n  for(var i=0; i<=d; ++i) {\n    var verts = boundary[i].vertices\n    var adj = boundary[i].adjacent\n    for(var j=0; j<=d; ++j) {\n      var v = verts[j]\n      if(v < 0) {\n        adj[j] = initialCell\n        continue\n      }\n      for(var k=0; k<=d; ++k) {\n        if(boundary[k].vertices.indexOf(v) < 0) {\n          adj[j] = boundary[k]\n        }\n      }\n    }\n  }\n\n  //Initialize triangles\n  var triangles = new Triangulation(d, initialSimplex, list)\n\n  //Insert remaining points\n  var useRandom = !!randomSearch\n  for(var i=d+1; i<n; ++i) {\n    triangles.insert(points[i], useRandom)\n  }\n  \n  //Extract boundary cells\n  return triangles.boundary()\n}", "'use strict'\n\nmodule.exports = affineHull\n\nvar orient = require('robust-orientation')\n\nfunction linearlyIndependent(points, d) {\n  var nhull = new Array(d+1)\n  for(var i=0; i<points.length; ++i) {\n    nhull[i] = points[i]\n  }\n  for(var i=0; i<=points.length; ++i) {\n    for(var j=points.length; j<=d; ++j) {\n      var x = new Array(d)\n      for(var k=0; k<d; ++k) {\n        x[k] = Math.pow(j+1-i, k)\n      }\n      nhull[j] = x\n    }\n    var o = orient.apply(void 0, nhull)\n    if(o) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction affineHull(points) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  }\n  if(n === 1) {\n    return [0]\n  }\n  var d = points[0].length\n  var frame = [ points[0] ]\n  var index = [ 0 ]\n  for(var i=1; i<n; ++i) {\n    frame.push(points[i])\n    if(!linearlyIndependent(frame, d)) {\n      frame.pop()\n      continue\n    }\n    index.push(i)\n    if(index.length === d+1) {\n      return index\n    }\n  }\n  return index\n}", "'use strict'\n\nmodule.exports = convexHullnD\n\nvar ich = require('incremental-convex-hull')\nvar aff = require('affine-hull')\n\nfunction permute(points, front) {\n  var n = points.length\n  var npoints = new Array(n)\n  for(var i=0; i<front.length; ++i) {\n    npoints[i] = points[front[i]]\n  }\n  var ptr = front.length\n  for(var i=0; i<n; ++i) {\n    if(front.indexOf(i) < 0) {\n      npoints[ptr++] = points[i]\n    }\n  }\n  return npoints\n}\n\nfunction invPermute(cells, front) {\n  var nc = cells.length\n  var nf = front.length\n  for(var i=0; i<nc; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      var x = c[j]\n      if(x < nf) {\n        c[j] = front[x]\n      } else {\n        x = x - nf\n        for(var k=0; k<nf; ++k) {\n          if(x >= front[k]) {\n            x += 1\n          }\n        }\n        c[j] = x\n      }\n    }\n  }\n  return cells\n}\n\nfunction convexHullnD(points, d) {\n  try {\n    return ich(points, true)\n  } catch(e) {\n    //If point set is degenerate, try to find a basis and rerun it\n    var ah = aff(points)\n    if(ah.length <= d) {\n      //No basis, no try\n      return []\n    }\n    var npoints = permute(points, ah)\n    var nhull   = ich(npoints, true)\n    return invPermute(nhull, ah)\n  }\n}", "\"use strict\"\n\nvar convexHull1d = require('./lib/ch1d')\nvar convexHull2d = require('./lib/ch2d')\nvar convexHullnd = require('./lib/chnd')\n\nmodule.exports = convexHull\n\nfunction convexHull(points) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  } else if(n === 1) {\n    return [[0]]\n  }\n  var d = points[0].length\n  if(d === 0) {\n    return []\n  } else if(d === 1) {\n    return convexHull1d(points)\n  } else if(d === 2) {\n    return convexHull2d(points)\n  }\n  return convexHullnd(points, d)\n}", "var each = require('turf-meta').coordEach,\n    convexHull = require('convex-hull'),\n    polygon = require('turf-helpers').polygon;\n\n/**\n * Takes a set of {@link Point|points} and returns a\n * [convex hull](http://en.wikipedia.org/wiki/Convex_hull) polygon.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that\n * implements a [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {FeatureCollection<Point>} featurecollection input points\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.195312, 43.755225]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.404052, 43.8424511]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.579833, 43.659924]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.360107, 43.516688]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.14038, 43.588348]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.195312, 43.755225]\n *       }\n *     }\n *   ]\n * };\n *\n * var hull = turf.convex(points);\n *\n * var resultFeatures = points.features.concat(hull);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (featurecollection) {\n    var points = [];\n    each(featurecollection, function (coord) { points.push(coord); });\n    var hull = convexHull(points);\n    if (hull.length > 0) {\n        var ring = [];\n        for (var i = 0; i < hull.length; i++) {\n            ring.push(points[hull[i][0]]);\n        }\n        ring.push(points[hull[hull.length - 1][1]]);\n        return polygon([ring]);\n    }\n    return undefined;\n};\n", "var inside = require('turf-inside');\nvar featureCollection = require('turf-helpers').featureCollection;\n\n/**\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and returns the points that fall within the polygons.\n *\n * @name within\n * @param {FeatureCollection<Point>} points input points\n * @param {FeatureCollection<Polygon>} polygons input polygons\n * @return {FeatureCollection<Point>} points that land within at least one polygon\n * @example\n * var searchWithin = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-46.653,-23.543],\n *           [-46.634,-23.5346],\n *           [-46.613,-23.543],\n *           [-46.614,-23.559],\n *           [-46.631,-23.567],\n *           [-46.653,-23.560],\n *           [-46.653,-23.543]\n *         ]]\n *       }\n *     }\n *   ]\n * };\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6318, -23.5523]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6246, -23.5325]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6062, -23.5513]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.663, -23.554]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.643, -23.557]\n *       }\n *     }\n *   ]\n * };\n *\n * var ptsWithin = turf.within(points, searchWithin);\n *\n * //=points\n *\n * //=searchWithin\n *\n * //=ptsWithin\n */\nmodule.exports = function (points, polygons) {\n    var pointsWithin = featureCollection([]);\n    for (var i = 0; i < polygons.features.length; i++) {\n        for (var j = 0; j < points.features.length; j++) {\n            var isInside = inside(points.features[j], polygons.features[i]);\n            if (isInside) {\n                pointsWithin.features.push(points.features[j]);\n            }\n        }\n    }\n    return pointsWithin;\n};\n", "// JSTS. See https://github.com/bjornharrtell/jsts\n// Licenses:\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EDLv1.txt\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_LICENSE_ES6_COLLECTIONS.txt\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts=t.jsts||{})}(this,function(t){\"use strict\";function e(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}function n(){}function i(){}function r(){}function s(){}function o(){}function a(){}function u(){}function l(t){this.message=t}function h(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t}function c(){if(0===arguments.length)l.call(this);else if(1===arguments.length){var t=arguments[0];l.call(this,t)}}function f(){}function g(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)g.call(this,0,0);else if(1===arguments.length){var t=arguments[0];g.call(this,t.x,t.y,t.z)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];g.call(this,e,n,g.NULL_ORDINATE)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.x=i,this.y=r,this.z=s}}function d(){if(this.dimensionsToTest=2,0===arguments.length)d.call(this,2);else if(1===arguments.length){var t=arguments[0];if(2!==t&&3!==t)throw new i(\"only 2 or 3 dimensions may be specified\");this.dimensionsToTest=t}}function p(){}function v(){}function m(t){this.message=t||\"\"}function y(){}function x(t){this.message=t||\"\"}function E(t){this.message=t||\"\"}function I(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function N(){if(I.apply(this),0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.ensureCapacity(e.length),this.add(e,n)}}function C(){if(this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];this.init(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];this.init(r,s,o,a)}}function S(){}function w(){S.call(this,\"Projective point not representable on the Cartesian plane.\")}function L(){}function R(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1}function T(){}function P(t){this.str=t}function b(t){this.value=t}function O(){}function _(){if(this.hi=0,this.lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.init(t)}else if(arguments[0]instanceof _){var e=arguments[0];this.init(e)}else if(\"string\"==typeof arguments[0]){var n=arguments[0];_.call(this,_.parse(n))}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i,r)}}function M(){}function D(){}function A(){}function F(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];this.x=e,this.y=n,this.w=1}else if(arguments[0]instanceof F&&arguments[1]instanceof F){var i=arguments[0],r=arguments[1];this.x=i.y*r.w-r.y*i.w,this.y=r.x*i.w-i.x*r.w,this.w=i.x*r.y-r.x*i.y}else if(arguments[0]instanceof g&&arguments[1]instanceof g){var s=arguments[0],o=arguments[1];this.x=s.y-o.y,this.y=o.x-s.x,this.w=s.x*o.y-o.x*s.y}}else if(3===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2];this.x=a,this.y=u,this.w=l}else if(4===arguments.length){var h=arguments[0],c=arguments[1],f=arguments[2],d=arguments[3],p=h.y-c.y,v=c.x-h.x,m=h.x*c.y-c.x*h.y,y=f.y-d.y,x=d.x-f.x,E=f.x*d.y-d.x*f.y;this.x=v*E-x*m,this.y=y*m-p*E,this.w=p*x-y*v}}function G(){}function q(){}function B(){this.envelope=null,this.factory=null,this.SRID=null,this.userData=null;var t=arguments[0];this.factory=t,this.SRID=t.getSRID()}function z(){}function V(){}function k(){}function Y(){}function U(){}function X(){}function H(){}function W(){}function j(){}function K(){}function Z(){}function Q(){}function J(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function $(t){return null==t?$s:t.color}function tt(t){return null==t?null:t.parent}function et(t,e){null!==t&&(t.color=e)}function nt(t){return null==t?null:t.left}function it(t){return null==t?null:t.right}function rt(){this.root_=null,this.size_=0}function st(){}function ot(){}function at(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function ut(){}function lt(){}function ht(){}function ct(){}function ft(){this.geometries=null;var t=arguments[0],e=arguments[1];if(B.call(this,e),null===t&&(t=[]),B.hasNullElements(t))throw new i(\"geometries must not contain null elements\");this.geometries=t}function gt(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function dt(){if(this.geom=null,this.geomFact=null,this.bnRule=null,this.endpointMap=null,1===arguments.length){var t=arguments[0];dt.call(this,t,V.MOD2_BOUNDARY_RULE)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.geom=e,this.geomFact=e.getFactory(),this.bnRule=n}}function pt(){this.count=null}function vt(){}function mt(){}function yt(){}function xt(){}function Et(){}function It(){}function Nt(){}function Ct(){}function St(){this.points=null;var t=arguments[0],e=arguments[1];B.call(this,e),this.init(t)}function wt(){}function Lt(){this.coordinates=null;var t=arguments[0],e=arguments[1];B.call(this,e),this.init(t)}function Rt(){}function Tt(){this.shell=null,this.holes=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(B.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),B.hasNullElements(e))throw new i(\"holes must not contain null elements\");if(t.isEmpty()&&B.hasNonEmptyElements(e))throw new i(\"shell is empty but holes are not\");this.shell=t,this.holes=e}function Pt(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function bt(){if(arguments[0]instanceof g&&arguments[1]instanceof ie){var t=arguments[0],e=arguments[1];bt.call(this,e.getCoordinateSequenceFactory().create(t),e)}else if(R(arguments[0],D)&&arguments[1]instanceof ie){var n=arguments[0],i=arguments[1];St.call(this,n,i),this.validateConstruction()}}function Ot(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function _t(){if(this.factory=null,this.isUserDataCopied=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.factory=t}}function Mt(){}function Dt(){}function At(){}function Ft(){}function Gt(){if(this.dimension=3,this.coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];Gt.call(this,t,3)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.coordinates=new Array(e).fill(null);for(var n=0;e>n;n++)this.coordinates[n]=new g}else if(R(arguments[0],D)){var i=arguments[0];if(null===i)return this.coordinates=new Array(0).fill(null),null;this.dimension=i.getDimension(),this.coordinates=new Array(i.size()).fill(null);for(var n=0;n<this.coordinates.length;n++)this.coordinates[n]=i.getCoordinateCopy(n)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],s=arguments[1];this.coordinates=r,this.dimension=s,null===r&&(this.coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var o=arguments[0],a=arguments[1];this.coordinates=new Array(o).fill(null),this.dimension=a;for(var n=0;o>n;n++)this.coordinates[n]=new g}}function qt(){}function Bt(t,e){return t===e||t!==t&&e!==e}function zt(t,e){function n(t){return this&&this.constructor===n?(this._keys=[],this._values=[],this._itp=[],this.objectOnly=e,void(t&&Vt.call(this,t))):new n(t)}return e||io(t,\"size\",{get:Jt}),t.constructor=n,n.prototype=t,n}function Vt(t){this.add?t.forEach(this.add,this):t.forEach(function(t){this.set(t[0],t[1])},this)}function kt(t){return this.has(t)&&(this._keys.splice(no,1),this._values.splice(no,1),this._itp.forEach(function(t){no<t[0]&&t[0]--})),no>-1}function Yt(t){return this.has(t)?this._values[no]:void 0}function Ut(t,e){if(this.objectOnly&&e!==Object(e))throw new TypeError(\"Invalid value used as weak collection key\");if(e!==e||0===e)for(no=t.length;no--&&!Bt(t[no],e););else no=t.indexOf(e);return no>-1}function Xt(t){return Ut.call(this,this._keys,t)}function Ht(t,e){return this.has(t)?this._values[no]=e:this._values[this._keys.push(t)-1]=e,this}function Wt(){(this._keys||0).length=this._values.length=0}function jt(){return Qt(this._itp,this._keys)}function Kt(){return Qt(this._itp,this._values)}function Zt(){return Qt(this._itp,this._keys,this._values)}function Qt(t,e,n){var i=[0],r=!1;return t.push(i),{next:function(){var s,o=i[0];return!r&&o<e.length?(s=n?[e[o],n[o]]:e[o],i[0]++):(r=!0,t.splice(t.indexOf(i),1)),{done:r,value:s}}}}function Jt(){return this._values.length}function $t(t,e){for(var n=this.entries();;){var i=n.next();if(i.done)break;t.call(e,i.value[1],i.value[0],this)}}function te(){this.map_=new so}function ee(){if(this.modelType=null,this.scale=null,0===arguments.length)this.modelType=ee.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof ne){var t=arguments[0];this.modelType=t,t===ee.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var e=arguments[0];this.modelType=ee.FIXED,this.setScale(e)}else if(arguments[0]instanceof ee){var n=arguments[0];this.modelType=n.modelType,this.scale=n.scale}}function ne(){this.name=null;var t=arguments[0];this.name=t,ne.nameToTypeMap.put(t,this)}function ie(){if(this.precisionModel=null,this.coordinateSequenceFactory=null,this.SRID=null,0===arguments.length)ie.call(this,new ee,0);else if(1===arguments.length){if(R(arguments[0],G)){var t=arguments[0];ie.call(this,new ee,0,t)}else if(arguments[0]instanceof ee){var e=arguments[0];ie.call(this,e,0,ie.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];ie.call(this,n,i,ie.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.precisionModel=r,this.coordinateSequenceFactory=o,this.SRID=s}}function re(t){this.geometryFactory=t||new ie}function se(t){this.parser=new re(t)}function oe(){this.result=null,this.inputLines=Array(2).fill().map(function(){return Array(2)}),this.intPt=new Array(2).fill(null),this.intLineIndex=null,this._isProper=null,this.pa=null,this.pb=null,this.precisionModel=null,this.intPt[0]=new g,this.intPt[1]=new g,this.pa=this.intPt[0],this.pb=this.intPt[1],this.result=0}function ae(){oe.apply(this)}function ue(){}function le(){this.p=null,this.crossingCount=0,this.isPointOnSegment=!1;var t=arguments[0];this.p=t}function he(){}function ce(){if(this.p0=null,this.p1=null,0===arguments.length)ce.call(this,new g,new g);else if(1===arguments.length){var t=arguments[0];ce.call(this,t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0=e,this.p1=n}else if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3];ce.call(this,new g(i,r),new g(s,o))}}function fe(){if(this.matrix=null,0===arguments.length)this.matrix=Array(3).fill().map(function(){return Array(3)}),this.setAll(lt.FALSE);else if(1===arguments.length)if(\"string\"==typeof arguments[0]){var t=arguments[0];fe.call(this),this.set(t)}else if(arguments[0]instanceof fe){var e=arguments[0];fe.call(this),this.matrix[L.INTERIOR][L.INTERIOR]=e.matrix[L.INTERIOR][L.INTERIOR],this.matrix[L.INTERIOR][L.BOUNDARY]=e.matrix[L.INTERIOR][L.BOUNDARY],this.matrix[L.INTERIOR][L.EXTERIOR]=e.matrix[L.INTERIOR][L.EXTERIOR],this.matrix[L.BOUNDARY][L.INTERIOR]=e.matrix[L.BOUNDARY][L.INTERIOR],this.matrix[L.BOUNDARY][L.BOUNDARY]=e.matrix[L.BOUNDARY][L.BOUNDARY],this.matrix[L.BOUNDARY][L.EXTERIOR]=e.matrix[L.BOUNDARY][L.EXTERIOR],this.matrix[L.EXTERIOR][L.INTERIOR]=e.matrix[L.EXTERIOR][L.INTERIOR],this.matrix[L.EXTERIOR][L.BOUNDARY]=e.matrix[L.EXTERIOR][L.BOUNDARY],this.matrix[L.EXTERIOR][L.EXTERIOR]=e.matrix[L.EXTERIOR][L.EXTERIOR]}}function ge(){this.areaBasePt=null,this.triangleCent3=new g,this.areasum2=0,this.cg3=new g,this.lineCentSum=new g,this.totalLength=0,this.ptCount=0,this.ptCentSum=new g;var t=arguments[0];this.areaBasePt=null,this.add(t)}function de(t){this.message=t||\"\"}function pe(){this.array_=[]}function ve(){this.treeSet=new at,this.list=new I}function me(){if(this.geomFactory=null,this.inputPts=null,1===arguments.length){var t=arguments[0];me.call(this,me.extractCoordinates(t),t.getFactory())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputPts=ve.filterCoordinates(e),this.geomFactory=n}}function ye(){this.origin=null;var t=arguments[0];this.origin=t}function xe(){this.inputGeom=null,this.factory=null,this.pruneEmptyGeometry=!0,this.preserveGeometryCollectionType=!0,this.preserveCollections=!1,this.preserveType=!1}function Ee(){if(this.snapTolerance=0,this.srcPts=null,this.seg=new ce,this.allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof St&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];Ee.call(this,t.getCoordinates(),e)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.srcPts=n,this._isClosed=Ee.isClosed(n),this.snapTolerance=i}}function Ie(){this.srcGeom=null;var t=arguments[0];this.srcGeom=t}function Ne(){if(xe.apply(this),this.snapTolerance=null,this.snapPts=null,this.isSelfSnap=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this.snapTolerance=t,this.snapPts=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.snapTolerance=n,this.snapPts=i,this.isSelfSnap=r}}function Ce(){this.isFirst=!0,this.commonMantissaBitsCount=53,this.commonBits=0,this.commonSignExp=null}function Se(){this.commonCoord=null,this.ccFilter=new we}function we(){this.commonBitsX=new Ce,this.commonBitsY=new Ce}function Le(){this.trans=null;var t=arguments[0];this.trans=t}function Re(){this.parent=null,this.atStart=null,this.max=null,this.index=null,this.subcollectionIterator=null;var t=arguments[0];this.parent=t,this.atStart=!0,this.index=0,this.max=t.getNumGeometries()}function Te(){if(this.boundaryRule=V.OGC_SFS_BOUNDARY_RULE,this.isIn=null,this.numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new i(\"Rule must be non-null\");this.boundaryRule=t}}function Pe(){}function be(){}function Oe(){this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function _e(){}function Me(){this.bounds=null,this.item=null;var t=arguments[0],e=arguments[1];this.bounds=t,this.item=e}function De(){this._size=null,this.items=null,this._size=0,this.items=new I,this.items.add(null)}function Ae(){}function Fe(){}function Ge(){if(this.childBoundables=new I,this.bounds=null,this.level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.level=t}}function qe(){this.boundable1=null,this.boundable2=null,this._distance=null,this.itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.boundable1=t,this.boundable2=e,this.itemDistance=n,this._distance=this.distance()}function Be(){if(this.root=null,this.built=!1,this.itemBoundables=new I,this.nodeCapacity=null,0===arguments.length)Be.call(this,Be.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];f.isTrue(t>1,\"Node capacity must be greater than 1\"),this.nodeCapacity=t}}function ze(){}function Ve(){}function ke(){if(0===arguments.length)ke.call(this,ke.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];Be.call(this,t)}}function Ye(){var t=arguments[0];Ge.call(this,t)}function Ue(){}function Xe(){this.segString=null,this.coord=null,this.segmentIndex=null,this.segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.segString=t,this.coord=new g(e),this.segmentIndex=n,this.segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}function He(){this.nodeMap=new rt,this.edge=null;var t=arguments[0];this.edge=t}function We(){this.nodeList=null,this.edge=null,this.nodeIt=null,this.currNode=null,this.nextNode=null,this.currSegIndex=0;var t=arguments[0];this.nodeList=t,this.edge=t.getEdge(),this.nodeIt=t.iterator(),this.readNextNode()}function je(){}function Ke(){this.nodeList=new He(this),this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function Ze(){this.tempEnv1=new C,this.tempEnv2=new C,this.overlapSeg1=new ce,this.overlapSeg2=new ce}function Qe(){this.pts=null,this.start=null,this.end=null,this.env=null,this.context=null,this.id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.pts=t,this.start=e,this.end=n,this.context=i}function Je(){}function $e(){}function tn(){}function en(){if(this.segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}}function nn(){if(this.monoChains=new I,this.index=new ke,this.idCounter=0,this.nodedSegStrings=null,this.nOverlaps=0,0===arguments.length);else if(1===arguments.length){var t=arguments[0];en.call(this,t)}}function rn(){Ze.apply(this),this.si=null;var t=arguments[0];this.si=t}function sn(){if(this.pt=null,1===arguments.length){var t=arguments[0];l.call(this,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];l.call(this,sn.msgWithCoord(e,n)),this.pt=new g(n)}}function on(){}function an(){this.findAllIntersections=!1,this.isCheckEndSegmentsOnly=!1,this.li=null,this.interiorIntersection=null,this.intSegments=null,this.intersections=new I,this.intersectionCount=0,this.keepIntersections=!0;var t=arguments[0];this.li=t,this.interiorIntersection=null}function un(){this.li=new ae,this.segStrings=null,this.findAllIntersections=!1,this.segInt=null,this._isValid=!0;var t=arguments[0];this.segStrings=t}function ln(){this.nv=null;var t=arguments[0];this.nv=new un(ln.toSegmentStrings(t))}function hn(){this.mapOp=null;var t=arguments[0];this.mapOp=t}function cn(){}function fn(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.init(1),this.location[cn.ON]=e}else if(arguments[0]instanceof fn){var n=arguments[0];if(this.init(n.location.length),null!==n)for(var i=0;i<this.location.length;i++)this.location[i]=n.location[i]}}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.init(3),this.location[cn.ON]=r,this.location[cn.LEFT]=s,this.location[cn.RIGHT]=o}}function gn(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var t=arguments[0];this.elt[0]=new fn(t),this.elt[1]=new fn(t)}else if(arguments[0]instanceof gn){var e=arguments[0];this.elt[0]=new fn(e.elt[0]),this.elt[1]=new fn(e.elt[1])}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.elt[0]=new fn(L.NONE),this.elt[1]=new fn(L.NONE),this.elt[n].setLocation(i)}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.elt[0]=new fn(r,s,o),this.elt[1]=new fn(r,s,o)}else if(4===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2],h=arguments[3];this.elt[0]=new fn(L.NONE,L.NONE,L.NONE),this.elt[1]=new fn(L.NONE,L.NONE,L.NONE),this.elt[a].setLocations(u,l,h)}}function dn(){this.startDe=null,this.maxNodeDegree=-1,this.edges=new I,this.pts=new I,this.label=new gn(L.NONE),this.ring=null,this._isHole=null,this.shell=null,this.holes=new I,this.geometryFactory=null;var t=arguments[0],e=arguments[1];this.geometryFactory=e,this.computePoints(t),this.computeRing()}function pn(){var t=arguments[0],e=arguments[1];dn.call(this,t,e)}function vn(){var t=arguments[0],e=arguments[1];dn.call(this,t,e)}function mn(){if(this.label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.label=t}}function yn(){mn.apply(this),this.coord=null,this.edges=null;var t=arguments[0],e=arguments[1];this.coord=t,this.edges=e,this.label=new gn(0,L.NONE)}function xn(){this.nodeMap=new rt,this.nodeFact=null;var t=arguments[0];this.nodeFact=t}function En(){if(this.edge=null,this.label=null,this.node=null,this.p0=null,this.p1=null,this.dx=null,this.dy=null,this.quadrant=null,1===arguments.length){var t=arguments[0];this.edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];En.call(this,e,n,i,null)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];En.call(this,r),this.init(s,o),this.label=a}}function In(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this.sym=null,this.next=null,this.nextMin=null,this.edgeRing=null,this.minEdgeRing=null,this.depth=[0,-999,-999];var t=arguments[0],e=arguments[1];if(En.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var n=t.getNumPoints()-1;this.init(t.getCoordinate(n),t.getCoordinate(n-1))}this.computeDirectedLabel()}function Nn(){}function Cn(){if(this.edges=new I,this.nodes=null,this.edgeEndList=new I,0===arguments.length)this.nodes=new xn(new Nn);else if(1===arguments.length){var t=arguments[0];this.nodes=new xn(t)}}function Sn(){this.geometryFactory=null,this.shellList=new I;var t=arguments[0];this.geometryFactory=t}function wn(){this.op=null,this.geometryFactory=null,this.ptLocator=null,this.lineEdgesList=new I,this.resultLineList=new I;var t=arguments[0],e=arguments[1],n=arguments[2];this.op=t,this.geometryFactory=e,this.ptLocator=n}function Ln(){this.op=null,this.geometryFactory=null,this.resultPointList=new I;var t=arguments[0],e=arguments[1];arguments[2];this.op=t,this.geometryFactory=e}function Rn(){}function Tn(){this.geom=null;var t=arguments[0];this.geom=t}function Pn(){this.edgeMap=new rt,this.edgeList=null,this.ptInAreaLocation=[L.NONE,L.NONE]}function bn(){Pn.apply(this),this.resultAreaEdgeList=null,this.label=null,this.SCANNING_FOR_INCOMING=1,this.LINKING_TO_OUTGOING=2}function On(){Nn.apply(this)}function _n(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e}function Mn(){if(this.label=null,this.xValue=null,this.eventType=null,this.insertEvent=null,this.deleteEventIndex=null,this.obj=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.eventType=Mn.DELETE,this.xValue=t,this.insertEvent=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.eventType=Mn.INSERT,this.label=n,this.xValue=i,this.obj=r}}function Dn(){}function An(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.properIntersectionPoint=null,this.li=null,this.includeProper=null,this.recordIsolated=null,this.isSelfIntersection=null,this.numIntersections=0,this.numTests=0,this.bdyNodes=null,this._isDone=!1,this.isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.li=t,this.includeProper=e,this.recordIsolated=n}function Fn(){Dn.apply(this),this.events=new I,this.nOverlaps=null}function Gn(){this.min=r.POSITIVE_INFINITY,this.max=r.NEGATIVE_INFINITY}function qn(){}function Bn(){Gn.apply(this),this.item=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.min=t,this.max=e,this.item=n}function zn(){Gn.apply(this),this.node1=null,this.node2=null;var t=arguments[0],e=arguments[1];this.node1=t,this.node2=e,this.buildExtent(this.node1,this.node2)}function Vn(){this.leaves=new I,this.root=null,this.level=0}function kn(){if(this.lines=null,this.isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this.lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.lines=e,this.isForcedToLineString=n}}function Yn(){this.items=new I}function Un(){this.index=null;var t=arguments[0];if(!R(t,Rt))throw new i(\"Argument must be Polygonal\");this.index=new Hn(t)}function Xn(){this.counter=null;var t=arguments[0];this.counter=t}function Hn(){this.index=new Vn;var t=arguments[0];this.init(t)}function Wn(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new g(t),this.segmentIndex=e,this.dist=n}function jn(){this.nodeMap=new rt,this.edge=null;var t=arguments[0];this.edge=t}function Kn(){}function Zn(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new C,this.env2=new C;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Kn;this.startIndex=e.getChainStartIndices(this.pts)}function Qn(){this.depth=Array(2).fill().map(function(){return Array(3)});for(var t=0;2>t;t++)for(var e=0;3>e;e++)this.depth[t][e]=Qn.NULL_VALUE}function Jn(){if(mn.apply(this),this.pts=null,this.env=null,this.eiList=new jn(this),this.name=null,this.mce=null,this._isIsolated=!0,this.depth=new Qn,this.depthDelta=0,1===arguments.length){var t=arguments[0];Jn.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pts=e,this.label=n}}function $n(){if(Cn.apply(this),this.parentGeom=null,this.lineEdgeMap=new te,this.boundaryNodeRule=null,this.useBoundaryDeterminationRule=!0,this.argIndex=null,this.boundaryNodes=null,this._hasTooFewPoints=!1,this.invalidPoint=null,this.areaPtLocator=null,this.ptLocator=new Te,2===arguments.length){var t=arguments[0],e=arguments[1];$n.call(this,t,e,V.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.argIndex=n,this.parentGeom=i,this.boundaryNodeRule=r,null!==i&&this.add(i)}}function ti(){if(this.li=new ae,this.resultPrecisionModel=null,this.arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this.arg=new Array(1).fill(null),this.arg[0]=new $n(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];ti.call(this,e,n,V.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];i.getPrecisionModel().compareTo(r.getPrecisionModel())>=0?this.setComputationPrecision(i.getPrecisionModel()):this.setComputationPrecision(r.getPrecisionModel()),this.arg=new Array(2).fill(null),this.arg[0]=new $n(0,i,s),this.arg[1]=new $n(1,r,s)}}function ei(){this.pts=null,this._orientation=null;var t=arguments[0];this.pts=t,this._orientation=ei.orientation(t)}function ni(){this.edges=new I,this.ocaMap=new rt}function ii(){this.ptLocator=new Te,this.geomFact=null,this.resultGeom=null,this.graph=null,this.edgeList=new ni,this.resultPolyList=new I,this.resultLineList=new I,this.resultPointList=new I;var t=arguments[0],e=arguments[1];ti.call(this,t,e),this.graph=new Cn(new On),this.geomFact=t.getFactory()}function ri(){this.geom=new Array(2).fill(null),this.snapTolerance=null,this.cbr=null;var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e,this.computeSnapTolerance()}function si(){this.geom=new Array(2).fill(null);var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e}function oi(){this.factory=null,this.interiorPoint=null,this.maxWidth=0;var t=arguments[0];this.factory=t.getFactory(),this.add(t)}function ai(){this.poly=null,this.centreY=null,this.hiY=r.MAX_VALUE,this.loY=-r.MAX_VALUE;var t=arguments[0];this.poly=t,this.hiY=t.getEnvelopeInternal().getMaxY(),this.loY=t.getEnvelopeInternal().getMinY(),this.centreY=oi.avg(this.loY,this.hiY)}function ui(){this.centroid=null,this.minDistance=r.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.addInterior(t),null===this.interiorPoint&&this.addEndpoints(t)}function li(){this.centroid=null,this.minDistance=r.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.add(t)}function hi(){}function ci(){this.p0=null,this.p1=null,this.p2=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}function fi(){this.input=null,this.extremalPts=null,this.centre=null,this.radius=0;var t=arguments[0];this.input=t}function gi(){if(this.inputGeom=null,this.isConvex=null,this.convexHullPts=null,this.minBaseSeg=new ce,this.minWidthPt=null,this.minPtIndex=null,this.minWidth=0,1===arguments.length){var t=arguments[0];gi.call(this,t,!1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputGeom=e,this.isConvex=n}}function di(){this.inputGeom=null,this.distanceTolerance=null;var t=arguments[0];this.inputGeom=t}function pi(){xe.apply(this),this.distanceTolerance=null;var t=arguments[0];this.distanceTolerance=t}function vi(){this._orig=null,this._sym=null,this._next=null;var t=arguments[0];this._orig=t}function mi(){this._isMarked=!1;var t=arguments[0];vi.call(this,t)}function yi(){this.vertexMap=new te}function xi(){this._isStart=!1;var t=arguments[0];mi.call(this,t)}function Ei(){yi.apply(this)}function Ii(){this.result=null,this.factory=null,this.graph=null,this.lines=new I,this.nodeEdgeStack=new pe,this.ringStartEdge=null,this.graph=new Ei}function Ni(){this.items=new I,this.subnode=new Array(4).fill(null)}function Ci(){}function Si(t,e){var n,i,r,s,o={32:{d:127,c:128,b:0,a:0},64:{d:32752,c:0,b:0,a:0}},a={32:8,64:11}[t];if(s||(n=0>e||0>1/e,isFinite(e)||(s=o[t],n&&(s.d+=1<<t/4-1),i=Math.pow(2,a)-1,r=0)),!s){for(i={32:127,64:1023}[t],r=Math.abs(e);r>=2;)i++,r/=2;for(;1>r&&i>0;)i--,r*=2;0>=i&&(r/=2),32===t&&i>254&&(s={d:n?255:127,c:128,b:0,a:0},i=Math.pow(2,a)-1,r=0)}return i}function wi(){this.pt=new g,this.level=0,this.env=null;var t=arguments[0];this.computeKey(t)}function Li(){Ni.apply(this),this.env=null,this.centrex=null,this.centrey=null,this.level=null;var t=arguments[0],e=arguments[1];this.env=t,this.level=e,this.centrex=(t.getMinX()+t.getMaxX())/2,this.centrey=(t.getMinY()+t.getMaxY())/2}function Ri(){}function Ti(){Ni.apply(this)}function Pi(){this.root=null,this.minExtent=1,this.root=new Ti}function bi(t){this.geometryFactory=t||new ie}function Oi(t){this.geometryFactory=t||new ie,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new bi(this.geometryFactory)}function _i(){this.parser=new bi(this.geometryFactory)}function Mi(t){this.geometryFactory=t||new ie,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new re(this.geometryFactory)}function Di(t){return[t.x,t.y]}function Ai(t){this.geometryFactory=t||new ie}function Fi(){if(this.noder=null,this.scaleFactor=null,this.offsetX=null,this.offsetY=null,this.isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];Fi.call(this,t,e,0,0)}else if(4===arguments.length){var n=arguments[0],i=arguments[1];arguments[2],arguments[3];this.noder=n,this.scaleFactor=i,this.isScaled=!this.isIntegerPrecision()}}function Gi(){if(this.inputGeom=null,this.isClosedEndpointsInInterior=!0,this.nonSimpleLocation=null,1===arguments.length){var t=arguments[0];this.inputGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputGeom=e,this.isClosedEndpointsInInterior=!n.isInBoundary(2)}}function qi(){this.pt=null,this.isClosed=null,this.degree=null;var t=arguments[0];this.pt=t,this.isClosed=!1,this.degree=0}function Bi(){if(this.quadrantSegments=Bi.DEFAULT_QUADRANT_SEGMENTS,this.endCapStyle=Bi.CAP_ROUND,this.joinStyle=Bi.JOIN_ROUND,this.mitreLimit=Bi.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this.simplifyFactor=Bi.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.setQuadrantSegments(e),this.setEndCapStyle(n)}else if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(r),this.setJoinStyle(s),this.setMitreLimit(o)}}function zi(){this.minIndex=-1,this.minCoord=null,this.minDe=null,this.orientedDe=null}function Vi(){this.array_=[]}function ki(){this.finder=null,this.dirEdgeList=new I,this.nodes=new I,this.rightMostCoord=null,this.env=null,this.finder=new zi}function Yi(){this.inputLine=null,\nthis.distanceTol=null,this.isDeleted=null,this.angleOrientation=he.COUNTERCLOCKWISE;var t=arguments[0];this.inputLine=t}function Ui(){this.ptList=null,this.precisionModel=null,this.minimimVertexDistance=0,this.ptList=new I}function Xi(){this.maxCurveSegmentError=0,this.filletAngleQuantum=null,this.closingSegLengthFactor=1,this.segList=null,this.distance=0,this.precisionModel=null,this.bufParams=null,this.li=null,this.s0=null,this.s1=null,this.s2=null,this.seg0=new ce,this.seg1=new ce,this.offset0=new ce,this.offset1=new ce,this.side=0,this._hasNarrowConcaveAngle=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.precisionModel=t,this.bufParams=e,this.li=new ae,this.filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===Bi.JOIN_ROUND&&(this.closingSegLengthFactor=Xi.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)}function Hi(){this.distance=0,this.precisionModel=null,this.bufParams=null;var t=arguments[0],e=arguments[1];this.precisionModel=t,this.bufParams=e}function Wi(){this.subgraphs=null,this.seg=new ce,this.cga=new he;var t=arguments[0];this.subgraphs=t}function ji(){this.upwardSeg=null,this.leftDepth=null;var t=arguments[0],e=arguments[1];this.upwardSeg=new ce(t),this.leftDepth=e}function Ki(){this.inputGeom=null,this.distance=null,this.curveBuilder=null,this.curveList=new I;var t=arguments[0],e=arguments[1],n=arguments[2];this.inputGeom=t,this.distance=e,this.curveBuilder=n}function Zi(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.hasInterior=!1,this.properIntersectionPoint=null,this.li=null,this.isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this.li=t}function Qi(){this.bufParams=null,this.workingPrecisionModel=null,this.workingNoder=null,this.geomFact=null,this.graph=null,this.edgeList=new ni;var t=arguments[0];this.bufParams=t}function Ji(){this.li=new ae,this.segStrings=null;var t=arguments[0];this.segStrings=t}function $i(){this.li=null,this.pt=null,this.originalPt=null,this.ptScaled=null,this.p0Scaled=null,this.p1Scaled=null,this.scaleFactor=null,this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,this.corner=new Array(4).fill(null),this.safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this.originalPt=t,this.pt=t,this.scaleFactor=e,this.li=n,0>=e)throw new i(\"Scale factor must be non-zero\");1!==e&&(this.pt=new g(this.scale(t.x),this.scale(t.y)),this.p0Scaled=new g,this.p1Scaled=new g),this.initCorners(this.pt)}function tr(){this.tempEnv1=new C,this.selectedSegment=new ce}function er(){this.index=null;var t=arguments[0];this.index=t}function nr(){tr.apply(this),this.hotPixel=null,this.parentEdge=null,this.hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.hotPixel=t,this.parentEdge=e,this.hotPixelVertexIndex=n}function ir(){this.li=null,this.interiorIntersections=null;var t=arguments[0];this.li=t,this.interiorIntersections=new I}function rr(){this.pm=null,this.li=null,this.scaleFactor=null,this.noder=null,this.pointSnapper=null,this.nodedSegStrings=null;var t=arguments[0];this.pm=t,this.li=new ae,this.li.setPrecisionModel(t),this.scaleFactor=t.getScale()}function sr(){if(this.argGeom=null,this.distance=null,this.bufParams=new Bi,this.resultGeometry=null,this.saveException=null,1===arguments.length){var t=arguments[0];this.argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.argGeom=e,this.bufParams=n}}function or(){this.comps=null;var t=arguments[0];this.comps=t}function ar(){if(this.component=null,this.segIndex=null,this.pt=null,2===arguments.length){var t=arguments[0],e=arguments[1];ar.call(this,t,ar.INSIDE_AREA,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.component=n,this.segIndex=i,this.pt=r}}function ur(){this.pts=null;var t=arguments[0];this.pts=t}function lr(){this.locations=null;var t=arguments[0];this.locations=t}function hr(){if(this.geom=null,this.terminateDistance=0,this.ptLocator=new Te,this.minDistanceLocation=null,this.minDistance=r.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];hr.call(this,t,e,0)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],s=arguments[2];this.geom=new Array(2).fill(null),this.geom[0]=n,this.geom[1]=i,this.terminateDistance=s}}function cr(){this.factory=null,this.directedEdges=new I,this.coordinates=null;var t=arguments[0];this.factory=t}function fr(){this._isMarked=!1,this._isVisited=!1,this.data=null}function gr(){fr.apply(this),this.parentEdge=null,this.from=null,this.to=null,this.p0=null,this.p1=null,this.sym=null,this.edgeDirection=null,this.quadrant=null,this.angle=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.from=t,this.to=e,this.edgeDirection=i,this.p0=t.getCoordinate(),this.p1=n;var r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y;this.quadrant=Je.quadrant(r,s),this.angle=Math.atan2(s,r)}function dr(){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];gr.call(this,t,e,n,i)}function pr(){if(fr.apply(this),this.dirEdge=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.setDirectedEdges(t,e)}}function vr(){this.outEdges=new I,this.sorted=!1}function mr(){if(fr.apply(this),this.pt=null,this.deStar=null,1===arguments.length){var t=arguments[0];mr.call(this,t,new vr)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pt=e,this.deStar=n}}function yr(){pr.apply(this),this.line=null;var t=arguments[0];this.line=t}function xr(){this.nodeMap=new rt}function Er(){this.edges=new J,this.dirEdges=new J,this.nodeMap=new xr}function Ir(){Er.apply(this)}function Nr(){this.graph=new Ir,this.mergedLineStrings=null,this.factory=null,this.edgeStrings=null}function Cr(){this.edgeRing=null,this.next=null,this.label=-1;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];gr.call(this,t,e,n,i)}function Sr(){pr.apply(this),this.line=null;var t=arguments[0];this.line=t}function wr(){this.factory=null,this.deList=new I,this.lowestEdge=null,this.ring=null,this.ringPts=null,this.holes=null,this.shell=null,this._isHole=null,this._isProcessed=!1,this._isIncludedSet=!1,this._isIncluded=!1;var t=arguments[0];this.factory=t}function Lr(){}function Rr(){Er.apply(this),this.factory=null;var t=arguments[0];this.factory=t}function Tr(){if(this.lineStringAdder=new Pr(this),this.graph=null,this.dangles=new I,this.cutEdges=new I,this.invalidRingLines=new I,this.holeList=null,this.shellList=null,this.polyList=null,this.isCheckingRingsValid=!0,this.extractOnlyPolygonal=null,this.geomFactory=null,0===arguments.length)Tr.call(this,!1);else if(1===arguments.length){var t=arguments[0];this.extractOnlyPolygonal=t}}function Pr(){this.p=null;var t=arguments[0];this.p=t}function br(){}function Or(){if(this.edgeEnds=new I,1===arguments.length){var t=arguments[0];Or.call(this,null,t)}else if(2===arguments.length){var e=(arguments[0],arguments[1]);En.call(this,e.getEdge(),e.getCoordinate(),e.getDirectedCoordinate(),new gn(e.getLabel())),this.insert(e)}}function _r(){Pn.apply(this)}function Mr(){var t=arguments[0],e=arguments[1];yn.call(this,t,e)}function Dr(){Nn.apply(this)}function Ar(){this.li=new ae,this.ptLocator=new Te,this.arg=null,this.nodes=new xn(new Dr),this.im=null,this.isolatedEdges=new I,this.invalidPoint=null;var t=arguments[0];this.arg=t}function Fr(){this.rectEnv=null;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal()}function Gr(){this.li=new ae,this.rectEnv=null,this.diagUp0=null,this.diagUp1=null,this.diagDown0=null,this.diagDown1=null;var t=arguments[0];this.rectEnv=t,this.diagUp0=new g(t.getMinX(),t.getMinY()),this.diagUp1=new g(t.getMaxX(),t.getMaxY()),this.diagDown0=new g(t.getMinX(),t.getMaxY()),this.diagDown1=new g(t.getMaxX(),t.getMinY())}function qr(){this._isDone=!1}function Br(){this.rectangle=null,this.rectEnv=null;var t=arguments[0];this.rectangle=t,this.rectEnv=t.getEnvelopeInternal()}function zr(){qr.apply(this),this.rectEnv=null,this._intersects=!1;var t=arguments[0];this.rectEnv=t}function Vr(){qr.apply(this),this.rectSeq=null,this.rectEnv=null,this._containsPoint=!1;var t=arguments[0];this.rectSeq=t.getExteriorRing().getCoordinateSequence(),this.rectEnv=t.getEnvelopeInternal()}function kr(){qr.apply(this),this.rectEnv=null,this.rectIntersector=null,this.hasIntersection=!1,this.p0=new g,this.p1=new g;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal(),this.rectIntersector=new Gr(this.rectEnv)}function Yr(){if(this._relate=null,2===arguments.length){var t=arguments[0],e=arguments[1];ti.call(this,t,e),this._relate=new Ar(this.arg)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];ti.call(this,n,i,r),this._relate=new Ar(this.arg)}}function Ur(){this.geomFactory=null,this.skipEmpty=!1,this.inputGeoms=null;var t=arguments[0];this.geomFactory=Ur.extractFactory(t),this.inputGeoms=t}function Xr(){this.pointGeom=null,this.otherGeom=null,this.geomFact=null;var t=arguments[0],e=arguments[1];this.pointGeom=t,this.otherGeom=e,this.geomFact=e.getFactory()}function Hr(){this.sortIndex=-1,this.comps=null;var t=arguments[0],e=arguments[1];this.sortIndex=t,this.comps=e}function Wr(){this.inputPolys=null,this.geomFactory=null;var t=arguments[0];this.inputPolys=t,null===this.inputPolys&&(this.inputPolys=new I)}function jr(){if(this.polygons=new I,this.lines=new I,this.points=new I,this.geomFact=null,1===arguments.length){if(R(arguments[0],v)){var t=arguments[0];this.extract(t)}else if(arguments[0]instanceof B){var e=arguments[0];this.extract(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.geomFact=i,this.extract(n)}}function Kr(){this.geometryFactory=new ie,this.geomGraph=null,this.disconnectedRingcoord=null;var t=arguments[0];this.geomGraph=t}function Zr(){this.items=new I,this.subnode=[null,null]}function Qr(){if(this.min=null,this.max=null,0===arguments.length)this.min=0,this.max=0;else if(1===arguments.length){var t=arguments[0];this.init(t.min,t.max)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.init(e,n)}}function Jr(){this.pt=0,this.level=0,this.interval=null;var t=arguments[0];this.computeKey(t)}function $r(){Zr.apply(this),this.interval=null,this.centre=null,this.level=null;var t=arguments[0],e=arguments[1];this.interval=t,this.level=e,this.centre=(t.getMin()+t.getMax())/2}function ts(){Zr.apply(this)}function es(){this.root=null,this.minExtent=1,this.root=new ts}function ns(){}function is(){this.ring=null,this.tree=null,this.crossings=0,this.interval=new Qr;var t=arguments[0];this.ring=t,this.buildIndex()}function rs(){tr.apply(this),this.mcp=null,this.p=null;var t=arguments[0],e=arguments[1];this.mcp=t,this.p=e}function ss(){this.nodes=new xn(new Dr)}function os(){this.li=new ae,this.geomGraph=null,this.nodeGraph=new ss,this.invalidPoint=null;var t=arguments[0];this.geomGraph=t}function as(){this.graph=null,this.rings=new I,this.totalEnv=new C,this.index=null,this.nestedPt=null;var t=arguments[0];this.graph=t}function us(){if(this.errorType=null,this.pt=null,1===arguments.length){var t=arguments[0];us.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.errorType=e,null!==n&&(this.pt=n.copy())}}function ls(){this.parentGeometry=null,this.isSelfTouchingRingFormingHoleValid=!1,this.validErr=null;var t=arguments[0];this.parentGeometry=t}function hs(){_t.CoordinateOperation.apply(this),this.targetPM=null,this.removeCollapsed=!0;var t=arguments[0],e=arguments[1];this.targetPM=t,this.removeCollapsed=e}function cs(){this.targetPM=null,this.removeCollapsed=!0,this.changePrecisionModel=!1,this.isPointwise=!1;var t=arguments[0];this.targetPM=t}function fs(){this.pts=null,this.usePt=null,this.distanceTolerance=null,this.seg=new ce;var t=arguments[0];this.pts=t}function gs(){this.inputGeom=null,this.distanceTolerance=null,this.isEnsureValidTopology=!0;var t=arguments[0];this.inputGeom=t}function ds(){xe.apply(this),this.isEnsureValidTopology=!0,this.distanceTolerance=null;var t=arguments[0],e=arguments[1];this.isEnsureValidTopology=t,this.distanceTolerance=e}function ps(){if(this.parent=null,this.index=null,2===arguments.length){var t=arguments[0],e=arguments[1];ps.call(this,t,e,null,-1)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=arguments[3];ce.call(this,n,i),this.parent=r,this.index=s}}function vs(){if(this.parentLine=null,this.segs=null,this.resultSegs=new I,this.minimumSize=null,1===arguments.length){var t=arguments[0];vs.call(this,t,2)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.parentLine=e,this.minimumSize=n,this.init()}}function ms(){this.index=new Pi}function ys(){this.querySeg=null,this.items=new I;var t=arguments[0];this.querySeg=t}function xs(){this.li=new ae,this.inputIndex=new ms,this.outputIndex=new ms,this.line=null,this.linePts=null,this.distanceTolerance=0;var t=arguments[0],e=arguments[1];this.inputIndex=t,this.outputIndex=e}function Es(){this.inputIndex=new ms,this.outputIndex=new ms,this.distanceTolerance=0}function Is(){this.inputGeom=null,this.lineSimplifier=new Es,this.linestringMap=null;var t=arguments[0];this.inputGeom=t}function Ns(){xe.apply(this),this.linestringMap=null;var t=arguments[0];this.linestringMap=t}function Cs(){this.tps=null;var t=arguments[0];this.tps=t}function Ss(){this.seg=null,this.segLen=null,this.splitPt=null,this.minimumLen=0;var t=arguments[0];this.seg=t,this.segLen=t.getLength()}function ws(){}function Ls(){}function Rs(){}function Ts(){if(this.p=null,1===arguments.length){var t=arguments[0];this.p=new g(t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p=new g(e,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.p=new g(i,r,s)}}function Ps(){this._isOnConstraint=null,this.constraint=null;var t=arguments[0];Ts.call(this,t)}function bs(){this._rot=null,this.vertex=null,this.next=null,this.data=null}function Os(){this.subdiv=null,this.isUsingTolerance=!1;var t=arguments[0];this.subdiv=t,this.isUsingTolerance=t.getTolerance()>0}function _s(){}function Ms(){this.subdiv=null,this.lastEdge=null;var t=arguments[0];this.subdiv=t,this.init()}function Ds(){if(this.seg=null,1===arguments.length){if(\"string\"==typeof arguments[0]){var t=arguments[0];l.call(this,t)}else if(arguments[0]instanceof ce){var e=arguments[0];l.call(this,\"Locate failed to converge (at edge: \"+e+\").  Possible causes include invalid Subdivision topology or very close sites\"),this.seg=new ce(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];l.call(this,Ds.msgWithSpatial(n,i)),this.seg=new ce(i)}}function As(){}function Fs(){this.visitedKey=0,this.quadEdges=new I,this.startingEdge=null,this.tolerance=null,this.edgeCoincidenceTolerance=null,this.frameVertex=new Array(3).fill(null),this.frameEnv=null,this.locator=null,this.seg=new ce,this.triEdges=new Array(3).fill(null);var t=arguments[0],e=arguments[1];this.tolerance=e,this.edgeCoincidenceTolerance=e/Fs.EDGE_COINCIDENCE_TOL_FACTOR,this.createFrame(t),this.startingEdge=this.initSubdiv(),this.locator=new Ms(this)}function Gs(){}function qs(){this.triList=new I}function Bs(){this.triList=new I}function zs(){this.coordList=new N,this.triCoords=new I}function Vs(){if(this.ls=null,this.data=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.ls=new ce(t,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.ls=new ce(n,i),this.data=r}else if(6===arguments.length){var s=arguments[0],o=arguments[1],a=arguments[2],u=arguments[3],l=arguments[4],h=arguments[5];Vs.call(this,new g(s,o,a),new g(u,l,h))}else if(7===arguments.length){var c=arguments[0],f=arguments[1],d=arguments[2],p=arguments[3],v=arguments[4],m=arguments[5],y=arguments[6];Vs.call(this,new g(c,f,d),new g(p,v,m),y)}}function ks(){}function Ys(){if(this.p=null,this.data=null,this.left=null,this.right=null,this.count=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.p=new g(t),this.left=null,this.right=null,this.count=1,this.data=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.p=new g(n,i),this.left=null,this.right=null,this.count=1,this.data=r}}function Us(){if(this.root=null,this.numberOfNodes=null,this.tolerance=null,0===arguments.length)Us.call(this,0);else if(1===arguments.length){var t=arguments[0];this.tolerance=t}}function Xs(){this.tolerance=null,this.matchNode=null,this.matchDist=0,this.p=null;var t=arguments[0],e=arguments[1];this.p=t,this.tolerance=e}function Hs(){this.initialVertices=null,this.segVertices=null,this.segments=new I,this.subdiv=null,this.incDel=null,this.convexHull=null,this.splitFinder=new Ls,this.kdt=null,this.vertexFactory=null,this.computeAreaEnv=null,this.splitPt=null,this.tolerance=null;var t=arguments[0],e=arguments[1];this.initialVertices=new I(t),this.tolerance=e,this.kdt=new Us(e)}function Ws(){this.siteCoords=null,this.tolerance=0,this.subdiv=null}function js(){this.siteCoords=null,this.constraintLines=null,this.tolerance=0,this.subdiv=null,this.constraintVertexMap=new rt}function Ks(){this.siteCoords=null,this.tolerance=0,this.subdiv=null,this.clipEnv=null,this.diagramEnv=null}function Zs(){}Array.prototype.fill||(Array.prototype.fill=function(t){for(var e=Object(this),n=parseInt(e.length,10),i=arguments[1],r=parseInt(i,10)||0,s=0>r?Math.max(n+r,0):Math.min(r,n),o=arguments[2],a=void 0===o?n:parseInt(o,10)||0,u=0>a?Math.max(n+a,0):Math.min(a,n);u>s;s++)e[s]=t;return e}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!==t},Math.trunc=Math.trunc||function(t){return 0>t?Math.ceil(t):Math.floor(t)},e(n.prototype,{interfaces_:function(){return[]},getClass:function(){return n}}),n.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n},r.isNaN=function(t){return Number.isNaN(t)},r.doubleToLongBits=function(t){return t},r.longBitsToDouble=function(t){return t},r.isInfinite=function(t){return!Number.isFinite(t)},r.MAX_VALUE=Number.MAX_VALUE,h(c,l),e(c.prototype,{interfaces_:function(){return[]},getClass:function(){return c}}),e(f.prototype,{interfaces_:function(){return[]},getClass:function(){return f}}),f.shouldNeverReachHere=function(){if(0===arguments.length)f.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new c(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},f.isTrue=function(){if(1===arguments.length){var t=arguments[0];f.isTrue(t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!e)throw null===n?new c:new c(n)}},f.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];f.equals(t,e,null)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(!i.equals(n))throw new c(\"Expected \"+n+\" but encountered \"+i+(null!==r?\": \"+r:\"\"))}},e(g.prototype,{setOrdinate:function(t,e){switch(t){case g.X:this.x=e;break;case g.Y:this.y=e;break;case g.Z:this.z=e;break;default:throw new i(\"Invalid ordinate index: \"+t)}},equals2D:function(){if(1===arguments.length){var t=arguments[0];return this.x!==t.x?!1:this.y===t.y}if(2===arguments.length){var e=arguments[0],i=arguments[1];return n.equalsWithTolerance(this.x,e.x,i)?!!n.equalsWithTolerance(this.y,e.y,i):!1}},getOrdinate:function(t){switch(t){case g.X:return this.x;case g.Y:return this.y;case g.Z:return this.z}throw new i(\"Invalid ordinate index: \"+t)},equals3D:function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||r.isNaN(this.z)&&r.isNaN(t.z))},equals:function(t){return t instanceof g?this.equals2D(t):!1},equalInZ:function(t,e){return n.equalsWithTolerance(this.z,t.z,e)},compareTo:function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},clone:function(){try{var t=null;return t}catch(t){if(t instanceof CloneNotSupportedException)return f.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\"),null;throw t}finally{}},copy:function(){return new g(this)},toString:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},distance3D:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},distance:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+g.hashCode(this.x),t=37*t+g.hashCode(this.y)},setCoordinate:function(t){this.x=t.x,this.y=t.y,this.z=t.z},interfaces_:function(){return[s,o,u]},getClass:function(){return g}}),g.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=r.doubleToLongBits(t);return Math.trunc(e^e>>>32)}},e(d.prototype,{compare:function(t,e){var n=t,i=e,r=d.compare(n.x,i.x);if(0!==r)return r;var s=d.compare(n.y,i.y);if(0!==s)return s;if(this.dimensionsToTest<=2)return 0;var o=d.compare(n.z,i.z);return o},interfaces_:function(){return[a]},getClass:function(){return d}}),d.compare=function(t,e){return e>t?-1:t>e?1:r.isNaN(t)?r.isNaN(e)?0:-1:r.isNaN(e)?1:0},g.DimensionalComparator=d,g.serialVersionUID=0x5cbf2c235c7e5800,g.NULL_ORDINATE=r.NaN,g.X=0,g.Y=1,g.Z=2,p.prototype.hasNext=function(){},p.prototype.next=function(){},p.prototype.remove=function(){},v.prototype.add=function(){},v.prototype.addAll=function(){},v.prototype.isEmpty=function(){},v.prototype.iterator=function(){},v.prototype.size=function(){},v.prototype.toArray=function(){},v.prototype.remove=function(){},m.prototype=new Error,m.prototype.name=\"IndexOutOfBoundsException\",y.prototype=Object.create(v.prototype),y.prototype.constructor=y,y.prototype.get=function(){},y.prototype.set=function(){},y.prototype.isEmpty=function(){},x.prototype=new Error,x.prototype.name=\"NoSuchElementException\",E.prototype=new Error,E.prototype.name=\"OperationNotSupported\",I.prototype=Object.create(y.prototype),I.prototype.constructor=I,I.prototype.ensureCapacity=function(){},I.prototype.interfaces_=function(){return[y,v]},I.prototype.add=function(t){return this.array_.push(t),!0},I.prototype.clear=function(){this.array_=[]},I.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},I.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},I.prototype.iterator=function(){return new Qs(this)},I.prototype.get=function(t){if(0>t||t>=this.size())throw new m;return this.array_[t]},I.prototype.isEmpty=function(){return 0===this.array_.length},I.prototype.size=function(){return this.array_.length},I.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},I.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;i>n;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e};var Qs=function(t){this.arrayList_=t,this.position_=0};Qs.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new x;return this.arrayList_.get(this.position_++)},Qs.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},Qs.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},Qs.prototype.remove=function(){throw new E},h(N,I),e(N.prototype,{getCoordinate:function(t){return this.get(t)},addAll:function(){if(2===arguments.length){for(var t=arguments[0],e=arguments[1],n=!1,i=t.iterator();i.hasNext();)this.add(i.next(),e),n=!0;return n}return I.prototype.addAll.apply(this,arguments)},clone:function t(){for(var t=I.prototype.clone.call(this),e=0;e<this.size();e++)t.add(e,this.get(e).copy());return t},toCoordinateArray:function(){return this.toArray(N.coordArrayType)},add:function(){if(1===arguments.length){var t=arguments[0];I.prototype.add.call(this,t)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];return this.add(e,n,!0),!0}if(arguments[0]instanceof g&&\"boolean\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];if(!r&&this.size()>=1){var s=this.get(this.size()-1);if(s.equals2D(i))return null}I.prototype.add.call(this,i)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],a=arguments[1];return this.add(o,a),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var u=arguments[0],l=arguments[1],h=arguments[2];if(h)for(var c=0;c<u.length;c++)this.add(u[c],l);else for(var c=u.length-1;c>=0;c--)this.add(u[c],l);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof g){var f=arguments[0],d=arguments[1],p=arguments[2];if(!p){var v=this.size();if(v>0){if(f>0){var m=this.get(f-1);if(m.equals2D(d))return null}if(v>f){var y=this.get(f);if(y.equals2D(d))return null}}}I.prototype.add.call(this,f,d)}}else if(4===arguments.length){var x=arguments[0],E=arguments[1],N=arguments[2],C=arguments[3],S=1;N>C&&(S=-1);for(var c=N;c!==C;c+=S)this.add(x[c],E);return!0}},closeRing:function(){this.size()>0&&this.add(new g(this.get(0)),!1)},interfaces_:function(){return[]},getClass:function(){return N}}),N.coordArrayType=new Array(0).fill(null),e(C.prototype,{getArea:function(){return this.getWidth()*this.getHeight()},equals:function(t){if(!(t instanceof C))return!1;var e=t;return this.isNull()?e.isNull():this.maxx===e.getMaxX()&&this.maxy===e.getMaxY()&&this.minx===e.getMinX()&&this.miny===e.getMinY()},intersection:function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new C;var e=this.minx>t.minx?this.minx:t.minx,n=this.miny>t.miny?this.miny:t.miny,i=this.maxx<t.maxx?this.maxx:t.maxx,r=this.maxy<t.maxy?this.maxy:t.maxy;return new C(e,i,n,r)},isNull:function(){return this.maxx<this.minx},getMaxX:function(){return this.maxx},covers:function(){if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof C){var e=arguments[0];return this.isNull()||e.isNull()?!1:e.getMinX()>=this.minx&&e.getMaxX()<=this.maxx&&e.getMinY()>=this.miny&&e.getMaxY()<=this.maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.isNull()?!1:n>=this.minx&&n<=this.maxx&&i>=this.miny&&i<=this.maxy}},intersects:function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.isNull()||t.isNull()?!1:!(t.minx>this.maxx||t.maxx<this.minx||t.miny>this.maxy||t.maxy<this.miny)}if(arguments[0]instanceof g){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.isNull()?!1:!(n>this.maxx||n<this.minx||i>this.maxy||i<this.miny)}},getMinY:function(){return this.miny},getMinX:function(){return this.minx},expandToInclude:function(){if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this.minx=e.getMinX(),this.maxx=e.getMaxX(),this.miny=e.getMinY(),this.maxy=e.getMaxY()):(e.minx<this.minx&&(this.minx=e.minx),e.maxx>this.maxx&&(this.maxx=e.maxx),e.miny<this.miny&&(this.miny=e.miny),e.maxy>this.maxy&&(this.maxy=e.maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this.minx=n,this.maxx=n,this.miny=i,this.maxy=i):(n<this.minx&&(this.minx=n),n>this.maxx&&(this.maxx=n),i<this.miny&&(this.miny=i),i>this.maxy&&(this.maxy=i))}},minExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return e>t?t:e},getWidth:function(){return this.isNull()?0:this.maxx-this.minx},compareTo:function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this.minx<e.minx?-1:this.minx>e.minx?1:this.miny<e.miny?-1:this.miny>e.miny?1:this.maxx<e.maxx?-1:this.maxx>e.maxx?1:this.maxy<e.maxy?-1:this.maxy>e.maxy?1:0},translate:function(t,e){return this.isNull()?null:void this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},toString:function(){return\"Env[\"+this.minx+\" : \"+this.maxx+\", \"+this.miny+\" : \"+this.maxy+\"]\"},setToNull:function(){this.minx=0,this.maxx=-1,this.miny=0,this.maxy=-1},getHeight:function(){return this.isNull()?0:this.maxy-this.miny},maxExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},expandBy:function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this.minx-=e,this.maxx+=e,this.miny-=n,this.maxy+=n,(this.minx>this.maxx||this.miny>this.maxy)&&this.setToNull()}},contains:function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},centre:function(){return this.isNull()?null:new g((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},init:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];this.minx=e.minx,this.maxx=e.maxx,this.miny=e.miny,this.maxy=e.maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];s>r?(this.minx=r,this.maxx=s):(this.minx=s,this.maxx=r),a>o?(this.miny=o,this.maxy=a):(this.miny=a,this.maxy=o)}},getMaxY:function(){return this.maxy},distance:function(t){if(this.intersects(t))return 0;var e=0;this.maxx<t.minx?e=t.minx-this.maxx:this.minx>t.maxx&&(e=this.minx-t.maxx);var n=0;return this.maxy<t.miny?n=t.miny-this.maxy:this.miny>t.maxy&&(n=this.miny-t.maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+g.hashCode(this.minx),t=37*t+g.hashCode(this.maxx),t=37*t+g.hashCode(this.miny),t=37*t+g.hashCode(this.maxy)},interfaces_:function(){return[s,u]},getClass:function(){return C}}),C.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3],a=Math.min(s.x,o.x),u=Math.max(s.x,o.x),l=Math.min(i.x,r.x),h=Math.max(i.x,r.x);return l>u?!1:a>h?!1:(a=Math.min(s.y,o.y),u=Math.max(s.y,o.y),l=Math.min(i.y,r.y),h=Math.max(i.y,r.y),l>u?!1:!(a>h))}},C.serialVersionUID=0x51845cd552189800,h(w,S),e(w.prototype,{interfaces_:function(){return[]},getClass:function(){return w}}),e(L.prototype,{interfaces_:function(){return[]},getClass:function(){return L}}),L.toLocationSymbol=function(t){switch(t){case L.EXTERIOR:return\"e\";case L.BOUNDARY:return\"b\";case L.INTERIOR:return\"i\";case L.NONE:return\"-\"}throw new i(\"Unknown location value: \"+t)},L.INTERIOR=0,L.BOUNDARY=1,L.EXTERIOR=2,L.NONE=-1,e(T.prototype,{interfaces_:function(){return[]},getClass:function(){return T}}),T.log10=function(t){var e=Math.log(t);return r.isInfinite(e)?e:r.isNaN(e)?e:e/T.LOG_10},T.min=function(t,e,n,i){var r=t;return r>e&&(r=e),r>n&&(r=n),r>i&&(r=i),r},T.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return e>t?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],s=arguments[2];return r>i?r:i>s?s:i}},T.wrap=function(t,e){return 0>t?e- -t%e:t%e},T.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3],i=r;return s>i&&(i=s),o>i&&(i=o),a>i&&(i=a),i}},T.average=function(t,e){\nreturn(t+e)/2},T.LOG_10=Math.log(10),P.prototype.append=function(t){this.str+=t},P.prototype.setCharAt=function(t,e){return this.str.substr(0,t)+e+this.str.substr(t+1)},P.prototype.toString=function(t){return this.str},b.prototype.intValue=function(){return this.value},b.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},b.isNaN=function(t){return Number.isNaN(t)},O.isWhitespace=function(t){return 32>=t&&t>=0||127==t},O.toUpperCase=function(t){return t.toUpperCase()},e(_.prototype,{le:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<=t.lo},extractSignificantDigits:function(t,e){var n=this.abs(),i=_.magnitude(n.hi),r=_.TEN.pow(i);n=n.divide(r),n.gt(_.TEN)?(n=n.divide(_.TEN),i+=1):n.lt(_.ONE)&&(n=n.multiply(_.TEN),i-=1);for(var s=i+1,o=new P,a=_.MAX_PRINT_DIGITS-1,u=0;a>=u;u++){t&&u===s&&o.append(\".\");var l=Math.trunc(n.hi);if(0>l)break;var h=!1,c=0;l>9?(h=!0,c=\"9\"):c=\"0\"+l,o.append(c),n=n.subtract(_.valueOf(l)).multiply(_.TEN),h&&n.selfAdd(_.TEN);var f=!0,g=_.magnitude(n.hi);if(0>g&&Math.abs(g)>=a-u&&(f=!1),!f)break}return e[0]=i,o.toString()},sqr:function(){return this.multiply(this)},doubleValue:function(){return this.hi+this.lo},subtract:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},equals:function(){if(1===arguments.length){var t=arguments[0];return this.hi===t.hi&&this.lo===t.lo}},isZero:function(){return 0===this.hi&&0===this.lo},selfSubtract:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t.hi,-t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},getSpecialNumberString:function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},min:function(t){return this.le(t)?this:t},selfDivide:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfDivide(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,s=null,o=null,a=null,u=null,l=null,h=null,c=null;return u=this.hi/n,l=_.SPLIT*u,r=l-u,c=_.SPLIT*n,r=l-r,s=u-r,o=c-n,h=u*n,o=c-o,a=n-o,c=r*o-h+r*a+s*o+s*a,l=(this.hi-h-c+this.lo-u*i)/n,c=u+l,this.hi=c,this.lo=u-c+l,this}},dump:function(){return\"DD<\"+this.hi+\", \"+this.lo+\">\"},divide:function(){if(arguments[0]instanceof _){var t=arguments[0],e=null,n=null,i=null,s=null,o=null,a=null,u=null,l=null;o=this.hi/t.hi,a=_.SPLIT*o,e=a-o,l=_.SPLIT*t.hi,e=a-e,n=o-e,i=l-t.hi,u=o*t.hi,i=l-i,s=t.hi-i,l=e*i-u+e*s+n*i+n*s,a=(this.hi-u-l+this.lo-o*t.lo)/t.hi,l=o+a;var h=l,c=o-l+a;return new _(h,c)}if(\"number\"==typeof arguments[0]){var f=arguments[0];return r.isNaN(f)?_.createNaN():_.copy(this).selfDivide(f,0)}},ge:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>=t.lo},pow:function(t){if(0===t)return _.valueOf(1);var e=new _(this),n=_.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2===1&&n.selfMultiply(e),i/=2,i>0&&(e=e.sqr());else n=e;return 0>t?n.reciprocal():n},ceil:function(){if(this.isNaN())return _.NaN;var t=Math.ceil(this.hi),e=0;return t===this.hi&&(e=Math.ceil(this.lo)),new _(t,e)},compareTo:function(t){var e=t;return this.hi<e.hi?-1:this.hi>e.hi?1:this.lo<e.lo?-1:this.lo>e.lo?1:0},rint:function(){if(this.isNaN())return this;var t=this.add(.5);return t.floor()},setValue:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},max:function(t){return this.ge(t)?this:t},sqrt:function(){if(this.isZero())return _.valueOf(0);if(this.isNegative())return _.NaN;var t=1/Math.sqrt(this.hi),e=this.hi*t,n=_.valueOf(e),i=this.subtract(n.sqr()),r=i.hi*(.5*t);return n.add(r)},selfAdd:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfAdd(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,s=null,o=null,a=null;return r=this.hi+e,o=r-this.hi,s=r-o,s=e-o+(this.hi-s),a=s+this.lo,n=r+a,i=a+(r-n),this.hi=n+i,this.lo=i+(n-this.hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],n=null,i=null,h=null,c=null,r=null,s=null,o=null,a=null;r=this.hi+u,h=this.lo+l,o=r-this.hi,a=h-this.lo,s=r-o,c=h-a,s=u-o+(this.hi-s),c=l-a+(this.lo-c),o=s+h,n=r+o,i=o+(r-n),o=c+i;var f=n+o,g=o+(n-f);return this.hi=f,this.lo=g,this}},selfMultiply:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfMultiply(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,s=null,o=null,a=null,u=null,l=null;u=_.SPLIT*this.hi,r=u-this.hi,l=_.SPLIT*n,r=u-r,s=this.hi-r,o=l-n,u=this.hi*n,o=l-o,a=n-o,l=r*o-u+r*a+s*o+s*a+(this.hi*i+this.lo*n);var h=u+l;r=u-h;var c=l+r;return this.hi=h,this.lo=c,this}},selfSqr:function(){return this.selfMultiply(this)},floor:function(){if(this.isNaN())return _.NaN;var t=Math.floor(this.hi),e=0;return t===this.hi&&(e=Math.floor(this.lo)),new _(t,e)},negate:function(){return this.isNaN()?this:new _(-this.hi,-this.lo)},clone:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}finally{}},multiply:function(){if(arguments[0]instanceof _){var t=arguments[0];return t.isNaN()?_.createNaN():_.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return r.isNaN(e)?_.createNaN():_.copy(this).selfMultiply(e,0)}},isNaN:function(){return r.isNaN(this.hi)},intValue:function(){return Math.trunc(this.hi)},toString:function(){var t=_.magnitude(this.hi);return t>=-3&&20>=t?this.toStandardNotation():this.toSciNotation()},toStandardNotation:function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(0>i)r=\"0.\"+_.stringOfChar(\"0\",-i)+n;else if(-1===n.indexOf(\".\")){var s=i-n.length,o=_.stringOfChar(\"0\",s);r=n+o+\".0\"}return this.isNegative()?\"-\"+r:r},reciprocal:function(){var t=null,e=null,n=null,i=null,r=null,s=null,o=null,a=null;r=1/this.hi,s=_.SPLIT*r,t=s-r,a=_.SPLIT*this.hi,t=s-t,e=r-t,n=a-this.hi,o=r*this.hi,n=a-n,i=this.hi-n,a=t*n-o+t*i+e*n+e*i,s=(1-o-a-r*this.lo)/this.hi;var u=r+s,l=r-u+s;return new _(u,l)},toSciNotation:function(){if(this.isZero())return _.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=_.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new IllegalStateException(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var s=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+s+i:s+i},abs:function(){return this.isNaN()?_.NaN:this.isNegative()?this.negate():new _(this)},isPositive:function(){return this.hi>0||0===this.hi&&this.lo>0},lt:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<t.lo},add:function(){if(arguments[0]instanceof _){var t=arguments[0];return _.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return _.copy(this).selfAdd(e)}},init:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.hi=t,this.lo=0}else if(arguments[0]instanceof _){var e=arguments[0];this.hi=e.hi,this.lo=e.lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.hi=n,this.lo=i}},gt:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>t.lo},isNegative:function(){return this.hi<0||0===this.hi&&this.lo<0},trunc:function(){return this.isNaN()?_.NaN:this.isPositive()?this.floor():this.ceil()},signum:function(){return this.hi>0?1:this.hi<0?-1:this.lo>0?1:this.lo<0?-1:0},interfaces_:function(){return[u,s,o]},getClass:function(){return _}}),_.sqr=function(t){return _.valueOf(t).selfMultiply(t)},_.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return _.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new _(e)}},_.sqrt=function(t){return _.valueOf(t).sqrt()},_.parse=function(t){for(var e=0,n=t.length;O.isWhitespace(t.charAt(e));)e++;var i=!1;if(n>e){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var s=new _,o=0,a=0,u=0;;){if(e>=n)break;var l=t.charAt(e);if(e++,O.isDigit(l)){var h=l-\"0\";s.selfMultiply(_.TEN),s.selfAdd(h),o++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var c=t.substring(e);try{u=b.parseInt(c)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException(\"Invalid exponent \"+c+\" in string \"+t):e}finally{}break}throw new NumberFormatException(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=o}}var f=s,g=o-a-u;if(0===g)f=s;else if(g>0){var d=_.TEN.pow(g);f=s.divide(d)}else if(0>g){var d=_.TEN.pow(-g);f=s.multiply(d)}return i?f.negate():f},_.createNaN=function(){return new _(r.NaN,r.NaN)},_.copy=function(t){return new _(t)},_.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n)),r=Math.pow(10,i);return e>=10*r&&(i+=1),i},_.stringOfChar=function(t,e){for(var n=new P,i=0;e>i;i++)n.append(t);return n.toString()},_.PI=new _(3.141592653589793,1.2246467991473532e-16),_.TWO_PI=new _(6.283185307179586,2.4492935982947064e-16),_.PI_2=new _(1.5707963267948966,6.123233995736766e-17),_.E=new _(2.718281828459045,1.4456468917292502e-16),_.NaN=new _(r.NaN,r.NaN),_.EPS=1.23259516440783e-32,_.SPLIT=134217729,_.MAX_PRINT_DIGITS=32,_.TEN=_.valueOf(10),_.ONE=_.valueOf(1),_.SCI_NOT_EXPONENT_CHAR=\"E\",_.SCI_NOT_ZERO=\"0.0E0\",e(M.prototype,{interfaces_:function(){return[]},getClass:function(){return M}}),M.orientationIndex=function(t,e,n){var i=M.orientationIndexFilter(t,e,n);if(1>=i)return i;var r=_.valueOf(e.x).selfAdd(-t.x),s=_.valueOf(e.y).selfAdd(-t.y),o=_.valueOf(n.x).selfAdd(-e.x),a=_.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(s.selfMultiply(o)).signum()},M.signOfDet2x2=function(t,e,n,i){var r=t.multiply(i).selfSubtract(e.multiply(n));return r.signum()},M.intersection=function(t,e,n,i){var r=_.valueOf(i.y).selfSubtract(n.y).selfMultiply(_.valueOf(e.x).selfSubtract(t.x)),s=_.valueOf(i.x).selfSubtract(n.x).selfMultiply(_.valueOf(e.y).selfSubtract(t.y)),o=r.subtract(s),a=_.valueOf(i.x).selfSubtract(n.x).selfMultiply(_.valueOf(t.y).selfSubtract(n.y)),u=_.valueOf(i.y).selfSubtract(n.y).selfMultiply(_.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u),h=l.selfDivide(o).doubleValue(),c=_.valueOf(t.x).selfAdd(_.valueOf(e.x).selfSubtract(t.x).selfMultiply(h)).doubleValue(),f=_.valueOf(e.x).selfSubtract(t.x).selfMultiply(_.valueOf(t.y).selfSubtract(n.y)),d=_.valueOf(e.y).selfSubtract(t.y).selfMultiply(_.valueOf(t.x).selfSubtract(n.x)),p=f.subtract(d),v=p.selfDivide(o).doubleValue(),m=_.valueOf(n.y).selfAdd(_.valueOf(i.y).selfSubtract(n.y).selfMultiply(v)).doubleValue();return new g(c,m)},M.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),s=(t.y-n.y)*(e.x-n.x),o=r-s;if(r>0){if(0>=s)return M.signum(o);i=r+s}else{if(!(0>r))return M.signum(o);if(s>=0)return M.signum(o);i=-r-s}var a=M.DP_SAFE_EPSILON*i;return o>=a||-o>=a?M.signum(o):2},M.signum=function(t){return t>0?1:0>t?-1:0},M.DP_SAFE_EPSILON=1e-15,e(D.prototype,{setOrdinate:function(t,e,n){},size:function(){},getOrdinate:function(t,e){},getCoordinate:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},getCoordinateCopy:function(t){},getDimension:function(){},getX:function(t){},clone:function(){},expandEnvelope:function(t){},copy:function(){},getY:function(t){},toCoordinateArray:function(){},interfaces_:function(){return[o]},getClass:function(){return D}}),D.X=0,D.Y=1,D.Z=2,D.M=3,A.arraycopy=function(t,e,n,i,r){for(var s=0,o=e;e+r>o;o++)n[i+s]=t[o],s++},A.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]},e(F.prototype,{getY:function(){var t=this.y/this.w;if(r.isNaN(t)||r.isInfinite(t))throw new w;return t},getX:function(){var t=this.x/this.w;if(r.isNaN(t)||r.isInfinite(t))throw new w;return t},getCoordinate:function(){var t=new g;return t.x=this.getX(),t.y=this.getY(),t},interfaces_:function(){return[]},getClass:function(){return F}}),F.intersection=function(t,e,n,i){var s=t.y-e.y,o=e.x-t.x,a=t.x*e.y-e.x*t.y,u=n.y-i.y,l=i.x-n.x,h=n.x*i.y-i.x*n.y,c=o*h-l*a,f=u*a-s*h,d=s*l-u*o,p=c/d,v=f/d;if(r.isNaN(p)||r.isInfinite(p)||r.isNaN(v)||r.isInfinite(v))throw new w;return new g(p,v)},e(G.prototype,{create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){arguments[0]}else if(R(arguments[0],D)){arguments[0]}}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return G}}),e(q.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return q}}),e(B.prototype,{isGeometryCollection:function(){return this.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION},getFactory:function(){return this.factory},getGeometryN:function(t){return this},getArea:function(){return 0},isRectangle:function(){return!1},equals:function(){if(1===arguments.length){if(arguments[0]instanceof B){var t=arguments[0];return null===t?!1:this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof B))return!1;var n=e;return this.equalsExact(n)}}},equalsExact:function(t){return this===t||this.equalsExact(t,0)},geometryChanged:function(){this.apply(B.geometryChangedFilter)},geometryChangedAction:function(){this.envelope=null},equalsNorm:function(t){return null===t?!1:this.norm().equalsExact(t.norm())},getLength:function(){return 0},getNumGeometries:function(){return 1},compareTo:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=n;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(n,i)}},getUserData:function(){return this.userData},getSRID:function(){return this.SRID},getEnvelope:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},checkNotGeometryCollection:function(t){if(t.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION)throw new i(\"This method does not support GeometryCollection arguments\")},equal:function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},norm:function(){var t=this.copy();return t.normalize(),t},getPrecisionModel:function(){return this.factory.getPrecisionModel()},getEnvelopeInternal:function(){return null===this.envelope&&(this.envelope=this.computeEnvelopeInternal()),new C(this.envelope)},setSRID:function(t){this.SRID=t},setUserData:function(t){this.userData=t},compare:function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),s=i.next(),o=r.compareTo(s);if(0!==o)return o}return n.hasNext()?1:i.hasNext()?-1:0},hashCode:function(){return this.getEnvelopeInternal().hashCode()},isGeometryCollectionOrDerived:function(){return this.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===B.SORTINDEX_MULTIPOINT||this.getSortIndex()===B.SORTINDEX_MULTILINESTRING||this.getSortIndex()===B.SORTINDEX_MULTIPOLYGON},interfaces_:function(){return[o,s,u]},getClass:function(){return B}}),B.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},B.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},B.serialVersionUID=0x799ea46522854c00,B.SORTINDEX_POINT=0,B.SORTINDEX_MULTIPOINT=1,B.SORTINDEX_LINESTRING=2,B.SORTINDEX_LINEARRING=3,B.SORTINDEX_MULTILINESTRING=4,B.SORTINDEX_POLYGON=5,B.SORTINDEX_MULTIPOLYGON=6,B.SORTINDEX_GEOMETRYCOLLECTION=7,B.geometryChangedFilter={interfaces_:function(){return[q]},filter:function(t){t.geometryChangedAction()}},e(z.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return z}}),e(V.prototype,{isInBoundary:function(t){},interfaces_:function(){return[]},getClass:function(){return V}}),e(k.prototype,{isInBoundary:function(t){return t%2===1},interfaces_:function(){return[V]},getClass:function(){return k}}),e(Y.prototype,{isInBoundary:function(t){return t>0},interfaces_:function(){return[V]},getClass:function(){return Y}}),e(U.prototype,{isInBoundary:function(t){return t>1},interfaces_:function(){return[V]},getClass:function(){return U}}),e(X.prototype,{isInBoundary:function(t){return 1===t},interfaces_:function(){return[V]},getClass:function(){return X}}),V.Mod2BoundaryNodeRule=k,V.EndPointBoundaryNodeRule=Y,V.MultiValentEndPointBoundaryNodeRule=U,V.MonoValentEndPointBoundaryNodeRule=X,V.MOD2_BOUNDARY_RULE=new k,V.ENDPOINT_BOUNDARY_RULE=new Y,V.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new U,V.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new X,V.OGC_SFS_BOUNDARY_RULE=V.MOD2_BOUNDARY_RULE,e(H.prototype,{interfaces_:function(){return[]},getClass:function(){return H}}),H.isRing=function(t){return t.length<4?!1:!!t[0].equals2D(t[t.length-1])},H.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(H.indexOf(i,e)<0)return i}return null},H.scroll=function(t,e){var n=H.indexOf(e,t);if(0>n)return null;var i=new Array(t.length).fill(null);A.arraycopy(t,n,i,0,t.length-n),A.arraycopy(t,0,i,t.length-n,n),A.arraycopy(i,0,t,0,t.length)},H.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var n=0;n<i.length;n++)if(0!==s.compare(i[n],r[n]))return!1;return!0}},H.intersection=function(t,e){for(var n=new N,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},H.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},H.removeRepeatedPoints=function(t){if(!H.hasRepeatedPoints(t))return t;var e=new N(t,!1);return e.toCoordinateArray()},H.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;n>=i;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},H.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,n=0;n<t.length;n++)null!==t[n]&&(i[r++]=t[n]);return i},H.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new g(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3],a=arguments[4],n=0;a>n;n++)s[o+n]=new g(i[r+n])},H.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},H.envelope=function(t){for(var e=new C,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},H.toCoordinateArray=function(t){return t.toArray(H.coordArrayType)},H.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},H.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},H.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},H.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},H.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},H.extract=function(t,e,n){e=T.clamp(e,0,t.length),n=T.clamp(n,-1,t.length);var i=n-e+1;0>n&&(i=0),e>=t.length&&(i=0),e>n&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var s=0,o=e;n>=o;o++)r[s++]=t[o];return r},e(W.prototype,{compare:function(t,e){var n=t,i=e;return H.compare(n,i)},interfaces_:function(){return[a]},getClass:function(){return W}}),e(j.prototype,{compare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=H.compare(n,i),s=H.isEqualReversed(n,i);return s?0:r},OLDcompare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=H.increasingDirection(n),s=H.increasingDirection(i),o=r>0?0:n.length-1,a=s>0?0:n.length-1,u=0;u<n.length;u++){var l=n[o].compareTo(i[a]);if(0!==l)return l;o+=r,a+=s}return 0},interfaces_:function(){return[a]},getClass:function(){return j}}),H.ForwardComparator=W,H.BidirectionalComparator=j,H.coordArrayType=new Array(0).fill(null),K.prototype.get=function(){},K.prototype.put=function(){},K.prototype.size=function(){},K.prototype.values=function(){},K.prototype.entrySet=function(){},Z.prototype=new K,Q.prototype=new v,Q.prototype.contains=function(){},J.prototype=new Q,J.prototype.contains=function(t){for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(i===t)return!0}return!1},J.prototype.add=function(t){return this.contains(t)?!1:(this.array_.push(t),!0)},J.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},J.prototype.remove=function(t){throw new javascript.util.OperationNotSupported},J.prototype.size=function(){return this.array_.length},J.prototype.isEmpty=function(){return 0===this.array_.length},J.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},J.prototype.iterator=function(){return new Js(this)};var Js=function(t){this.hashSet_=t,this.position_=0};Js.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new x;return this.hashSet_.array_[this.position_++]},Js.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},Js.prototype.remove=function(){throw new E};var $s=0,to=1;rt.prototype=new Z,rt.prototype.get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(0>n)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},rt.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:$s,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do if(n=r,i=t.compareTo(r.key),0>i)r=r.left;else{if(!(i>0)){var s=r.value;return r.value=e,s}r=r.right}while(null!==r);var o={key:t,left:null,right:null,value:e,parent:n,color:$s,getValue:function(){return this.value},getKey:function(){return this.key}};return 0>i?n.left=o:n.right=o,this.fixAfterInsertion(o),this.size_++,null},rt.prototype.fixAfterInsertion=function(t){for(t.color=to;null!=t&&t!=this.root_&&t.parent.color==to;)if(tt(t)==nt(tt(tt(t)))){var e=it(tt(tt(t)));$(e)==to?(et(tt(t),$s),et(e,$s),et(tt(tt(t)),to),t=tt(tt(t))):(t==it(tt(t))&&(t=tt(t),this.rotateLeft(t)),et(tt(t),$s),et(tt(tt(t)),to),this.rotateRight(tt(tt(t))))}else{var e=nt(tt(tt(t)));$(e)==to?(et(tt(t),$s),et(e,$s),et(tt(tt(t)),to),t=tt(tt(t))):(t==nt(tt(t))&&(t=tt(t),this.rotateRight(t)),et(tt(t),$s),et(tt(tt(t)),to),this.rotateLeft(tt(tt(t))))}this.root_.color=$s},rt.prototype.values=function(){var t=new I,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=rt.successor(e));)t.add(e.value);return t},rt.prototype.entrySet=function(){var t=new J,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=rt.successor(e));)t.add(e);return t},rt.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left==t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},rt.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right==t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},rt.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},rt.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var e=t.parent,n=t;null!==e&&n===e.right;)n=e,e=e.parent;return e},rt.prototype.size=function(){return this.size_},e(st.prototype,{interfaces_:function(){return[]},getClass:function(){return st}}),ot.prototype=new Q,at.prototype=new ot,at.prototype.contains=function(t){for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(0===i.compareTo(t))return!0}return!1},at.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(1===i.compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},at.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},at.prototype.remove=function(t){throw new E},at.prototype.size=function(){return this.array_.length},at.prototype.isEmpty=function(){return 0===this.array_.length},at.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},at.prototype.iterator=function(){return new eo(this)};var eo=function(t){this.treeSet_=t,this.position_=0};eo.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new x;return this.treeSet_.array_[this.position_++]},eo.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},eo.prototype.remove=function(){throw new E},ut.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)return i=function(t,e){return t.compareTo(e)},void r.sort(i);if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else{if(3===arguments.length){e=r.slice(arguments[1],arguments[2]),e.sort();var s=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<s.length;t++)r.push(s[t]);return}if(4===arguments.length){for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),s=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<s.length;t++)r.push(s[t]);return}}},ut.asList=function(t){for(var e=new I,n=0,i=t.length;i>n;n++)e.add(t[n]);return e},e(lt.prototype,{interfaces_:function(){return[]},getClass:function(){return lt}}),lt.toDimensionSymbol=function(t){switch(t){case lt.FALSE:return lt.SYM_FALSE;case lt.TRUE:return lt.SYM_TRUE;case lt.DONTCARE:return lt.SYM_DONTCARE;case lt.P:return lt.SYM_P;case lt.L:return lt.SYM_L;case lt.A:return lt.SYM_A}throw new i(\"Unknown dimension value: \"+t)},lt.toDimensionValue=function(t){switch(O.toUpperCase(t)){case lt.SYM_FALSE:return lt.FALSE;case lt.SYM_TRUE:return lt.TRUE;case lt.SYM_DONTCARE:return lt.DONTCARE;case lt.SYM_P:return lt.P;case lt.SYM_L:return lt.L;case lt.SYM_A:return lt.A}throw new i(\"Unknown dimension symbol: \"+t)},lt.P=0,lt.L=1,lt.A=2,lt.FALSE=-1,lt.TRUE=-2,lt.DONTCARE=-3,lt.SYM_FALSE=\"F\",lt.SYM_TRUE=\"T\",lt.SYM_DONTCARE=\"*\",lt.SYM_P=\"0\",lt.SYM_L=\"1\",lt.SYM_A=\"2\",e(ht.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return ht}}),e(ct.prototype,{filter:function(t,e){},isDone:function(){},isGeometryChanged:function(){},interfaces_:function(){return[]},getClass:function(){return ct}}),h(ft,B),e(ft.prototype,{computeEnvelopeInternal:function(){for(var t=new C,e=0;e<this.geometries.length;e++)t.expandToInclude(this.geometries[e].getEnvelopeInternal());return t},getGeometryN:function(t){return this.geometries[t]},getSortIndex:function(){return B.SORTINDEX_GEOMETRYCOLLECTION},getCoordinates:function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this.geometries.length;n++)for(var i=this.geometries[n].getCoordinates(),r=0;r<i.length;r++)e++,t[e]=i[r];return t},getArea:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getArea();return t},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.geometries.length!==n.geometries.length)return!1;for(var i=0;i<this.geometries.length;i++)if(!this.geometries[i].equalsExact(n.geometries[i],e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<this.geometries.length;t++)this.geometries[t].normalize();ut.sort(this.geometries)},getCoordinate:function(){return this.isEmpty()?null:this.geometries[0].getCoordinate()},getBoundaryDimension:function(){for(var t=lt.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getBoundaryDimension());return t},getDimension:function(){for(var t=lt.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getDimension());return t},getLength:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getLength();return t},getNumPoints:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getNumPoints();return t},getNumGeometries:function(){return this.geometries.length},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=new at(ut.asList(this.geometries)),n=new at(ut.asList(t.geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],s=i,o=this.getNumGeometries(),a=s.getNumGeometries(),u=0;o>u&&a>u;){var l=this.getGeometryN(u),h=s.getGeometryN(u),c=l.compareToSameClass(h,r);if(0!==c)return c;u++}return o>u?1:a>u?-1:0}},apply:function(){if(R(arguments[0],z))for(var t=arguments[0],e=0;e<this.geometries.length;e++)this.geometries[e].apply(t);else if(R(arguments[0],ct)){var n=arguments[0];if(0===this.geometries.length)return null;for(var e=0;e<this.geometries.length&&(this.geometries[e].apply(n),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(i)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(r)}},getBoundary:function(){return this.checkNotGeometryCollection(this),f.shouldNeverReachHere(),null},clone:function(){var t=B.prototype.clone.call(this);t.geometries=new Array(this.geometries.length).fill(null);for(var e=0;e<this.geometries.length;e++)t.geometries[e]=this.geometries[e].clone();return t},getGeometryType:function(){return\"GeometryCollection\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new ft(t,this.factory)},isEmpty:function(){for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isEmpty())return!1;return!0},interfaces_:function(){return[]},getClass:function(){return ft}}),ft.serialVersionUID=-0x4f07bcb1f857d800,h(gt,ft),e(gt.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTILINESTRING},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?ft.prototype.equalsExact.call(this,t,e):!1}return ft.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return this.isClosed()?lt.FALSE:0},isClosed:function(){if(this.isEmpty())return!1;for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isClosed())return!1;return!0},getDimension:function(){return 1},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[t-1-n]=this.geometries[n].reverse();return this.getFactory().createMultiLineString(e)},getBoundary:function(){return new dt(this).getBoundary()},getGeometryType:function(){return\"MultiLineString\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new gt(t,this.factory)},interfaces_:function(){\nreturn[st]},getClass:function(){return gt}}),gt.serialVersionUID=0x7155d2ab4afa8000,e(dt.prototype,{boundaryMultiLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this.geomFact.createPoint(e[0]):this.geomFact.createMultiPointFromCoords(e)},getBoundary:function(){return this.geom instanceof St?this.boundaryLineString(this.geom):this.geom instanceof gt?this.boundaryMultiLineString(this.geom):this.geom.getBoundary()},boundaryLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){var e=this.bnRule.isInBoundary(2);return e?t.getStartPoint():this.geomFact.createMultiPoint()}return this.geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},getEmptyMultiPoint:function(){return this.geomFact.createMultiPoint()},computeBoundaryCoordinates:function(t){var e=new I;this.endpointMap=new rt;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this.endpointMap.entrySet().iterator();r.hasNext();){var s=r.next(),o=s.getValue(),a=o.count;this.bnRule.isInBoundary(a)&&e.add(s.getKey())}return H.toCoordinateArray(e)},addEndpoint:function(t){var e=this.endpointMap.get(t);null===e&&(e=new pt,this.endpointMap.put(t,e)),e.count++},interfaces_:function(){return[]},getClass:function(){return dt}}),dt.getBoundary=function(){if(1===arguments.length){var t=arguments[0],e=new dt(t);return e.getBoundary()}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=new dt(n,i);return e.getBoundary()}},e(pt.prototype,{interfaces_:function(){return[]},getClass:function(){return pt}}),e(Nt.prototype,{interfaces_:function(){return[]},getClass:function(){return Nt}}),Nt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;e>i;i++)n[i]=t;return new String(n)},Nt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new xt,n=new vt(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],s=\"\",o=new mt(Nt.getStackTrace(i)),a=new It(o),u=0;r>u;u++)try{s+=a.readLine()+Nt.NEWLINE}catch(t){if(!(t instanceof Et))throw t;f.shouldNeverReachHere()}finally{}return s}},Nt.split=function(t,e){for(var n=e.length,i=new I,r=\"\"+t,s=r.indexOf(e);s>=0;){var o=r.substring(0,s);i.add(o),r=r.substring(s+n),s=r.indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},Nt.toString=function(){if(1===arguments.length){var t=arguments[0];return Nt.SIMPLE_ORDINATE_FORMAT.format(t)}},Nt.spaces=function(t){return Nt.chars(\" \",t)},Nt.NEWLINE=A.getProperty(\"line.separator\"),Nt.SIMPLE_ORDINATE_FORMAT=new yt(\"0.#\"),e(Ct.prototype,{interfaces_:function(){return[]},getClass:function(){return Ct}}),Ct.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),s=0;r>s;s++)n.setOrdinate(i,s,t.getOrdinate(e,s))},Ct.isRing=function(t){var e=t.size();return 0===e?!0:3>=e?!1:t.getOrdinate(0,D.X)===t.getOrdinate(e-1,D.X)&&t.getOrdinate(0,D.Y)===t.getOrdinate(e-1,D.Y)},Ct.isEqual=function(t,e){var n=t.size(),i=e.size();if(n!==i)return!1;for(var s=Math.min(t.getDimension(),e.getDimension()),o=0;n>o;o++)for(var a=0;s>a;a++){var u=t.getOrdinate(o,a),l=e.getOrdinate(o,a);if(!(t.getOrdinate(o,a)===e.getOrdinate(o,a)||r.isNaN(u)&&r.isNaN(l)))return!1}return!0},Ct.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Ct.copy(e,0,i,0,r),r>0)for(var s=r;n>s;s++)Ct.copy(e,r-1,i,s,1);return i},Ct.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;n>=i;i++)Ct.swap(t,i,e-i)},Ct.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Ct.copy=function(t,e,n,i,r){for(var s=0;r>s;s++)Ct.copyCoord(t,e+s,n,i+s)},Ct.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new P;i.append(\"(\");for(var r=0;e>r;r++){r>0&&i.append(\" \");for(var s=0;n>s;s++)s>0&&i.append(\",\"),i.append(Nt.toString(t.getOrdinate(r,s)))}return i.append(\")\"),i.toString()}},Ct.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(3>=n)return Ct.createClosedRing(t,e,4);var i=e.getOrdinate(0,D.X)===e.getOrdinate(n-1,D.X)&&e.getOrdinate(0,D.Y)===e.getOrdinate(n-1,D.Y);return i?e:Ct.createClosedRing(t,e,n+1)},Ct.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Ct.copy(e,0,i,0,r);for(var s=r;n>s;s++)Ct.copy(e,0,i,s,1);return i},h(St,B),e(St.prototype,{computeEnvelopeInternal:function(){return this.isEmpty()?new C:this.points.expandEnvelope(new C)},isRing:function(){return this.isClosed()&&this.isSimple()},getSortIndex:function(){return B.SORTINDEX_LINESTRING},getCoordinates:function(){return this.points.toCoordinateArray()},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.points.size()!==n.points.size())return!1;for(var i=0;i<this.points.size();i++)if(!this.equal(this.points.getCoordinate(i),n.points.getCoordinate(i),e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<Math.trunc(this.points.size()/2);t++){var e=this.points.size()-1-t;if(!this.points.getCoordinate(t).equals(this.points.getCoordinate(e)))return this.points.getCoordinate(t).compareTo(this.points.getCoordinate(e))>0&&Ct.reverse(this.points),null}},getCoordinate:function(){return this.isEmpty()?null:this.points.getCoordinate(0)},getBoundaryDimension:function(){return this.isClosed()?lt.FALSE:0},isClosed:function(){return this.isEmpty()?!1:this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},getEndPoint:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},getDimension:function(){return 1},getLength:function(){return he.computeLength(this.points)},getNumPoints:function(){return this.points.size()},reverse:function(){var t=this.points.copy();Ct.reverse(t);var e=this.getFactory().createLineString(t);return e},compareToSameClass:function(){if(1===arguments.length){for(var t=arguments[0],e=t,n=0,i=0;n<this.points.size()&&i<e.points.size();){var r=this.points.getCoordinate(n).compareTo(e.points.getCoordinate(i));if(0!==r)return r;n++,i++}return n<this.points.size()?1:i<e.points.size()?-1:0}if(2===arguments.length){var s=arguments[0],o=arguments[1],e=s;return o.compare(this.points,e.points)}},apply:function(){if(R(arguments[0],z))for(var t=arguments[0],e=0;e<this.points.size();e++)t.filter(this.points.getCoordinate(e));else if(R(arguments[0],ct)){var n=arguments[0];if(0===this.points.size())return null;for(var e=0;e<this.points.size()&&(n.filter(this.points,e),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this)}},getBoundary:function(){return new dt(this).getBoundary()},isEquivalentClass:function(t){return t instanceof St},clone:function(){var t=B.prototype.clone.call(this);return t.points=this.points.clone(),t},getCoordinateN:function(t){return this.points.getCoordinate(t)},getGeometryType:function(){return\"LineString\"},copy:function(){return new St(this.points.copy(),this.factory)},getCoordinateSequence:function(){return this.points},isEmpty:function(){return 0===this.points.size()},init:function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new i(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this.points=t},isCoordinate:function(t){for(var e=0;e<this.points.size();e++)if(this.points.getCoordinate(e).equals(t))return!0;return!1},getStartPoint:function(){return this.isEmpty()?null:this.getPointN(0)},getPointN:function(t){return this.getFactory().createPoint(this.points.getCoordinate(t))},interfaces_:function(){return[st]},getClass:function(){return St}}),St.serialVersionUID=0x2b2b51ba435c8e00,e(wt.prototype,{interfaces_:function(){return[]},getClass:function(){return wt}}),h(Lt,B),e(Lt.prototype,{computeEnvelopeInternal:function(){if(this.isEmpty())return new C;var t=new C;return t.expandToInclude(this.coordinates.getX(0),this.coordinates.getY(0)),t},getSortIndex:function(){return B.SORTINDEX_POINT},getCoordinates:function(){return this.isEmpty()?[]:[this.getCoordinate()]},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?this.isEmpty()&&t.isEmpty()?!0:this.isEmpty()!==t.isEmpty()?!1:this.equal(t.getCoordinate(),this.getCoordinate(),e):!1}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){},getCoordinate:function(){return 0!==this.coordinates.size()?this.coordinates.getCoordinate(0):null},getBoundaryDimension:function(){return lt.FALSE},getDimension:function(){return 0},getNumPoints:function(){return this.isEmpty()?0:1},reverse:function(){return this.copy()},getX:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getX called on empty Point\");return this.getCoordinate().x},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=n;return i.compare(this.coordinates,e.coordinates)}},apply:function(){if(R(arguments[0],z)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(R(arguments[0],ct)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this.coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var n=arguments[0];n.filter(this)}else if(R(arguments[0],q)){var i=arguments[0];i.filter(this)}},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},clone:function(){var t=B.prototype.clone.call(this);return t.coordinates=this.coordinates.clone(),t},getGeometryType:function(){return\"Point\"},copy:function(){return new Lt(this.coordinates.copy(),this.factory)},getCoordinateSequence:function(){return this.coordinates},getY:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getY called on empty Point\");return this.getCoordinate().y},isEmpty:function(){return 0===this.coordinates.size()},init:function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),f.isTrue(t.size()<=1),this.coordinates=t},isSimple:function(){return!0},interfaces_:function(){return[wt]},getClass:function(){return Lt}}),Lt.serialVersionUID=0x44077bad161cbc00,e(Rt.prototype,{interfaces_:function(){return[]},getClass:function(){return Rt}}),h(Tt,B),e(Tt.prototype,{computeEnvelopeInternal:function(){return this.shell.getEnvelopeInternal()},getSortIndex:function(){return B.SORTINDEX_POLYGON},getCoordinates:function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this.shell.getCoordinates(),i=0;i<n.length;i++)e++,t[e]=n[i];for(var r=0;r<this.holes.length;r++)for(var s=this.holes[r].getCoordinates(),o=0;o<s.length;o++)e++,t[e]=s[o];return t},getArea:function(){var t=0;t+=Math.abs(he.signedArea(this.shell.getCoordinateSequence()));for(var e=0;e<this.holes.length;e++)t-=Math.abs(he.signedArea(this.holes[e].getCoordinateSequence()));return t},isRectangle:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this.shell)return!1;if(5!==this.shell.getNumPoints())return!1;for(var t=this.shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;5>n;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var s=t.getX(0),o=t.getY(0),n=1;4>=n;n++){var i=t.getX(n),r=t.getY(n),a=i!==s,u=r!==o;if(a===u)return!1;s=i,o=r}return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t,i=this.shell,r=n.shell;if(!i.equalsExact(r,e))return!1;if(this.holes.length!==n.holes.length)return!1;for(var s=0;s<this.holes.length;s++)if(!this.holes[s].equalsExact(n.holes[s],e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){if(0===arguments.length){this.normalize(this.shell,!0);for(var t=0;t<this.holes.length;t++)this.normalize(this.holes[t],!1);ut.sort(this.holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);A.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=H.minCoordinate(e.getCoordinates());H.scroll(i,r),A.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],he.isCCW(e.getCoordinates())===n&&H.reverse(e.getCoordinates())}},getCoordinate:function(){return this.shell.getCoordinate()},getNumInteriorRing:function(){return this.holes.length},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},getLength:function(){var t=0;t+=this.shell.getLength();for(var e=0;e<this.holes.length;e++)t+=this.holes[e].getLength();return t},getNumPoints:function(){for(var t=this.shell.getNumPoints(),e=0;e<this.holes.length;e++)t+=this.holes[e].getNumPoints();return t},reverse:function(){var t=this.copy();t.shell=this.shell.copy().reverse(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].copy().reverse();return t},convexHull:function(){return this.getExteriorRing().convexHull()},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=this.shell,n=t.shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],s=i,e=this.shell,n=s.shell,o=e.compareToSameClass(n,r);if(0!==o)return o;for(var a=this.getNumInteriorRing(),u=s.getNumInteriorRing(),l=0;a>l&&u>l;){var h=this.getInteriorRingN(l),c=s.getInteriorRingN(l),f=h.compareToSameClass(c,r);if(0!==f)return f;l++}return a>l?1:u>l?-1:0}},apply:function(){if(R(arguments[0],z)){var t=arguments[0];this.shell.apply(t);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(t)}else if(R(arguments[0],ct)){var n=arguments[0];if(this.shell.apply(n),!n.isDone())for(var e=0;e<this.holes.length&&(this.holes[e].apply(n),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this),this.shell.apply(r);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(r)}},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this.holes.length+1).fill(null);t[0]=this.shell;for(var e=0;e<this.holes.length;e++)t[e+1]=this.holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},clone:function(){var t=B.prototype.clone.call(this);t.shell=this.shell.clone(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].clone();return t},getGeometryType:function(){return\"Polygon\"},copy:function(){for(var t=this.shell.copy(),e=new Array(this.holes.length).fill(null),n=0;n<e.length;n++)e[n]=this.holes[n].copy();return new Tt(t,e,this.factory)},getExteriorRing:function(){return this.shell},isEmpty:function(){return this.shell.isEmpty()},getInteriorRingN:function(t){return this.holes[t]},interfaces_:function(){return[Rt]},getClass:function(){return Tt}}),Tt.serialVersionUID=-0x307ffefd8dc97200,h(Pt,ft),e(Pt.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTIPOINT},isValid:function(){return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?ft.prototype.equalsExact.call(this,t,e):!1}return ft.prototype.equalsExact.apply(this,arguments)},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.geometries[t].getCoordinate()}return ft.prototype.getCoordinate.apply(this,arguments)},getBoundaryDimension:function(){return lt.FALSE},getDimension:function(){return 0},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},getGeometryType:function(){return\"MultiPoint\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new Pt(t,this.factory)},interfaces_:function(){return[wt]},getClass:function(){return Pt}}),Pt.serialVersionUID=-0x6fb1ed4162e0fc00,h(bt,St),e(bt.prototype,{getSortIndex:function(){return B.SORTINDEX_LINEARRING},getBoundaryDimension:function(){return lt.FALSE},isClosed:function(){return this.isEmpty()?!0:St.prototype.isClosed.call(this)},reverse:function(){var t=this.points.copy();Ct.reverse(t);var e=this.getFactory().createLinearRing(t);return e},validateConstruction:function(){if(!this.isEmpty()&&!St.prototype.isClosed.call(this))throw new i(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<bt.MINIMUM_VALID_SIZE)throw new i(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},getGeometryType:function(){return\"LinearRing\"},copy:function(){return new bt(this.points.copy(),this.factory)},interfaces_:function(){return[]},getClass:function(){return bt}}),bt.MINIMUM_VALID_SIZE=4,bt.serialVersionUID=-0x3b229e262367a600,h(Ot,ft),e(Ot.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTIPOLYGON},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?ft.prototype.equalsExact.call(this,t,e):!1}return ft.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new I,e=0;e<this.geometries.length;e++)for(var n=this.geometries[e],i=n.getBoundary(),r=0;r<i.getNumGeometries();r++)t.add(i.getGeometryN(r));var s=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(s))},getGeometryType:function(){return\"MultiPolygon\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new Ot(t,this.factory)},interfaces_:function(){return[Rt]},getClass:function(){return Ot}}),Ot.serialVersionUID=-0x7a5aa1369171980,e(_t.prototype,{setCopyUserData:function(t){this.isUserDataCopied=t},edit:function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this.isUserDataCopied&&n.setUserData(t.getUserData()),n},editInternal:function(t,e){return null===this.factory&&(this.factory=t.getFactory()),t instanceof ft?this.editGeometryCollection(t,e):t instanceof Tt?this.editPolygon(t,e):t instanceof Lt?e.edit(t,this.factory):t instanceof St?e.edit(t,this.factory):(f.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},editGeometryCollection:function(t,e){for(var n=e.edit(t,this.factory),i=new I,r=0;r<n.getNumGeometries();r++){var s=this.edit(n.getGeometryN(r),e);null===s||s.isEmpty()||i.add(s)}return n.getClass()===Pt?this.factory.createMultiPoint(i.toArray([])):n.getClass()===gt?this.factory.createMultiLineString(i.toArray([])):n.getClass()===Ot?this.factory.createMultiPolygon(i.toArray([])):this.factory.createGeometryCollection(i.toArray([]))},editPolygon:function(t,e){var n=e.edit(t,this.factory);if(null===n&&(n=this.factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this.factory.createPolygon();for(var r=new I,s=0;s<n.getNumInteriorRing();s++){var o=this.edit(n.getInteriorRingN(s),e);null===o||o.isEmpty()||r.add(o)}return this.factory.createPolygon(i,r.toArray([]))},interfaces_:function(){return[]},getClass:function(){return _t}}),_t.GeometryEditorOperation=Mt,e(Dt.prototype,{edit:function(t,e){return t},interfaces_:function(){return[Mt]},getClass:function(){return Dt}}),e(At.prototype,{edit:function(t,e){if(t instanceof bt)return e.createLinearRing(this.editCoordinates(t.getCoordinates(),t));if(t instanceof St)return e.createLineString(this.editCoordinates(t.getCoordinates(),t));if(t instanceof Lt){var n=this.editCoordinates(t.getCoordinates(),t);return n.length>0?e.createPoint(n[0]):e.createPoint()}return t},interfaces_:function(){return[Mt]},getClass:function(){return At}}),e(Ft.prototype,{edit:function(t,e){return t instanceof bt?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof St?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Lt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},interfaces_:function(){return[Mt]},getClass:function(){return Ft}}),_t.NoOpGeometryOperation=Dt,_t.CoordinateOperation=At,_t.CoordinateSequenceOperation=Ft,e(Gt.prototype,{setOrdinate:function(t,e,n){switch(e){case D.X:this.coordinates[t].x=n;break;case D.Y:this.coordinates[t].y=n;break;case D.Z:this.coordinates[t].z=n;break;default:throw new i(\"invalid ordinateIndex\")}},size:function(){return this.coordinates.length},getOrdinate:function(t,e){switch(e){case D.X:return this.coordinates[t].x;case D.Y:return this.coordinates[t].y;case D.Z:return this.coordinates[t].z}return r.NaN},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this.coordinates[e].x,n.y=this.coordinates[e].y,n.z=this.coordinates[e].z}},getCoordinateCopy:function(t){return new g(this.coordinates[t])},getDimension:function(){return this.dimension},getX:function(t){return this.coordinates[t].x},clone:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].clone();return new Gt(t,this.dimension)},expandEnvelope:function(t){for(var e=0;e<this.coordinates.length;e++)t.expandToInclude(this.coordinates[e]);return t},copy:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].copy();return new Gt(t,this.dimension)},toString:function(){if(this.coordinates.length>0){var t=new P(17*this.coordinates.length);t.append(\"(\"),t.append(this.coordinates[0]);for(var e=1;e<this.coordinates.length;e++)t.append(\", \"),t.append(this.coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},getY:function(t){return this.coordinates[t].y},toCoordinateArray:function(){return this.coordinates},interfaces_:function(){return[D,u]},getClass:function(){return Gt}}),Gt.serialVersionUID=-0xcb44a778db18e00,e(qt.prototype,{readResolve:function(){return qt.instance()},create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Gt(t)}if(R(arguments[0],D)){var e=arguments[0];return new Gt(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),2>i?new Gt(n):new Gt(n,i)}},interfaces_:function(){return[G,u]},getClass:function(){return qt}}),qt.instance=function(){return qt.instanceObject},qt.serialVersionUID=-0x38e49fa6cf6f2e00,qt.instanceObject=new qt;var no,io=Object.defineProperty,ro=zt({delete:kt,has:Xt,get:Yt,set:Ht,keys:jt,values:Kt,entries:Zt,forEach:$t,clear:Wt}),so=\"undefined\"!=typeof Map&&Map.prototype.values?Map:ro;te.prototype=new K,te.prototype.get=function(t){return this.map_.get(t)||null},te.prototype.put=function(t,e){return this.map_.set(t,e),e},te.prototype.values=function(){for(var t=new I,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},te.prototype.entrySet=function(){var t=new J;return this.map_.entries().forEach(function(e){return t.add(e)}),t},te.prototype.size=function(){return this.map_.size()},e(ee.prototype,{equals:function(t){if(!(t instanceof ee))return!1;var e=t;return this.modelType===e.modelType&&this.scale===e.scale},compareTo:function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new b(n).compareTo(new b(i))},getScale:function(){return this.scale},isFloating:function(){return this.modelType===ee.FLOATING||this.modelType===ee.FLOATING_SINGLE},getType:function(){return this.modelType},toString:function(){var t=\"UNKNOWN\";return this.modelType===ee.FLOATING?t=\"Floating\":this.modelType===ee.FLOATING_SINGLE?t=\"Floating-Single\":this.modelType===ee.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},makePrecise:function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(r.isNaN(t))return t;if(this.modelType===ee.FLOATING_SINGLE){var e=t;return e}return this.modelType===ee.FIXED?Math.round(t*this.scale)/this.scale:t}if(arguments[0]instanceof g){var n=arguments[0];if(this.modelType===ee.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}},getMaximumSignificantDigits:function(){var t=16;return this.modelType===ee.FLOATING?t=16:this.modelType===ee.FLOATING_SINGLE?t=6:this.modelType===ee.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},setScale:function(t){this.scale=Math.abs(t)},interfaces_:function(){return[u,s]},getClass:function(){return ee}}),ee.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},e(ne.prototype,{readResolve:function(){return ne.nameToTypeMap.get(this.name)},toString:function(){return this.name},interfaces_:function(){return[u]},getClass:function(){return ne}}),ne.serialVersionUID=-552860263173159e4,ne.nameToTypeMap=new te,ee.Type=ne,ee.serialVersionUID=0x6bee6404e9a25c00,ee.FIXED=new ne(\"FIXED\"),ee.FLOATING=new ne(\"FLOATING\"),ee.FLOATING_SINGLE=new ne(\"FLOATING SINGLE\"),ee.maximumPreciseValue=9007199254740992,e(ie.prototype,{toGeometry:function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new g(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new g(t.getMinX(),t.getMinY()),new g(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new g(t.getMinX(),t.getMinY()),new g(t.getMinX(),t.getMaxY()),new g(t.getMaxX(),t.getMaxY()),new g(t.getMaxX(),t.getMinY()),new g(t.getMinX(),t.getMinY())]),null)},createLineString:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(R(arguments[0],D)){var e=arguments[0];return new St(e,this)}}},createMultiLineString:function(){if(0===arguments.length)return new gt(null,this);if(1===arguments.length){var t=arguments[0];return new gt(t,this)}},buildGeometry:function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var s=r.next(),o=s.getClass();null===e&&(e=o),o!==e&&(n=!0),s.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(ie.toGeometryArray(t));var a=t.iterator().next(),u=t.size()>1;if(u){if(a instanceof Tt)return this.createMultiPolygon(ie.toPolygonArray(t));if(a instanceof St)return this.createMultiLineString(ie.toLineStringArray(t));if(a instanceof Lt)return this.createMultiPoint(ie.toPointArray(t));f.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},createMultiPointFromCoords:function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},createPoint:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(R(arguments[0],D)){var e=arguments[0];return new Lt(e,this)}}},getCoordinateSequenceFactory:function(){return this.coordinateSequenceFactory},createPolygon:function(){if(0===arguments.length)return new Tt(null,null,this);if(1===arguments.length){if(R(arguments[0],D)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof bt){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new Tt(i,r,this)}},getSRID:function(){return this.SRID},createGeometryCollection:function(){if(0===arguments.length)return new ft(null,this);if(1===arguments.length){var t=arguments[0];return new ft(t,this)}},createGeometry:function(t){var e=new _t(this);return e.edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];arguments[1];return this.coordinateSequenceFactory.create(t)}}})},getPrecisionModel:function(){return this.precisionModel},createLinearRing:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(R(arguments[0],D)){var e=arguments[0];return new bt(e,this)}}},createMultiPolygon:function(){if(0===arguments.length)return new Ot(null,this);if(1===arguments.length){var t=arguments[0];return new Ot(t,this)}},createMultiPoint:function(){if(0===arguments.length)return new Pt(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Pt(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(R(arguments[0],D)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var s=this.getCoordinateSequenceFactory().create(1,n.getDimension());Ct.copy(n,r,s,0,1),i[r]=this.createPoint(s)}return this.createMultiPoint(i)}}},interfaces_:function(){return[u]},getClass:function(){return ie}}),ie.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.getDefaultCoordinateSequenceFactory=function(){return qt.instance()},ie.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},ie.serialVersionUID=-0x5ea75f2051eeb400;var oo={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/};e(re.prototype,{read:function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=oo.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&(r=oo.emptyTypeStr.exec(t),r[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],uo[n]&&(e=uo[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},write:function(t){return this.extractGeometry(t)},extractGeometry:function(t){var e=t.getGeometryType().toLowerCase();if(!ao[e])return null;var n,i=e.toUpperCase();return n=t.isEmpty()?i+\" EMPTY\":i+\"(\"+ao[e].apply(this,[t])+\")\"}});var ao={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){\nreturn ao.coordinate.call(this,t.coordinates.coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push(\"(\"+ao.point.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;i>n;++n)e.push(ao.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;i>n;++n)e.push(ao.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push(\"(\"+ao.linestring.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+ao.linestring.apply(this,[t.shell])+\")\");for(var n=0,i=t.holes.length;i>n;++n)e.push(\"(\"+ao.linestring.apply(this,[t.holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push(\"(\"+ao.polygon.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push(this.extractGeometry(t.geometries[n]));return e.join(\",\")}},uo={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(oo.spaces);return this.geometryFactory.createPoint(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;s>r;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;s>r;++r)e=n[r].trim().split(oo.spaces),i.push(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;s>r;++r)e=n[r].trim().split(oo.spaces),i.push(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(oo.parenComma),i=[],r=0,s=n.length;s>r;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,s=t.trim().split(oo.parenComma),o=[],a=0,u=s.length;u>a;++a)e=s[a].replace(oo.trimParens,\"$1\"),n=uo.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n.points),0===a?r=i:o.push(i);return this.geometryFactory.createPolygon(r,o)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(oo.doubleParenComma),i=[],r=0,s=n.length;s>r;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\");for(var e=t.trim().split(\"|\"),n=[],i=0,r=e.length;r>i;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}};e(se.prototype,{write:function(t){return this.parser.write(t)}}),e(se,{toLineString:function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"}}),e(oe.prototype,{getIndexAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intLineIndex[t][e]},getTopologySummary:function(){var t=new P;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},computeIntersection:function(t,e,n,i){this.inputLines[0][0]=t,this.inputLines[0][1]=e,this.inputLines[1][0]=n,this.inputLines[1][1]=i,this.result=this.computeIntersect(t,e,n,i)},getIntersectionNum:function(){return this.result},computeIntLineIndex:function(){if(0===arguments.length)null===this.intLineIndex&&(this.intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],e=this.getEdgeDistance(t,0),n=this.getEdgeDistance(t,1);e>n?(this.intLineIndex[t][0]=0,this.intLineIndex[t][1]=1):(this.intLineIndex[t][0]=1,this.intLineIndex[t][1]=0)}},isProper:function(){return this.hasIntersection()&&this._isProper},setPrecisionModel:function(t){this.precisionModel=t},isInteriorIntersection:function(){if(0===arguments.length)return this.isInteriorIntersection(0)?!0:!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this.result;e++)if(!this.intPt[e].equals2D(this.inputLines[t][0])&&!this.intPt[e].equals2D(this.inputLines[t][1]))return!0;return!1}},getIntersection:function(t){return this.intPt[t]},isEndPoint:function(){return this.hasIntersection()&&!this._isProper},hasIntersection:function(){return this.result!==oe.NO_INTERSECTION},getEdgeDistance:function(t,e){var n=oe.computeEdgeDistance(this.intPt[e],this.inputLines[t][0],this.inputLines[t][1]);return n},isCollinear:function(){return this.result===oe.COLLINEAR_INTERSECTION},toString:function(){return se.toLineString(this.inputLines[0][0],this.inputLines[0][1])+\" - \"+se.toLineString(this.inputLines[1][0],this.inputLines[1][1])+this.getTopologySummary()},getEndpoint:function(t,e){return this.inputLines[t][e]},isIntersection:function(t){for(var e=0;e<this.result;e++)if(this.intPt[e].equals2D(t))return!0;return!1},getIntersectionAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intPt[this.intLineIndex[t][e]]},interfaces_:function(){return[]},getClass:function(){return oe}}),oe.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),s=-1;if(t.equals(e))s=0;else if(t.equals(n))s=i>r?i:r;else{var o=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);s=i>r?o:a,0!==s||t.equals(e)||(s=Math.max(o,a))}return f.isTrue(!(0===s&&!t.equals(e)),\"Bad distance calculation\"),s},oe.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=Math.sqrt(i*i+r*r);return f.isTrue(!(0===s&&!t.equals(e)),\"Invalid distance calculation\"),s},oe.DONT_INTERSECT=0,oe.DO_INTERSECT=1,oe.COLLINEAR=2,oe.NO_INTERSECTION=0,oe.POINT_INTERSECTION=1,oe.COLLINEAR_INTERSECTION=2,h(ae,oe),e(ae.prototype,{isInSegmentEnvelopes:function(t){var e=new C(this.inputLines[0][0],this.inputLines[0][1]),n=new C(this.inputLines[1][0],this.inputLines[1][1]);return e.contains(t)&&n.contains(t)},computeIntersection:function(){if(3!==arguments.length)return oe.prototype.computeIntersection.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2];return this._isProper=!1,C.intersects(e,n,t)&&0===he.orientationIndex(e,n,t)&&0===he.orientationIndex(n,e,t)?(this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this.result=oe.POINT_INTERSECTION,null):void(this.result=oe.NO_INTERSECTION)},normalizeToMinimum:function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},safeHCoordinateIntersection:function(t,e,n,i){var r=null;try{r=F.intersection(t,e,n,i)}catch(s){if(!(s instanceof w))throw s;r=ae.nearestEndpoint(t,e,n,i)}finally{}return r},intersection:function(t,e,n,i){var r=this.intersectionWithNormalization(t,e,n,i);return this.isInSegmentEnvelopes(r)||(r=new g(ae.nearestEndpoint(t,e,n,i))),null!==this.precisionModel&&this.precisionModel.makePrecise(r),r},smallestInAbsValue:function(t,e,n,i){var r=t,s=Math.abs(r);return Math.abs(e)<s&&(r=e,s=Math.abs(e)),Math.abs(n)<s&&(r=n,s=Math.abs(n)),Math.abs(i)<s&&(r=i),r},checkDD:function(t,e,n,i,r){var s=M.intersection(t,e,n,i),o=this.isInSegmentEnvelopes(s);A.out.println(\"DD in env = \"+o+\"  --------------------- \"+s),r.distance(s)>1e-4&&A.out.println(\"Distance = \"+r.distance(s))},intersectionWithNormalization:function(t,e,n,i){var r=new g(t),s=new g(e),o=new g(n),a=new g(i),u=new g;this.normalizeToEnvCentre(r,s,o,a,u);var l=this.safeHCoordinateIntersection(r,s,o,a);return l.x+=u.x,l.y+=u.y,l},computeCollinearIntersection:function(t,e,n,i){var r=C.intersects(t,e,n),s=C.intersects(t,e,i),o=C.intersects(n,i,t),a=C.intersects(n,i,e);return r&&s?(this.intPt[0]=n,this.intPt[1]=i,oe.COLLINEAR_INTERSECTION):o&&a?(this.intPt[0]=t,this.intPt[1]=e,oe.COLLINEAR_INTERSECTION):r&&o?(this.intPt[0]=n,this.intPt[1]=t,!n.equals(t)||s||a?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):r&&a?(this.intPt[0]=n,this.intPt[1]=e,!n.equals(e)||s||o?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):s&&o?(this.intPt[0]=i,this.intPt[1]=t,!i.equals(t)||r||a?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):s&&a?(this.intPt[0]=i,this.intPt[1]=e,!i.equals(e)||r||o?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):oe.NO_INTERSECTION},normalizeToEnvCentre:function(t,e,n,i,r){var s=t.x<e.x?t.x:e.x,o=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,h=n.y<i.y?n.y:i.y,c=n.x>i.x?n.x:i.x,f=n.y>i.y?n.y:i.y,g=s>l?s:l,d=c>a?a:c,p=o>h?o:h,v=f>u?u:f,m=(g+d)/2,y=(p+v)/2;r.x=m,r.y=y,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},computeIntersect:function(t,e,n,i){if(this._isProper=!1,!C.intersects(t,e,n,i))return oe.NO_INTERSECTION;var r=he.orientationIndex(t,e,n),s=he.orientationIndex(t,e,i);if(r>0&&s>0||0>r&&0>s)return oe.NO_INTERSECTION;var o=he.orientationIndex(n,i,t),a=he.orientationIndex(n,i,e);if(o>0&&a>0||0>o&&0>a)return oe.NO_INTERSECTION;var u=0===r&&0===s&&0===o&&0===a;return u?this.computeCollinearIntersection(t,e,n,i):(0===r||0===s||0===o||0===a?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this.intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this.intPt[0]=e:0===r?this.intPt[0]=new g(n):0===s?this.intPt[0]=new g(i):0===o?this.intPt[0]=new g(t):0===a&&(this.intPt[0]=new g(e))):(this._isProper=!0,this.intPt[0]=this.intersection(t,e,n,i)),oe.POINT_INTERSECTION)},interfaces_:function(){return[]},getClass:function(){return ae}}),ae.nearestEndpoint=function(t,e,n,i){var r=t,s=he.distancePointLine(t,n,i),o=he.distancePointLine(e,n,i);return s>o&&(s=o,r=e),o=he.distancePointLine(n,t,e),s>o&&(s=o,r=n),o=he.distancePointLine(i,t,e),s>o&&(s=o,r=i),r},e(ue.prototype,{interfaces_:function(){return[]},getClass:function(){return ue}}),ue.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=n.x-e.x,o=n.y-e.y;return ue.signOfDet2x2(i,r,s,o)},ue.signOfDet2x2=function(t,e,n,i){var r=null,s=null,o=null,a=0;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?i>=e||(r=-r,s=t,t=n,n=s,s=e,e=i,i=s):-i>=e?(r=-r,n=-n,i=-i):(s=t,t=-n,n=s,s=e,e=-i,i=s):i>0?i>=-e?(r=-r,t=-t,e=-e):(s=-t,t=n,n=s,s=-e,e=i,i=s):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,s=-t,t=-n,n=s,s=-e,e=-i,i=s),t>0){if(!(n>0))return r;if(!(n>=t))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(a+=1,o=Math.floor(n/t),n-=o*t,i-=o*e,0>i)return-r;if(i>e)return r;if(t>n+n){if(i+i>e)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(o=Math.floor(t/n),t-=o*n,e-=o*i,0>e)return r;if(e>i)return-r;if(n>t+t){if(e+e>i)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}},e(le.prototype,{countSegment:function(t,e){if(t.x<this.p.x&&e.x<this.p.x)return null;if(this.p.x===e.x&&this.p.y===e.y)return this.isPointOnSegment=!0,null;if(t.y===this.p.y&&e.y===this.p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this.p.x>=n&&this.p.x<=i&&(this.isPointOnSegment=!0),null}if(t.y>this.p.y&&e.y<=this.p.y||e.y>this.p.y&&t.y<=this.p.y){var r=t.x-this.p.x,s=t.y-this.p.y,o=e.x-this.p.x,a=e.y-this.p.y,u=ue.signOfDet2x2(r,s,o,a);if(0===u)return this.isPointOnSegment=!0,null;s>a&&(u=-u),u>0&&this.crossingCount++}},isPointInPolygon:function(){return this.getLocation()!==L.EXTERIOR},getLocation:function(){return this.isPointOnSegment?L.BOUNDARY:this.crossingCount%2===1?L.INTERIOR:L.EXTERIOR},isOnSegment:function(){return this.isPointOnSegment},interfaces_:function(){return[]},getClass:function(){return le}}),le.locatePointInRing=function(){if(arguments[0]instanceof g&&R(arguments[1],D)){for(var t=arguments[0],e=arguments[1],n=new le(t),i=new g,r=new g,s=1;s<e.size();s++)if(e.getCoordinate(s,i),e.getCoordinate(s-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof g&&arguments[1]instanceof Array){for(var o=arguments[0],a=arguments[1],n=new le(o),s=1;s<a.length;s++){var i=a[s],r=a[s-1];if(n.countSegment(i,r),n.isOnSegment())return n.getLocation()}return n.getLocation()}},e(he.prototype,{interfaces_:function(){return[]},getClass:function(){return he}}),he.orientationIndex=function(t,e,n){return M.orientationIndex(t,e,n)},he.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,s=t[i+1].y,o=t[i-1].y;e+=r*(o-s)}return e/2}if(R(arguments[0],D)){var a=arguments[0],u=a.size();if(3>u)return 0;var l=new g,h=new g,c=new g;a.getCoordinate(0,h),a.getCoordinate(1,c);var n=h.x;c.x-=n;for(var e=0,i=1;u-1>i;i++)l.y=h.y,h.x=c.x,h.y=c.y,a.getCoordinate(i+1,c),c.x-=n,e+=h.x*(l.y-c.y);return e/2}},he.distanceLineLine=function(t,e,n,i){if(t.equals(e))return he.distancePointLine(t,n,i);if(n.equals(i))return he.distancePointLine(i,t,e);var r=!1;if(C.intersects(t,e,n,i)){var s=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===s)r=!0;else{var o=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=(t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y),u=a/s,l=o/s;(0>l||l>1||0>u||u>1)&&(r=!0)}}else r=!0;return r?T.min(he.distancePointLine(t,n,i),he.distancePointLine(e,n,i),he.distancePointLine(n,t,e),he.distancePointLine(i,t,e)):0},he.isPointInRing=function(t,e){return he.locatePointInRing(t,e)!==L.EXTERIOR},he.computeLength=function(t){var e=t.size();if(1>=e)return 0;var n=0,i=new g;t.getCoordinate(0,i);for(var r=i.x,s=i.y,o=1;e>o;o++){t.getCoordinate(o,i);var a=i.x,u=i.y,l=a-r,h=u-s;n+=Math.sqrt(l*l+h*h),r=a,s=u}return n},he.isCCW=function(t){var e=t.length-1;if(3>e)throw new i(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],r=0,s=1;e>=s;s++){var o=t[s];o.y>n.y&&(n=o,r=s)}var a=r;do a-=1,0>a&&(a=e);while(t[a].equals2D(n)&&a!==r);var u=r;do u=(u+1)%e;while(t[u].equals2D(n)&&u!==r);var l=t[a],h=t[u];if(l.equals2D(n)||h.equals2D(n)||l.equals2D(h))return!1;var c=he.computeOrientation(l,n,h),f=!1;return f=0===c?l.x>h.x:c>0},he.locatePointInRing=function(t,e){return le.locatePointInRing(t,e)},he.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},he.computeOrientation=function(t,e,n){return he.orientationIndex(t,e,n)},he.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new i(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),r=0;r<e.length-1;r++){var s=he.distancePointLine(t,e[r],e[r+1]);n>s&&(n=s)}return n}if(3===arguments.length){var o=arguments[0],a=arguments[1],u=arguments[2];if(a.x===u.x&&a.y===u.y)return o.distance(a);var l=(u.x-a.x)*(u.x-a.x)+(u.y-a.y)*(u.y-a.y),h=((o.x-a.x)*(u.x-a.x)+(o.y-a.y)*(u.y-a.y))/l;if(0>=h)return o.distance(a);if(h>=1)return o.distance(u);var c=((a.y-o.y)*(u.x-a.x)-(a.x-o.x)*(u.y-a.y))/l;return Math.abs(c)*Math.sqrt(l)}},he.isOnLine=function(t,e){for(var n=new ae,i=1;i<e.length;i++){var r=e[i-1],s=e[i];if(n.computeIntersection(t,r,s),n.hasIntersection())return!0}return!1},he.CLOCKWISE=-1,he.RIGHT=he.CLOCKWISE,he.COUNTERCLOCKWISE=1,he.LEFT=he.COUNTERCLOCKWISE,he.COLLINEAR=0,he.STRAIGHT=he.COLLINEAR,e(ce.prototype,{minX:function(){return Math.min(this.p0.x,this.p1.x)},orientationIndex:function(){if(arguments[0]instanceof ce){var t=arguments[0],e=he.orientationIndex(this.p0,this.p1,t.p0),n=he.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):0>=e&&0>=n?Math.max(e,n):0}if(arguments[0]instanceof g){var i=arguments[0];return he.orientationIndex(this.p0,this.p1,i)}},toGeometry:function(t){return t.createLineString([this.p0,this.p1])},isVertical:function(){return this.p0.x===this.p1.x},equals:function(t){if(!(t instanceof ce))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},intersection:function(t){var e=new ae;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},project:function(){if(arguments[0]instanceof g){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new g(t);var e=this.projectionFactor(t),n=new g;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof ce){var i=arguments[0],r=this.projectionFactor(i.p0),s=this.projectionFactor(i.p1);if(r>=1&&s>=1)return null;if(0>=r&&0>=s)return null;var o=this.project(i.p0);0>r&&(o=this.p0),r>1&&(o=this.p1);var a=this.project(i.p1);return 0>s&&(a=this.p0),s>1&&(a=this.p1),new ce(o,a)}},normalize:function(){this.p1.compareTo(this.p0)<0&&this.reverse()},angle:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},getCoordinate:function(t){return 0===t?this.p0:this.p1},distancePerpendicular:function(t){return he.distancePointLinePerpendicular(t,this.p0,this.p1)},minY:function(){return Math.min(this.p0.y,this.p1.y)},midPoint:function(){return ce.midPoint(this.p0,this.p1)},projectionFactor:function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(0>=i)return r.NaN;var s=((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i;return s},closestPoints:function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=r.MAX_VALUE,s=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var a=this.closestPoint(t.p1);s=a.distance(t.p1),i>s&&(i=s,n[0]=a,n[1]=t.p1);var u=t.closestPoint(this.p0);s=u.distance(this.p0),i>s&&(i=s,n[0]=this.p0,n[1]=u);var l=t.closestPoint(this.p1);return s=l.distance(this.p1),i>s&&(i=s,n[0]=this.p1,n[1]=l),n},closestPoint:function(t){var e=this.projectionFactor(t);if(e>0&&1>e)return this.project(t);var n=this.p0.distance(t),i=this.p1.distance(t);return i>n?this.p0:this.p1},maxX:function(){return Math.max(this.p0.x,this.p1.x)},getLength:function(){return this.p0.distance(this.p1)},compareTo:function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},reverse:function(){var t=this.p0;this.p0=this.p1,this.p1=t},equalsTopo:function(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)},lineIntersection:function(t){try{var e=F.intersection(this.p0,this.p1,t.p0,t.p1);return e}catch(t){if(!(t instanceof w))throw t}finally{}return null},maxY:function(){return Math.max(this.p0.y,this.p1.y)},pointAlongOffset:function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y,o=Math.sqrt(r*r+s*s),a=0,u=0;if(0!==e){if(0>=o)throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");a=e*r/o,u=e*s/o}var l=n-u,h=i+a,c=new g(l,h);return c},setCoordinates:function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},segmentFraction:function(t){var e=this.projectionFactor(t);return 0>e?e=0:(e>1||r.isNaN(e))&&(e=1),e},toString:function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},isHorizontal:function(){return this.p0.y===this.p1.y},distance:function(){if(arguments[0]instanceof ce){var t=arguments[0];return he.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof g){var e=arguments[0];return he.distancePointLine(e,this.p0,this.p1)}},pointAlong:function(t){var e=new g;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},hashCode:function(){var t=java.lang.Double.doubleToLongBits(this.p0.x);t^=31*java.lang.Double.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=java.lang.Double.doubleToLongBits(this.p1.x);n^=31*java.lang.Double.doubleToLongBits(this.p1.y);var i=Math.trunc(n)^Math.trunc(n>>32);return e^i},interfaces_:function(){return[s,u]},getClass:function(){return ce}}),ce.midPoint=function(t,e){return new g((t.x+e.x)/2,(t.y+e.y)/2)},ce.serialVersionUID=0x2d2172135f411c00,e(fe.prototype,{isIntersects:function(){return!this.isDisjoint()},isCovers:function(){var t=fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])||fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY]);return t&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE},isCoveredBy:function(){var t=fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])||fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY]);return t&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE},set:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.matrix[n][i]=lt.toDimensionValue(t.charAt(e))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.matrix[r][s]=o}},isContains:function(){return fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE},setAtLeast:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,lt.toDimensionValue(t.charAt(e)))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.matrix[r][s]<o&&(this.matrix[r][s]=o)}},setAtLeastIfValid:function(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)},isWithin:function(){return fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE},isTouches:function(t,e){return t>e?this.isTouches(e,t):t===lt.A&&e===lt.A||t===lt.L&&e===lt.L||t===lt.L&&e===lt.A||t===lt.P&&e===lt.A||t===lt.P&&e===lt.L?this.matrix[L.INTERIOR][L.INTERIOR]===lt.FALSE&&(fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY])):!1},isOverlaps:function(t,e){return t===lt.P&&e===lt.P||t===lt.A&&e===lt.A?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]):t===lt.L&&e===lt.L?1===this.matrix[L.INTERIOR][L.INTERIOR]&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]):!1},isEquals:function(t,e){return t!==e?!1:fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE},toString:function(){for(var t=new P(\"123456789\"),e=0;3>e;e++)for(var n=0;3>n;n++)t.setCharAt(3*e+n,lt.toDimensionSymbol(this.matrix[e][n]));return t.toString()},setAll:function(t){for(var e=0;3>e;e++)for(var n=0;3>n;n++)this.matrix[e][n]=t},get:function(t,e){return this.matrix[t][e]},transpose:function(){var t=this.matrix[1][0];return this.matrix[1][0]=this.matrix[0][1],this.matrix[0][1]=t,t=this.matrix[2][0],this.matrix[2][0]=this.matrix[0][2],this.matrix[0][2]=t,t=this.matrix[2][1],this.matrix[2][1]=this.matrix[1][2],this.matrix[1][2]=t,this},matches:function(t){if(9!==t.length)throw new i(\"Should be length 9: \"+t);for(var e=0;3>e;e++)for(var n=0;3>n;n++)if(!fe.matches(this.matrix[e][n],t.charAt(3*e+n)))return!1;return!0},add:function(t){for(var e=0;3>e;e++)for(var n=0;3>n;n++)this.setAtLeast(e,n,t.get(e,n))},isDisjoint:function(){return this.matrix[L.INTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.INTERIOR][L.BOUNDARY]===lt.FALSE&&this.matrix[L.BOUNDARY][L.INTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.BOUNDARY]===lt.FALSE},isCrosses:function(t,e){return t===lt.P&&e===lt.L||t===lt.P&&e===lt.A||t===lt.L&&e===lt.A?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR]):t===lt.L&&e===lt.P||t===lt.A&&e===lt.P||t===lt.A&&e===lt.L?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]):t===lt.L&&e===lt.L?0===this.matrix[L.INTERIOR][L.INTERIOR]:!1},interfaces_:function(){return[o]},getClass:function(){return fe}}),fe.matches=function(){if(Number.isInteger(arguments[0])&&\"string\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];return e===lt.SYM_DONTCARE?!0:e===lt.SYM_TRUE&&(t>=0||t===lt.TRUE)?!0:e===lt.SYM_FALSE&&t===lt.FALSE?!0:e===lt.SYM_P&&t===lt.P?!0:e===lt.SYM_L&&t===lt.L?!0:e===lt.SYM_A&&t===lt.A}if(\"string\"==typeof arguments[0]&&\"string\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=new fe(n);return r.matches(i)}},fe.isTrue=function(t){return t>=0||t===lt.TRUE};var lo=Object.freeze({Coordinate:g,CoordinateList:N,Envelope:C,LineSegment:ce,GeometryFactory:ie,Geometry:B,Point:Lt,LineString:St,LinearRing:bt,Polygon:Tt,GeometryCollection:ft,MultiPoint:Pt,MultiLineString:gt,MultiPolygon:Ot,Dimension:lt,IntersectionMatrix:fe});e(ge.prototype,{addPoint:function(t){this.ptCount+=1,this.ptCentSum.x+=t.x,this.ptCentSum.y+=t.y},setBasePoint:function(t){null===this.areaBasePt&&(this.areaBasePt=t)},addLineSegments:function(t){for(var e=0,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);if(0!==i){e+=i;var r=(t[n].x+t[n+1].x)/2;this.lineCentSum.x+=i*r;var s=(t[n].y+t[n+1].y)/2;this.lineCentSum.y+=i*s}}this.totalLength+=e,0===e&&t.length>0&&this.addPoint(t[0])},addHole:function(t){for(var e=he.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},getCentroid:function(){var t=new g;if(Math.abs(this.areasum2)>0)t.x=this.cg3.x/3/this.areasum2,t.y=this.cg3.y/3/this.areasum2;else if(this.totalLength>0)t.x=this.lineCentSum.x/this.totalLength,t.y=this.lineCentSum.y/this.totalLength;else{if(!(this.ptCount>0))return null;t.x=this.ptCentSum.x/this.ptCount,t.y=this.ptCentSum.y/this.ptCount}return t},addShell:function(t){t.length>0&&this.setBasePoint(t[0]);for(var e=!he.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},addTriangle:function(t,e,n,i){var r=i?1:-1;ge.centroid3(t,e,n,this.triangleCent3);var s=ge.area2(t,e,n);this.cg3.x+=r*s*this.triangleCent3.x,this.cg3.y+=r*s*this.triangleCent3.y,this.areasum2+=r*s},add:function(){if(arguments[0]instanceof Tt){var t=arguments[0];this.addShell(t.getExteriorRing().getCoordinates());for(var e=0;e<t.getNumInteriorRing();e++)this.addHole(t.getInteriorRingN(e).getCoordinates())}else if(arguments[0]instanceof B){var n=arguments[0];if(n.isEmpty())return null;if(n instanceof Lt)this.addPoint(n.getCoordinate());else if(n instanceof St)this.addLineSegments(n.getCoordinates());else if(n instanceof Tt){var i=n;this.add(i)}else if(n instanceof ft)for(var r=n,e=0;e<r.getNumGeometries();e++)this.add(r.getGeometryN(e))}},interfaces_:function(){return[]},getClass:function(){return ge}}),ge.area2=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(n.x-t.x)*(e.y-t.y)},ge.centroid3=function(t,e,n,i){return i.x=t.x+e.x+n.x,i.y=t.y+e.y+n.y,null},ge.getCentroid=function(t){var e=new ge(t);return e.getCentroid()},de.prototype=new Error,de.prototype.name=\"EmptyStackException\",pe.prototype=new y,pe.prototype.add=function(t){return this.array_.push(t),!0},pe.prototype.get=function(t){if(0>t||t>=this.size())throw new IndexOutOfBoundsException;return this.array_[t]},pe.prototype.push=function(t){return this.array_.push(t),t},pe.prototype.pop=function(t){if(0===this.array_.length)throw new de;return this.array_.pop()},pe.prototype.peek=function(){if(0===this.array_.length)throw new de;return this.array_[this.array_.length-1]},pe.prototype.empty=function(){return 0===this.array_.length},pe.prototype.isEmpty=function(){return this.empty()},pe.prototype.search=function(t){return this.array_.indexOf(t)},pe.prototype.size=function(){return this.array_.length},pe.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},e(ve.prototype,{filter:function(t){this.treeSet.contains(t)||(this.list.add(t),this.treeSet.add(t))},getCoordinates:function(){var t=new Array(this.list.size()).fill(null);return this.list.toArray(t)},interfaces_:function(){return[z]},getClass:function(){return ve}}),ve.filterCoordinates=function(t){for(var e=new ve,n=0;n<t.length;n++)e.filter(t[n]);return e.getCoordinates()},e(me.prototype,{preSort:function(t){for(var e=null,n=1;n<t.length;n++)(t[n].y<t[0].y||t[n].y===t[0].y&&t[n].x<t[0].x)&&(e=t[0],t[0]=t[n],t[n]=e);return ut.sort(t,1,t.length,new ye(t[0])),t},computeOctRing:function(t){var e=this.computeOctPts(t),n=new N;return n.add(e,!1),n.size()<3?null:(n.closeRing(),n.toCoordinateArray())},lineOrPolygon:function(t){if(t=this.cleanRing(t),3===t.length)return this.geomFactory.createLineString([t[0],t[1]]);var e=this.geomFactory.createLinearRing(t);return this.geomFactory.createPolygon(e,null)},cleanRing:function(t){f.equals(t[0],t[t.length-1]);for(var e=new I,n=null,i=0;i<=t.length-2;i++){var r=t[i],s=t[i+1];r.equals(s)||null!==n&&this.isBetween(n,r,s)||(e.add(r),n=r)}e.add(t[t.length-1]);var o=new Array(e.size()).fill(null);return e.toArray(o)},isBetween:function(t,e,n){if(0!==he.computeOrientation(t,e,n))return!1;if(t.x!==n.x){if(t.x<=e.x&&e.x<=n.x)return!0;if(n.x<=e.x&&e.x<=t.x)return!0}if(t.y!==n.y){if(t.y<=e.y&&e.y<=n.y)return!0;if(n.y<=e.y&&e.y<=t.y)return!0}return!1},reduce:function(t){var e=this.computeOctRing(t);if(null===e)return t;for(var n=new at,i=0;i<e.length;i++)n.add(e[i]);for(var i=0;i<t.length;i++)he.isPointInRing(t[i],e)||n.add(t[i]);var r=H.toCoordinateArray(n);return r.length<3?this.padArray3(r):r},getConvexHull:function(){if(0===this.inputPts.length)return this.geomFactory.createGeometryCollection(null);if(1===this.inputPts.length)return this.geomFactory.createPoint(this.inputPts[0]);if(2===this.inputPts.length)return this.geomFactory.createLineString(this.inputPts);var t=this.inputPts;this.inputPts.length>50&&(t=this.reduce(this.inputPts));var e=this.preSort(t),n=this.grahamScan(e),i=this.toCoordinateArray(n);return this.lineOrPolygon(i)},padArray3:function(t){for(var e=new Array(3).fill(null),n=0;n<e.length;n++)n<t.length?e[n]=t[n]:e[n]=t[0];return e},computeOctPts:function(t){for(var e=new Array(8).fill(null),n=0;n<e.length;n++)e[n]=t[0];for(var i=1;i<t.length;i++)t[i].x<e[0].x&&(e[0]=t[i]),t[i].x-t[i].y<e[1].x-e[1].y&&(e[1]=t[i]),t[i].y>e[2].y&&(e[2]=t[i]),t[i].x+t[i].y>e[3].x+e[3].y&&(e[3]=t[i]),t[i].x>e[4].x&&(e[4]=t[i]),t[i].x-t[i].y>e[5].x-e[5].y&&(e[5]=t[i]),t[i].y<e[6].y&&(e[6]=t[i]),t[i].x+t[i].y<e[7].x+e[7].y&&(e[7]=t[i]);return e},toCoordinateArray:function(t){for(var e=new Array(t.size()).fill(null),n=0;n<t.size();n++){var i=t.get(n);e[n]=i}return e},grahamScan:function(t){var e=null,n=new pe;e=n.push(t[0]),e=n.push(t[1]),e=n.push(t[2]);for(var i=3;i<t.length;i++){for(e=n.pop();!n.empty()&&he.computeOrientation(n.peek(),e,t[i])>0;)e=n.pop();e=n.push(e),e=n.push(t[i])}return e=n.push(t[0]),n},interfaces_:function(){return[]},getClass:function(){return me}}),me.extractCoordinates=function(t){var e=new ve;return t.apply(e),e.getCoordinates()},e(ye.prototype,{compare:function(t,e){var n=t,i=e;return ye.polarCompare(this.origin,n,i)},interfaces_:function(){return[a]},getClass:function(){return ye}}),ye.polarCompare=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=n.x-t.x,o=n.y-t.y,a=he.computeOrientation(t,e,n);\nif(a===he.COUNTERCLOCKWISE)return 1;if(a===he.CLOCKWISE)return-1;var u=i*i+r*r,l=s*s+o*o;return l>u?-1:u>l?1:0},me.RadialComparator=ye,e(xe.prototype,{transformPoint:function(t,e){return this.factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},transformPolygon:function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof bt&&!i.isEmpty()||(n=!1);for(var r=new I,s=0;s<t.getNumInteriorRing();s++){var o=this.transformLinearRing(t.getInteriorRingN(s),t);null===o||o.isEmpty()||(o instanceof bt||(n=!1),r.add(o))}if(n)return this.factory.createPolygon(i,r.toArray([]));var a=new I;return null!==i&&a.add(i),a.addAll(r),this.factory.buildGeometry(a)},createCoordinateSequence:function(t){return this.factory.getCoordinateSequenceFactory().create(t)},getInputGeometry:function(){return this.inputGeom},transformMultiLineString:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformCoordinates:function(t,e){return this.copy(t)},transformLineString:function(t,e){return this.factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},transformMultiPoint:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformMultiPolygon:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},copy:function(t){return t.copy()},transformGeometryCollection:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this.pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this.preserveGeometryCollectionType?this.factory.createGeometryCollection(ie.toGeometryArray(n)):this.factory.buildGeometry(n)},transform:function(t){if(this.inputGeom=t,this.factory=t.getFactory(),t instanceof Lt)return this.transformPoint(t,null);if(t instanceof Pt)return this.transformMultiPoint(t,null);if(t instanceof bt)return this.transformLinearRing(t,null);if(t instanceof St)return this.transformLineString(t,null);if(t instanceof gt)return this.transformMultiLineString(t,null);if(t instanceof Tt)return this.transformPolygon(t,null);if(t instanceof Ot)return this.transformMultiPolygon(t,null);if(t instanceof ft)return this.transformGeometryCollection(t,null);throw new i(\"Unknown Geometry subtype: \"+t.getClass().getName())},transformLinearRing:function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this.factory.createLinearRing(null);var i=n.size();return i>0&&4>i&&!this.preserveType?this.factory.createLineString(n):this.factory.createLinearRing(n)},interfaces_:function(){return[]},getClass:function(){return xe}}),e(Ee.prototype,{snapVertices:function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;n>i;i++){var r=t.get(i),s=this.findSnapForVertex(r,e);null!==s&&(t.set(i,new g(s)),0===i&&this._isClosed&&t.set(t.size()-1,new g(s)))}},findSnapForVertex:function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this.snapTolerance)return e[n]}return null},snapTo:function(t){var e=new N(this.srcPts);this.snapVertices(e,t),this.snapSegments(e,t);var n=e.toCoordinateArray();return n},snapSegments:function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;n>i;i++){var r=e[i],s=this.findSegmentIndexToSnap(r,t);s>=0&&t.add(s+1,new g(r),!1)}},findSegmentIndexToSnap:function(t,e){for(var n=r.MAX_VALUE,i=-1,s=0;s<e.size()-1;s++){if(this.seg.p0=e.get(s),this.seg.p1=e.get(s+1),this.seg.p0.equals2D(t)||this.seg.p1.equals2D(t)){if(this.allowSnappingToSourceVertices)continue;return-1}var o=this.seg.distance(t);o<this.snapTolerance&&n>o&&(n=o,i=s)}return i},setAllowSnappingToSourceVertices:function(t){this.allowSnappingToSourceVertices=t},interfaces_:function(){return[]},getClass:function(){return Ee}}),Ee.isClosed=function(t){return t.length<=1?!1:t[0].equals2D(t[t.length-1])},e(Ie.prototype,{snapTo:function(t,e){var n=this.extractTargetCoordinates(t),i=new Ne(e,n);return i.transform(this.srcGeom)},snapToSelf:function(t,e){var n=this.extractTargetCoordinates(this.srcGeom),i=new Ne(t,n,!0),r=i.transform(this.srcGeom),s=r;return e&&R(s,Rt)&&(s=r.buffer(0)),s},computeSnapTolerance:function(t){var e=this.computeMinimumSegmentLength(t),n=e/10;return n},extractTargetCoordinates:function(t){for(var e=new at,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},computeMinimumSegmentLength:function(t){for(var e=r.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);e>i&&(e=i)}return e},interfaces_:function(){return[]},getClass:function(){return Ie}}),Ie.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ie(t);i[0]=r.snapTo(e,n);var s=new Ie(e);return i[1]=s.snapTo(i[0],n),i},Ie.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ie.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===ee.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],s=arguments[1];return Math.min(Ie.computeOverlaySnapTolerance(r),Ie.computeOverlaySnapTolerance(s))}},Ie.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal(),n=Math.min(e.getHeight(),e.getWidth()),i=n*Ie.SNAP_PRECISION_FACTOR;return i},Ie.snapToSelf=function(t,e,n){var i=new Ie(t);return i.snapToSelf(e,n)},Ie.SNAP_PRECISION_FACTOR=1e-9,h(Ne,xe),e(Ne.prototype,{snapLine:function(t,e){var n=new Ee(t,this.snapTolerance);return n.setAllowSnappingToSourceVertices(this.isSelfSnap),n.snapTo(e)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this.snapPts);return this.factory.getCoordinateSequenceFactory().create(i)},interfaces_:function(){return[]},getClass:function(){return Ne}}),e(Ce.prototype,{getCommon:function(){return r.longBitsToDouble(this.commonBits)},add:function(t){var e=r.doubleToLongBits(t);if(this.isFirst)return this.commonBits=e,this.commonSignExp=Ce.signExpBits(this.commonBits),this.isFirst=!1,null;var n=Ce.signExpBits(e);return n!==this.commonSignExp?(this.commonBits=0,null):(this.commonMantissaBitsCount=Ce.numCommonMostSigMantissaBits(this.commonBits,e),void(this.commonBits=Ce.zeroLowerBits(this.commonBits,64-(12+this.commonMantissaBitsCount))))},toString:function(){if(1===arguments.length){var t=arguments[0],e=r.longBitsToDouble(t),n=Long.toBinaryString(t),i=\"0000000000000000000000000000000000000000000000000000000000000000\"+n,s=i.substring(i.length-64),o=s.substring(0,1)+\"  \"+s.substring(1,12)+\"(exp) \"+s.substring(12)+\" [ \"+e+\" ]\";return o}},interfaces_:function(){return[]},getClass:function(){return Ce}}),Ce.getBit=function(t,e){var n=1<<e;return 0!==(t&n)?1:0},Ce.signExpBits=function(t){return t>>52},Ce.zeroLowerBits=function(t,e){var n=(1<<e)-1,i=~n,r=t&i;return r},Ce.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if(Ce.getBit(t,i)!==Ce.getBit(e,i))return n;n++}return 52},e(Se.prototype,{addCommonBits:function(t){var e=new Le(this.commonCoord);t.apply(e),t.geometryChanged()},removeCommonBits:function(t){if(0===this.commonCoord.x&&0===this.commonCoord.y)return t;var e=new g(this.commonCoord);e.x=-e.x,e.y=-e.y;var n=new Le(e);return t.apply(n),t.geometryChanged(),t},getCommonCoordinate:function(){return this.commonCoord},add:function(t){t.apply(this.ccFilter),this.commonCoord=this.ccFilter.getCommonCoordinate()},interfaces_:function(){return[]},getClass:function(){return Se}}),e(we.prototype,{filter:function(t){this.commonBitsX.add(t.x),this.commonBitsY.add(t.y)},getCommonCoordinate:function(){return new g(this.commonBitsX.getCommon(),this.commonBitsY.getCommon())},interfaces_:function(){return[z]},getClass:function(){return we}}),e(Le.prototype,{filter:function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},isDone:function(){return!1},isGeometryChanged:function(){return!0},interfaces_:function(){return[ct]},getClass:function(){return Le}}),Se.CommonCoordinateFilter=we,Se.Translater=Le,e(Re.prototype,{next:function(){if(this.atStart)return this.atStart=!1,Re.isAtomic(this.parent)&&this.index++,this.parent;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return this.subcollectionIterator.next();this.subcollectionIterator=null}if(this.index>=this.max)throw new x;var t=this.parent.getGeometryN(this.index++);return t instanceof ft?(this.subcollectionIterator=new Re(t),this.subcollectionIterator.next()):t},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){if(this.atStart)return!0;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return!0;this.subcollectionIterator=null}return!(this.index>=this.max)},interfaces_:function(){return[p]},getClass:function(){return Re}}),Re.isAtomic=function(t){return!(t instanceof ft)},e(Te.prototype,{locateInternal:function(){if(arguments[0]instanceof g&&arguments[1]instanceof Tt){var t=arguments[0],e=arguments[1];if(e.isEmpty())return L.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===L.EXTERIOR)return L.EXTERIOR;if(i===L.BOUNDARY)return L.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var s=e.getInteriorRingN(r),o=this.locateInPolygonRing(t,s);if(o===L.INTERIOR)return L.EXTERIOR;if(o===L.BOUNDARY)return L.BOUNDARY}return L.INTERIOR}if(arguments[0]instanceof g&&arguments[1]instanceof St){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return L.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?he.isOnLine(a,l)?L.INTERIOR:L.EXTERIOR:L.BOUNDARY}if(arguments[0]instanceof g&&arguments[1]instanceof Lt){var h=arguments[0],c=arguments[1],f=c.getCoordinate();return f.equals2D(h)?L.INTERIOR:L.EXTERIOR}},locateInPolygonRing:function(t,e){return e.getEnvelopeInternal().intersects(t)?he.locatePointInRing(t,e.getCoordinates()):L.EXTERIOR},intersects:function(t,e){return this.locate(t,e)!==L.EXTERIOR},updateLocationInfo:function(t){t===L.INTERIOR&&(this.isIn=!0),t===L.BOUNDARY&&this.numBoundaries++},computeLocation:function(t,e){if(e instanceof Lt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof St)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Tt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof gt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof Ot)for(var s=e,i=0;i<s.getNumGeometries();i++){var o=s.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,o))}else if(e instanceof ft)for(var a=new Re(e);a.hasNext();){var u=a.next();u!==e&&this.computeLocation(t,u)}},locate:function(t,e){return e.isEmpty()?L.EXTERIOR:e instanceof St?this.locateInternal(t,e):e instanceof Tt?this.locateInternal(t,e):(this.isIn=!1,this.numBoundaries=0,this.computeLocation(t,e),this.boundaryRule.isInBoundary(this.numBoundaries)?L.BOUNDARY:this.numBoundaries>0||this.isIn?L.INTERIOR:L.EXTERIOR)},interfaces_:function(){return[]},getClass:function(){return Te}}),e(Pe.prototype,{interfaces_:function(){return[]},getClass:function(){return Pe}}),Pe.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new i(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),r=Math.abs(e);return t>=0?e>=0?n>=r?0:1:n>=r?7:6:e>=0?n>=r?3:2:n>=r?4:5}if(arguments[0]instanceof g&&arguments[1]instanceof g){var s=arguments[0],o=arguments[1],a=o.x-s.x,u=o.y-s.y;if(0===a&&0===u)throw new i(\"Cannot compute the octant for two identical points \"+s);return Pe.octant(a,u)}},e(be.prototype,{getCoordinates:function(){},size:function(){},getCoordinate:function(t){},isClosed:function(){},setData:function(t){},getData:function(){},interfaces_:function(){return[]},getClass:function(){return be}}),e(Oe.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:Pe.octant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},getData:function(){return this.data},toString:function(){return se.toLineString(new Gt(this.pts))},interfaces_:function(){return[be]},getClass:function(){return Oe}}),e(_e.prototype,{getBounds:function(){},interfaces_:function(){return[]},getClass:function(){return _e}}),e(Me.prototype,{getItem:function(){return this.item},getBounds:function(){return this.bounds},interfaces_:function(){return[_e,u]},getClass:function(){return Me}}),e(De.prototype,{poll:function(){if(this.isEmpty())return null;var t=this.items.get(1);return this.items.set(1,this.items.get(this._size)),this._size-=1,this.reorder(1),t},size:function(){return this._size},reorder:function(t){for(var e=null,n=this.items.get(t);2*t<=this._size&&(e=2*t,e!==this._size&&this.items.get(e+1).compareTo(this.items.get(e))<0&&e++,this.items.get(e).compareTo(n)<0);t=e)this.items.set(t,this.items.get(e));this.items.set(t,n)},clear:function(){this._size=0,this.items.clear()},isEmpty:function(){return 0===this._size},add:function(t){this.items.add(null),this._size+=1;var e=this._size;for(this.items.set(0,t);t.compareTo(this.items.get(Math.trunc(e/2)))<0;e/=2)this.items.set(e,this.items.get(Math.trunc(e/2)));this.items.set(e,t)},interfaces_:function(){return[]},getClass:function(){return De}}),e(Ae.prototype,{visitItem:function(t){},interfaces_:function(){return[]},getClass:function(){return Ae}}),e(Fe.prototype,{insert:function(t,e){},remove:function(t,e){},query:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return Fe}}),e(Ge.prototype,{getLevel:function(){return this.level},size:function(){return this.childBoundables.size()},getChildBoundables:function(){return this.childBoundables},addChildBoundable:function(t){f.isTrue(null===this.bounds),this.childBoundables.add(t)},isEmpty:function(){return this.childBoundables.isEmpty()},getBounds:function(){return null===this.bounds&&(this.bounds=this.computeBounds()),this.bounds},interfaces_:function(){return[_e,u]},getClass:function(){return Ge}}),Ge.serialVersionUID=0x5a1e55ec41369800;var ho={reverseOrder:function(){return{compare:function(t,e){return e.compareTo(t)}}},min:function(t){return ho.sort(t),t.get(0)},sort:function(t,e){var n=t.toArray();e?ut.sort(n,e):ut.sort(n);for(var i=t.iterator(),r=0,s=n.length;s>r;r++)i.next(),i.set(n[r])},singletonList:function(t){var e=new I;return e.add(t),e}};e(qe.prototype,{expandToQueue:function(t,e){var n=qe.isComposite(this.boundable1),r=qe.isComposite(this.boundable2);if(n&&r)return qe.area(this.boundable1)>qe.area(this.boundable2)?(this.expand(this.boundable1,this.boundable2,t,e),null):(this.expand(this.boundable2,this.boundable1,t,e),null);if(n)return this.expand(this.boundable1,this.boundable2,t,e),null;if(r)return this.expand(this.boundable2,this.boundable1,t,e),null;throw new i(\"neither boundable is composite\")},isLeaves:function(){return!(qe.isComposite(this.boundable1)||qe.isComposite(this.boundable2))},compareTo:function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},expand:function(t,e,n,i){for(var r=t.getChildBoundables(),s=r.iterator();s.hasNext();){var o=s.next(),a=new qe(o,e,this.itemDistance);a.getDistance()<i&&n.add(a)}},getBoundable:function(t){return 0===t?this.boundable1:this.boundable2},getDistance:function(){return this._distance},distance:function(){return this.isLeaves()?this.itemDistance.distance(this.boundable1,this.boundable2):this.boundable1.getBounds().distance(this.boundable2.getBounds())},interfaces_:function(){return[s]},getClass:function(){return qe}}),qe.area=function(t){return t.getBounds().getArea()},qe.isComposite=function(t){return t instanceof Ge},e(Be.prototype,{getNodeCapacity:function(){return this.nodeCapacity},lastNode:function(t){return t.get(t.size()-1)},size:function t(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this.root));if(1===arguments.length){for(var e=arguments[0],t=0,n=e.getChildBoundables().iterator();n.hasNext();){var i=n.next();i instanceof Ge?t+=this.size(i):i instanceof Me&&(t+=1)}return t}},removeItem:function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof Me&&r.getItem()===e&&(n=r)}return null!==n?(t.getChildBoundables().remove(n),!0):!1},itemsTree:function(){if(0===arguments.length){this.build();var t=this.itemsTree(this.root);return null===t?new I:t}if(1===arguments.length){for(var e=arguments[0],n=new I,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Ge){var s=this.itemsTree(r);null!==s&&n.add(s)}else r instanceof Me?n.add(r.getItem()):f.shouldNeverReachHere()}return n.size()<=0?null:n}},insert:function(t,e){f.isTrue(!this.built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this.itemBoundables.add(new Me(t,e))},boundablesAtLevel:function(){if(1===arguments.length){var t=arguments[0],e=new I;return this.boundablesAtLevel(t,this.root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(f.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var s=i.getChildBoundables().iterator();s.hasNext();){var o=s.next();o instanceof Ge?this.boundablesAtLevel(n,o,r):(f.isTrue(o instanceof Me),-1===n&&r.add(o))}return null}},query:function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new I;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this.root.getBounds(),t)&&this.query(t,this.root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this.root.getBounds(),n)&&this.query(n,this.root,i)}else if(3===arguments.length)if(R(arguments[2],Ae)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge)for(var r=arguments[0],s=arguments[1],o=arguments[2],a=s.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Ge?this.query(r,l,o):l instanceof Me?o.visitItem(l.getItem()):f.shouldNeverReachHere())}else if(R(arguments[2],y)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge)for(var h=arguments[0],c=arguments[1],g=arguments[2],a=c.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),h)&&(l instanceof Ge?this.query(h,l,g):l instanceof Me?g.add(l.getItem()):f.shouldNeverReachHere())}},build:function(){return this.built?null:(this.root=this.itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this.itemBoundables,-1),this.itemBoundables=null,void(this.built=!0))},getRoot:function(){return this.build(),this.root},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),this.getIntersectsOp().intersects(this.root.getBounds(),t)?this.remove(t,this.root,e):!1}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=this.removeItem(i,r);if(s)return!0;for(var o=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&u instanceof Ge&&(s=this.remove(n,u,r))){o=u;break}}return null!==o&&o.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(o),s}},createHigherLevels:function(t,e){f.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},depth:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this.root));if(1===arguments.length){for(var t=arguments[0],e=0,n=t.getChildBoundables().iterator();n.hasNext();){var i=n.next();if(i instanceof Ge){var r=this.depth(i);r>e&&(e=r)}}return e+1}},createParentBoundables:function(t,e){f.isTrue(!t.isEmpty());var n=new I;n.add(this.createNode(e));var i=new I(t);ho.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var s=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(s)}return n},isEmpty:function(){return this.built?this.root.isEmpty():this.itemBoundables.isEmpty()},interfaces_:function(){return[u]},getClass:function(){return Be}}),Be.compareDoubles=function(t,e){return t>e?1:e>t?-1:0},Be.IntersectsOp=ze,Be.serialVersionUID=-0x35ef64c82d4c5400,Be.DEFAULT_NODE_CAPACITY=10,e(Ve.prototype,{distance:function(t,e){},interfaces_:function(){return[]},getClass:function(){return Ve}}),h(ke,Be),e(ke.prototype,{createParentBoundablesFromVerticalSlices:function(t,e){f.isTrue(t.length>0);for(var n=new I,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},createNode:function(t){return new Ye(t)},size:function(){return 0===arguments.length?Be.prototype.size.call(this):Be.prototype.size.apply(this,arguments)},insert:function(){if(2!==arguments.length)return Be.prototype.insert.apply(this,arguments);var t=arguments[0],e=arguments[1];return t.isNull()?null:void Be.prototype.insert.call(this,t,e)},getIntersectsOp:function(){return ke.intersectsOp},verticalSlices:function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),s=0;e>s;s++){i[s]=new I;for(var o=0;r.hasNext()&&n>o;){var a=r.next();i[s].add(a),o++}}return i},query:function(){if(1===arguments.length){var t=arguments[0];return Be.prototype.query.call(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];Be.prototype.query.call(this,e,n)}else if(3===arguments.length)if(R(arguments[2],Ae)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge){var i=arguments[0],r=arguments[1],s=arguments[2];Be.prototype.query.call(this,i,r,s)}else if(R(arguments[2],y)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge){var o=arguments[0],a=arguments[1],u=arguments[2];Be.prototype.query.call(this,o,a,u)}},getComparator:function(){return ke.yComparator},createParentBoundablesFromVerticalSlice:function(t,e){return Be.prototype.createParentBoundables.call(this,t,e)},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return Be.prototype.remove.call(this,t,e)}return Be.prototype.remove.apply(this,arguments)},depth:function(){return 0===arguments.length?Be.prototype.depth.call(this):Be.prototype.depth.apply(this,arguments)},createParentBoundables:function(t,e){f.isTrue(!t.isEmpty());var n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new I(t);ho.sort(i,ke.xComparator);var r=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(r,e)},nearestNeighbour:function(){if(1===arguments.length){if(R(arguments[0],Ve)){var t=arguments[0],e=new qe(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof qe){var n=arguments[0];return this.nearestNeighbour(n,r.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof ke&&R(arguments[1],Ve)){var i=arguments[0],s=arguments[1],e=new qe(this.getRoot(),i.getRoot(),s);return this.nearestNeighbour(e)}if(arguments[0]instanceof qe&&\"number\"==typeof arguments[1]){var o=arguments[0],a=arguments[1],u=a,l=null,h=new De;for(h.add(o);!h.isEmpty()&&u>0;){var c=h.poll(),f=c.getDistance();if(f>=u)break;c.isLeaves()?(u=f,l=c):c.expandToQueue(h,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var g=arguments[0],d=arguments[1],p=arguments[2],v=new Me(g,d),e=new qe(this.getRoot(),v,p);return this.nearestNeighbour(e)[0]}},interfaces_:function(){return[Fe,u]},getClass:function(){return ke}}),ke.centreX=function(t){return ke.avg(t.getMinX(),t.getMaxX())},ke.avg=function(t,e){return(t+e)/2},ke.centreY=function(t){return ke.avg(t.getMinY(),t.getMaxY())},h(Ye,Ge),e(Ye.prototype,{computeBounds:function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new C(n.getBounds()):t.expandToInclude(n.getBounds())}return t},interfaces_:function(){return[]},getClass:function(){return Ye}}),ke.STRtreeNode=Ye,ke.serialVersionUID=0x39920f7d5f261e0,ke.xComparator={interfaces_:function(){return[a]},compare:function(t,e){return Be.compareDoubles(ke.centreX(t.getBounds()),ke.centreX(e.getBounds()))}},ke.yComparator={interfaces_:function(){return[a]},compare:function(t,e){return Be.compareDoubles(ke.centreY(t.getBounds()),ke.centreY(e.getBounds()))}},ke.intersectsOp={interfaces_:function(){return[IntersectsOp]},intersects:function(t,e){return t.intersects(e)}},ke.DEFAULT_NODE_CAPACITY=10,e(Ue.prototype,{interfaces_:function(){return[]},getClass:function(){return Ue}}),Ue.relativeSign=function(t,e){return e>t?-1:t>e?1:0},Ue.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=Ue.relativeSign(e.x,n.x),r=Ue.relativeSign(e.y,n.y);switch(t){case 0:return Ue.compareValue(i,r);case 1:return Ue.compareValue(r,i);case 2:return Ue.compareValue(r,-i);case 3:return Ue.compareValue(-i,r);case 4:return Ue.compareValue(-i,-r);case 5:return Ue.compareValue(-r,-i);case 6:return Ue.compareValue(-r,i);case 7:return Ue.compareValue(i,-r)}return f.shouldNeverReachHere(\"invalid octant value\"),0},Ue.compareValue=function(t,e){return 0>t?-1:t>0?1:0>e?-1:e>0?1:0},e(Xe.prototype,{getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},compareTo:function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:Ue.compare(this.segmentOctant,this.coord,e.coord)},isEndPoint:function(t){return 0!==this.segmentIndex||this._isInterior?this.segmentIndex===t:!0},isInterior:function(){return this._isInterior},interfaces_:function(){return[s]},getClass:function(){return Xe}}),e(He.prototype,{getSplitCoordinates:function(){var t=new N;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},addCollapsedNodes:function(){var t=new I;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this.edge.getCoordinate(n),n)}},print:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},findCollapsesFromExistingVertices:function(t){for(var e=0;e<this.edge.size()-2;e++){var n=this.edge.getCoordinate(e),i=(this.edge.getCoordinate(e+1),this.edge.getCoordinate(e+2));n.equals2D(i)&&t.add(new b(e+1))}},addEdgeCoordinates:function(t,e,n){var i=e.segmentIndex-t.segmentIndex+2,r=this.edge.getCoordinate(e.segmentIndex),s=e.isInterior()||!e.coord.equals2D(r);s||i--;n.add(new g(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this.edge.getCoordinate(o));s&&n.add(new g(e.coord))},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},findCollapseIndex:function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i?(n[0]=t.segmentIndex+1,!0):!1},findCollapsesFromInsertedNodes:function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next(),s=this.findCollapseIndex(i,r,e);s&&t.add(new b(e[0])),i=r}},getEdge:function(){return this.edge},addEndpoints:function(){var t=this.edge.size()-1;this.add(this.edge.getCoordinate(0),0),this.add(this.edge.getCoordinate(t),t)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),o=0;s[o++]=new g(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)s[o++]=this.edge.getCoordinate(a);return r&&(s[o]=new g(e.coord)),new Ke(s,this.edge.getData())},add:function(t,e){var n=new Xe(this.edge,t,e,this.edge.getSegmentOctant(e)),i=this.nodeMap.get(n);return null!==i?(f.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this.nodeMap.put(n,n),n)},checkSplitEdgesCorrectness:function(t){var e=this.edge.getCoordinates(),n=t.get(0),i=n.getCoordinate(0);if(!i.equals2D(e[0]))throw new l(\"bad split edge start point at \"+i);var r=t.get(t.size()-1),s=r.getCoordinates(),o=s[s.length-1];if(!o.equals2D(e[e.length-1]))throw new l(\"bad split edge end point at \"+o)},interfaces_:function(){return[]},getClass:function(){return He}}),e(We.prototype,{next:function(){return null===this.currNode?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):null===this.nextNode?null:this.nextNode.segmentIndex===this.currNode.segmentIndex?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):(this.nextNode.segmentIndex>this.currNode.segmentIndex,null)},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){return null!==this.nextNode},readNextNode:function(){this.nodeIt.hasNext()?this.nextNode=this.nodeIt.next():this.nextNode=null},interfaces_:function(){return[p]},getClass:function(){return We}}),e(je.prototype,{addIntersection:function(t,e){},interfaces_:function(){return[be]},getClass:function(){return je}}),e(Ke.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},safeOctant:function(t,e){return t.equals2D(e)?0:Pe.octant(t,e)},getData:function(){return this.data},addIntersection:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=(arguments[2],arguments[3]),s=new g(n.getIntersection(r));this.addIntersection(s,i)}},toString:function(){return se.toLineString(new Gt(this.pts))},getNodeList:function(){return this.nodeList},addIntersectionNode:function(t,e){var n=e,i=n+1;if(i<this.pts.length){var r=this.pts[i];t.equals2D(r)&&(n=i)}var s=this.nodeList.add(t,n);return s},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[je]},getClass:function(){return Ke}}),Ke.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new I;return Ke.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var s=r.next();s.getNodeList().addSplitEdges(i)}},e(Ze.prototype,{overlap:function(){if(2===arguments.length){arguments[0],arguments[1]}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this.overlapSeg1),n.getLineSegment(i,this.overlapSeg2),this.overlap(this.overlapSeg1,this.overlapSeg2)}},interfaces_:function(){return[]},getClass:function(){return Ze}}),e(Qe.prototype,{getLineSegment:function(t,e){e.p0=this.pts[t],e.p1=this.pts[t+1]},computeSelect:function(t,e,n,i){var r=this.pts[e],s=this.pts[n];if(i.tempEnv1.init(r,s),n-e===1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var o=Math.trunc((e+n)/2);\no>e&&this.computeSelect(t,e,o,i),n>o&&this.computeSelect(t,o,n,i)},getCoordinates:function(){for(var t=new Array(this.end-this.start+1).fill(null),e=0,n=this.start;n<=this.end;n++)t[e++]=this.pts[n];return t},computeOverlaps:function(t,e){this.computeOverlapsInternal(this.start,this.end,t,t.start,t.end,e)},setId:function(t){this.id=t},select:function(t,e){this.computeSelect(t,this.start,this.end,e)},getEnvelope:function(){if(null===this.env){var t=this.pts[this.start],e=this.pts[this.end];this.env=new C(t,e)}return this.env},getEndIndex:function(){return this.end},getStartIndex:function(){return this.start},getContext:function(){return this.context},getId:function(){return this.id},computeOverlapsInternal:function(t,e,n,i,r,s){var o=this.pts[t],a=this.pts[e],u=n.pts[i],l=n.pts[r];if(e-t===1&&r-i===1)return s.overlap(this,t,n,i),null;if(s.tempEnv1.init(o,a),s.tempEnv2.init(u,l),!s.tempEnv1.intersects(s.tempEnv2))return null;var h=Math.trunc((t+e)/2),c=Math.trunc((i+r)/2);h>t&&(c>i&&this.computeOverlapsInternal(t,h,n,i,c,s),r>c&&this.computeOverlapsInternal(t,h,n,c,r,s)),e>h&&(c>i&&this.computeOverlapsInternal(h,e,n,i,c,s),r>c&&this.computeOverlapsInternal(h,e,n,c,r,s))},interfaces_:function(){return[]},getClass:function(){return Qe}}),e(Je.prototype,{interfaces_:function(){return[]},getClass:function(){return Je}}),Je.isNorthern=function(t){return t===Je.NE||t===Je.NW},Je.isOpposite=function(t,e){if(t===e)return!1;var n=(t-e+4)%4;return 2===n},Je.commonHalfPlane=function(t,e){if(t===e)return t;var n=(t-e+4)%4;if(2===n)return-1;var i=e>t?t:e,r=t>e?t:e;return 0===i&&3===r?3:i},Je.isInHalfPlane=function(t,e){return e===Je.SE?t===Je.SE||t===Je.SW:t===e||t===e+1},Je.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new i(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Je.NE:Je.SE:e>=0?Je.NW:Je.SW}if(arguments[0]instanceof g&&arguments[1]instanceof g){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new i(\"Cannot compute the quadrant for two identical points \"+n);return r.x>=n.x?r.y>=n.y?Je.NE:Je.SE:r.y>=n.y?Je.NW:Je.SW}},Je.NE=0,Je.NW=1,Je.SW=2,Je.SE=3,e($e.prototype,{interfaces_:function(){return[]},getClass:function(){return $e}}),$e.getChainStartIndices=function(t){var e=0,n=new I;n.add(new b(e));do{var i=$e.findChainEnd(t,e);n.add(new b(i)),e=i}while(e<t.length-1);var r=$e.toIntArray(n);return r},$e.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Je.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){var s=Je.quadrant(t[r-1],t[r]);if(s!==i)break}r++}return r-1},$e.getChains=function(){if(1===arguments.length){var t=arguments[0];return $e.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new I,r=$e.getChainStartIndices(e),s=0;s<r.length-1;s++){var o=new Qe(e,r[s],r[s+1],n);i.add(o)}return i}},$e.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},e(tn.prototype,{computeNodes:function(t){},getNodedSubstrings:function(){},interfaces_:function(){return[]},getClass:function(){return tn}}),e(en.prototype,{setSegmentIntersector:function(t){this.segInt=t},interfaces_:function(){return[tn]},getClass:function(){return en}}),h(nn,en),e(nn.prototype,{getMonotoneChains:function(){return this.monoChains},getNodedSubstrings:function(){return Ke.getNodedSubstrings(this.nodedSegStrings)},getIndex:function(){return this.index},add:function(t){for(var e=$e.getChains(t.getCoordinates(),t),n=e.iterator();n.hasNext();){var i=n.next();i.setId(this.idCounter++),this.index.insert(i.getEnvelope(),i),this.monoChains.add(i)}},computeNodes:function(t){this.nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},intersectChains:function(){for(var t=new rn(this.segInt),e=this.monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this.index.query(n.getEnvelope()),r=i.iterator();r.hasNext();){var s=r.next();if(s.getId()>n.getId()&&(n.computeOverlaps(s,t),this.nOverlaps++),this.segInt.isDone())return null}},interfaces_:function(){return[]},getClass:function(){return nn}}),h(rn,Ze),e(rn.prototype,{overlap:function(){if(4!==arguments.length)return Ze.prototype.overlap.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=t.getContext(),s=n.getContext();this.si.processIntersections(r,e,s,i)},interfaces_:function(){return[]},getClass:function(){return rn}}),nn.SegmentOverlapAction=rn,h(sn,l),e(sn.prototype,{getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return sn}}),sn.msgWithCoord=function(t,e){return null!==e?t+\" [ \"+e+\" ]\":t},e(on.prototype,{processIntersections:function(t,e,n,i){},isDone:function(){},interfaces_:function(){return[]},getClass:function(){return on}}),e(an.prototype,{getInteriorIntersection:function(){return this.interiorIntersection},setCheckEndSegmentsOnly:function(t){this.isCheckEndSegmentsOnly=t},getIntersectionSegments:function(){return this.intSegments},count:function(){return this.intersectionCount},getIntersections:function(){return this.intersections},setFindAllIntersections:function(t){this.findAllIntersections=t},setKeepIntersections:function(t){this.keepIntersections=t},processIntersections:function(t,e,n,i){if(!this.findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this.isCheckEndSegmentsOnly){var r=this.isEndSegment(t,e)||this.isEndSegment(n,i);if(!r)return null}var s=t.getCoordinates()[e],o=t.getCoordinates()[e+1],a=n.getCoordinates()[i],u=n.getCoordinates()[i+1];this.li.computeIntersection(s,o,a,u),this.li.hasIntersection()&&this.li.isInteriorIntersection()&&(this.intSegments=new Array(4).fill(null),this.intSegments[0]=s,this.intSegments[1]=o,this.intSegments[2]=a,this.intSegments[3]=u,this.interiorIntersection=this.li.getIntersection(0),this.keepIntersections&&this.intersections.add(this.interiorIntersection),this.intersectionCount++)},isEndSegment:function(t,e){return 0===e?!0:e>=t.size()-2},hasIntersection:function(){return null!==this.interiorIntersection},isDone:function(){return this.findAllIntersections?!1:null!==this.interiorIntersection},interfaces_:function(){return[on]},getClass:function(){return an}}),an.createAllIntersectionsFinder=function(t){var e=new an(t);return e.setFindAllIntersections(!0),e},an.createAnyIntersectionFinder=function(t){return new an(t)},an.createIntersectionCounter=function(t){var e=new an(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e},e(un.prototype,{execute:function(){return null!==this.segInt?null:void this.checkInteriorIntersections()},getIntersections:function(){return this.segInt.getIntersections()},isValid:function(){return this.execute(),this._isValid},setFindAllIntersections:function(t){this.findAllIntersections=t},checkInteriorIntersections:function(){this._isValid=!0,this.segInt=new an(this.li),this.segInt.setFindAllIntersections(this.findAllIntersections);var t=new nn;return t.setSegmentIntersector(this.segInt),t.computeNodes(this.segStrings),this.segInt.hasIntersection()?(this._isValid=!1,null):void 0},checkValid:function(){if(this.execute(),!this._isValid)throw new sn(this.getErrorMessage(),this.segInt.getInteriorIntersection())},getErrorMessage:function(){if(this._isValid)return\"no intersections found\";var t=this.segInt.getIntersectionSegments();return\"found non-noded intersection between \"+se.toLineString(t[0],t[1])+\" and \"+se.toLineString(t[2],t[3])},interfaces_:function(){return[]},getClass:function(){return un}}),un.computeIntersections=function(t){var e=new un(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()},e(ln.prototype,{checkValid:function(){this.nv.checkValid()},interfaces_:function(){return[]},getClass:function(){return ln}}),ln.toSegmentStrings=function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Oe(i.getCoordinates(),i))}return e},ln.checkValid=function(t){var e=new ln(t);e.checkValid()},e(hn.prototype,{map:function(t){for(var e=new I,n=0;n<t.getNumGeometries();n++){var i=this.mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(ie.toGeometryArray(e))},interfaces_:function(){return[]},getClass:function(){return hn}}),hn.map=function(t,e){var n=new hn(e);return n.map(t)},e(cn.prototype,{interfaces_:function(){return[]},getClass:function(){return cn}}),cn.opposite=function(t){return t===cn.LEFT?cn.RIGHT:t===cn.RIGHT?cn.LEFT:t},cn.ON=0,cn.LEFT=1,cn.RIGHT=2,e(fn.prototype,{setAllLocations:function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},isNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==L.NONE)return!1;return!0},setAllLocationsIfNull:function(t){for(var e=0;e<this.location.length;e++)this.location[e]===L.NONE&&(this.location[e]=t)},isLine:function(){return 1===this.location.length},merge:function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[cn.ON]=this.location[cn.ON],e[cn.LEFT]=L.NONE,e[cn.RIGHT]=L.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===L.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},getLocations:function(){return this.location},flip:function(){if(this.location.length<=1)return null;var t=this.location[cn.LEFT];this.location[cn.LEFT]=this.location[cn.RIGHT],this.location[cn.RIGHT]=t},toString:function(){var t=new P;return this.location.length>1&&t.append(L.toLocationSymbol(this.location[cn.LEFT])),t.append(L.toLocationSymbol(this.location[cn.ON])),this.location.length>1&&t.append(L.toLocationSymbol(this.location[cn.RIGHT])),t.toString()},setLocations:function(t,e,n){this.location[cn.ON]=t,this.location[cn.LEFT]=e,this.location[cn.RIGHT]=n},get:function(t){return t<this.location.length?this.location[t]:L.NONE},isArea:function(){return this.location.length>1},isAnyNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===L.NONE)return!0;return!1},setLocation:function(){if(1===arguments.length){var t=arguments[0];this.setLocation(cn.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},init:function(t){this.location=new Array(t).fill(null),this.setAllLocations(L.NONE)},isEqualOnSide:function(t,e){return this.location[e]===t.location[e]},allPositionsEqual:function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},interfaces_:function(){return[]},getClass:function(){return fn}}),e(gn.prototype,{getGeometryCount:function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},setAllLocations:function(t,e){this.elt[t].setAllLocations(e)},isNull:function(t){return this.elt[t].isNull()},setAllLocationsIfNull:function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},isLine:function(t){return this.elt[t].isLine()},merge:function(t){for(var e=0;2>e;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new fn(t.elt[e]):this.elt[e].merge(t.elt[e])},flip:function(){this.elt[0].flip(),this.elt[1].flip()},getLocation:function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(cn.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},toString:function(){var t=new P;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},isArea:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},isAnyNull:function(t){return this.elt[t].isAnyNull()},setLocation:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(cn.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},isEqualOnSide:function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},allPositionsEqual:function(t,e){return this.elt[t].allPositionsEqual(e)},toLine:function(t){this.elt[t].isArea()&&(this.elt[t]=new fn(this.elt[t].location[0]))},interfaces_:function(){return[]},getClass:function(){return gn}}),gn.toLineLabel=function(t){for(var e=new gn(L.NONE),n=0;2>n;n++)e.setLocation(n,t.getLocation(n));return e},e(dn.prototype,{computeRing:function(){if(null!==this.ring)return null;for(var t=new Array(this.pts.size()).fill(null),e=0;e<this.pts.size();e++)t[e]=this.pts.get(e);this.ring=this.geometryFactory.createLinearRing(t),this._isHole=he.isCCW(this.ring.getCoordinates())},isIsolated:function(){return 1===this.label.getGeometryCount()},computePoints:function(t){this.startDe=t;var e=t,n=!0;do{if(null===e)throw new sn(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new sn(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this.edges.add(e);var i=e.getLabel();f.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this.startDe)},getLinearRing:function(){return this.ring},getCoordinate:function(t){return this.pts.get(t)},computeMaxNodeDegree:function(){this.maxNodeDegree=0;var t=this.startDe;do{var e=t.getNode(),n=e.getEdges().getOutgoingDegree(this);n>this.maxNodeDegree&&(this.maxNodeDegree=n),t=this.getNext(t)}while(t!==this.startDe);this.maxNodeDegree*=2},addPoints:function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var s=r;s<i.length;s++)this.pts.add(i[s])}else{var r=i.length-2;n&&(r=i.length-1);for(var s=r;s>=0;s--)this.pts.add(i[s])}},isHole:function(){return this._isHole},setInResult:function(){var t=this.startDe;do t.getEdge().setInResult(!0),t=t.getNext();while(t!==this.startDe)},containsPoint:function(t){var e=this.getLinearRing(),n=e.getEnvelopeInternal();if(!n.contains(t))return!1;if(!he.isPointInRing(t,e.getCoordinates()))return!1;for(var i=this.holes.iterator();i.hasNext();){var r=i.next();if(r.containsPoint(t))return!1}return!0},addHole:function(t){this.holes.add(t)},isShell:function(){return null===this.shell},getLabel:function(){return this.label},getEdges:function(){return this.edges},getMaxNodeDegree:function(){return this.maxNodeDegree<0&&this.computeMaxNodeDegree(),this.maxNodeDegree},getShell:function(){return this.shell},mergeLabel:function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,cn.RIGHT);if(i===L.NONE)return null;if(this.label.getLocation(n)===L.NONE)return this.label.setLocation(n,i),null}},setShell:function(t){this.shell=t,null!==t&&t.addHole(this)},toPolygon:function(t){for(var e=new Array(this.holes.size()).fill(null),n=0;n<this.holes.size();n++)e[n]=this.holes.get(n).getLinearRing();var i=t.createPolygon(this.getLinearRing(),e);return i},interfaces_:function(){return[]},getClass:function(){return dn}}),h(pn,dn),e(pn.prototype,{setEdgeRing:function(t,e){t.setMinEdgeRing(e)},getNext:function(t){return t.getNextMin()},interfaces_:function(){return[]},getClass:function(){return pn}}),h(vn,dn),e(vn.prototype,{buildMinimalRings:function(){var t=new I,e=this.startDe;do{if(null===e.getMinEdgeRing()){var n=new pn(e,this.geometryFactory);t.add(n)}e=e.getNext()}while(e!==this.startDe);return t},setEdgeRing:function(t,e){t.setEdgeRing(e)},linkDirectedEdgesForMinimalEdgeRings:function(){var t=this.startDe;do{var e=t.getNode();e.getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this.startDe)},getNext:function(t){return t.getNext()},interfaces_:function(){return[]},getClass:function(){return vn}}),e(mn.prototype,{setVisited:function(t){this._isVisited=t},setInResult:function(t){this._isInResult=t},isCovered:function(){return this._isCovered},isCoveredSet:function(){return this._isCoveredSet},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setCovered:function(t){this._isCovered=t,this._isCoveredSet=!0},updateIM:function(t){f.isTrue(this.label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},isInResult:function(){return this._isInResult},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return mn}}),h(yn,mn),e(yn.prototype,{isIncidentEdgeInResult:function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){var e=t.next();if(e.getEdge().isInResult())return!0}return!1},isIsolated:function(){return 1===this.label.getGeometryCount()},getCoordinate:function(){return this.coord},print:function(t){t.println(\"node \"+this.coord+\" lbl: \"+this.label)},computeIM:function(t){},computeMergedLocation:function(t,e){var n=L.NONE;if(n=this.label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==L.BOUNDARY&&(n=i)}return n},setLabel:function(){if(2!==arguments.length)return mn.prototype.setLabel.apply(this,arguments);var t=arguments[0],e=arguments[1];null===this.label?this.label=new gn(t,e):this.label.setLocation(t,e)},getEdges:function(){return this.edges},mergeLabel:function(){if(arguments[0]instanceof yn){var t=arguments[0];this.mergeLabel(t.label)}else if(arguments[0]instanceof gn)for(var e=arguments[0],n=0;2>n;n++){var i=this.computeMergedLocation(e,n),r=this.label.getLocation(n);r===L.NONE&&this.label.setLocation(n,i)}},add:function(t){this.edges.insert(t),t.setNode(this)},setLabelBoundary:function(t){if(null===this.label)return null;var e=L.NONE;null!==this.label&&(e=this.label.getLocation(t));var n=null;switch(e){case L.BOUNDARY:n=L.INTERIOR;break;case L.INTERIOR:n=L.BOUNDARY;break;default:n=L.BOUNDARY}this.label.setLocation(t,n)},interfaces_:function(){return[]},getClass:function(){return yn}}),e(xn.prototype,{find:function(t){return this.nodeMap.get(t)},addNode:function(){if(arguments[0]instanceof g){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof yn){var n=arguments[0],e=this.nodeMap.get(n.getCoordinate());return null===e?(this.nodeMap.put(n.getCoordinate(),n),n):(e.mergeLabel(n),e)}},print:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},values:function(){return this.nodeMap.values()},getBoundaryNodes:function(t){for(var e=new I,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===L.BOUNDARY&&e.add(i)}return e},add:function(t){var e=t.getCoordinate(),n=this.addNode(e);n.add(t)},interfaces_:function(){return[]},getClass:function(){return xn}}),e(En.prototype,{compareDirection:function(t){return this.dx===t.dx&&this.dy===t.dy?0:this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:he.computeOrientation(t.p0,t.p1,this.p1)},getDy:function(){return this.dy},getCoordinate:function(){return this.p0},setNode:function(t){this.node=t},print:function(t){var e=Math.atan2(this.dy,this.dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+e+\"   \"+this.label)},compareTo:function(t){var e=t;return this.compareDirection(e)},getDirectedCoordinate:function(){return this.p1},getDx:function(){return this.dx},getLabel:function(){return this.label},getEdge:function(){return this.edge},getQuadrant:function(){return this.quadrant},getNode:function(){return this.node},toString:function(){var t=Math.atan2(this.dy,this.dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\"),i=e.substring(n+1);return\"  \"+i+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+t+\"   \"+this.label},computeLabel:function(t){},init:function(t,e){this.p0=t,this.p1=e,this.dx=e.x-t.x,this.dy=e.y-t.y,this.quadrant=Je.quadrant(this.dx,this.dy),f.isTrue(!(0===this.dx&&0===this.dy),\"EdgeEnd with identical endpoints found\")},interfaces_:function(){return[s]},getClass:function(){return En}}),h(In,En),e(In.prototype,{getNextMin:function(){return this.nextMin},getDepth:function(t){return this.depth[t]},setVisited:function(t){this._isVisited=t},computeDirectedLabel:function(){this.label=new gn(this.edge.getLabel()),this._isForward||this.label.flip()},getNext:function(){return this.next},setDepth:function(t,e){if(-999!==this.depth[t]&&this.depth[t]!==e)throw new sn(\"assigned depths do not match\",this.getCoordinate());this.depth[t]=e},isInteriorAreaEdge:function t(){for(var t=!0,e=0;2>e;e++)this.label.isArea(e)&&this.label.getLocation(e,cn.LEFT)===L.INTERIOR&&this.label.getLocation(e,cn.RIGHT)===L.INTERIOR||(t=!1);return t},setNextMin:function(t){this.nextMin=t},print:function(t){En.prototype.print.call(this,t),t.print(\" \"+this.depth[cn.LEFT]+\"/\"+this.depth[cn.RIGHT]),t.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&t.print(\" inResult\")},setMinEdgeRing:function(t){this.minEdgeRing=t},isLineEdge:function(){var t=this.label.isLine(0)||this.label.isLine(1),e=!this.label.isArea(0)||this.label.allPositionsEqual(0,L.EXTERIOR),n=!this.label.isArea(1)||this.label.allPositionsEqual(1,L.EXTERIOR);return t&&e&&n},setEdgeRing:function(t){this.edgeRing=t},getMinEdgeRing:function(){return this.minEdgeRing},getDepthDelta:function(){var t=this.edge.getDepthDelta();return this._isForward||(t=-t),t},setInResult:function(t){this._isInResult=t},getSym:function(){return this.sym},isForward:function(){return this._isForward},getEdge:function(){return this.edge},printEdge:function(t){this.print(t),t.print(\" \"),this._isForward?this.edge.print(t):this.edge.printReverse(t)},setSym:function(t){this.sym=t},setVisitedEdge:function(t){this.setVisited(t),this.sym.setVisited(t)},setEdgeDepths:function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===cn.LEFT&&(i=-1);var r=cn.opposite(t),s=n*i,o=e+s;this.setDepth(t,e),this.setDepth(r,o)},getEdgeRing:function(){return this.edgeRing},isInResult:function(){return this._isInResult},setNext:function(t){this.next=t},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return In}}),In.depthFactor=function(t,e){return t===L.EXTERIOR&&e===L.INTERIOR?1:t===L.INTERIOR&&e===L.EXTERIOR?-1:0},e(Nn.prototype,{createNode:function(t){return new yn(t,null)},interfaces_:function(){return[]},getClass:function(){return Nn}}),e(Cn.prototype,{printEdges:function(t){t.println(\"Edges:\");for(var e=0;e<this.edges.size();e++){t.println(\"edge \"+e+\":\");var n=this.edges.get(e);n.print(t),n.eiList.print(t)}},find:function(t){return this.nodes.find(t)},addNode:function(){if(arguments[0]instanceof yn){var t=arguments[0];return this.nodes.addNode(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.nodes.addNode(e)}},getNodeIterator:function(){return this.nodes.iterator()},linkResultDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkResultDirectedEdges()}},debugPrintln:function(t){A.out.println(t)},isBoundaryNode:function(t,e){var n=this.nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===L.BOUNDARY},linkAllDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkAllDirectedEdges()}},matchInSameDirection:function(t,e,n,i){return t.equals(n)?he.computeOrientation(t,e,i)===he.COLLINEAR&&Je.quadrant(t,e)===Je.quadrant(n,i):!1},getEdgeEnds:function(){return this.edgeEndList},debugPrint:function(t){A.out.print(t)},getEdgeIterator:function(){return this.edges.iterator()},findEdgeInSameDirection:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},insertEdge:function(t){this.edges.add(t)},findEdgeEnd:function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},addEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.edges.add(n);var i=new In(n,!0),r=new In(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},add:function(t){this.nodes.add(t),this.edgeEndList.add(t)},getNodes:function(){return this.nodes.values()},findEdge:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},interfaces_:function(){return[]},getClass:function(){return Cn}}),Cn.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.getEdges().linkResultDirectedEdges()}},e(Sn.prototype,{sortShellsAndHoles:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},computePolygons:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next(),r=i.toPolygon(this.geometryFactory);e.add(r)}return e},placeFreeHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new sn(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},buildMinimalEdgeRings:function(t,e,n){for(var i=new I,r=t.iterator();r.hasNext();){var s=r.next();if(s.getMaxNodeDegree()>2){s.linkDirectedEdgesForMinimalEdgeRings();var o=s.buildMinimalRings(),a=this.findShell(o);null!==a?(this.placePolygonHoles(a,o),e.add(a)):n.addAll(o)}else i.add(s)}return i},containsPoint:function(t){for(var e=this.shellList.iterator();e.hasNext();){var n=e.next();if(n.containsPoint(t))return!0}return!1},buildMaximalEdgeRings:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new vn(i,this.geometryFactory);e.add(r),r.setInResult()}}return e},placePolygonHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},getPolygons:function(){var t=this.computePolygons(this.shellList);return t},findEdgeRingContaining:function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),s=null,o=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),h=l.getEnvelopeInternal();null!==s&&(o=s.getLinearRing().getEnvelopeInternal());var c=!1;h.contains(i)&&he.isPointInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||o.contains(h))&&(s=u)}return s},findShell:function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return f.isTrue(1>=e,\"found two shells in MinimalEdgeRing list\"),n},add:function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Cn.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new I,s=this.buildMinimalEdgeRings(i,this.shellList,r);this.sortShellsAndHoles(s,this.shellList,r),this.placeFreeHoles(this.shellList,r)}},interfaces_:function(){return[]},getClass:function(){return Sn}}),e(wn.prototype,{collectLines:function(t){for(var e=this.op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this.lineEdgesList),this.collectBoundaryTouchEdge(n,t,this.lineEdgesList)}},labelIsolatedLine:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.op.getArgGeometry(e));t.getLabel().setLocation(e,n)},build:function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this.resultLineList},collectLineEdge:function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!ii.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},findCoveredLineEdges:function(){for(var t=this.op.getGraph().getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().findCoveredLineEdges()}for(var n=this.op.getGraph().getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getEdge();if(i.isLineEdge()&&!r.isCoveredSet()){var s=this.op.isCoveredByA(i.getCoordinate());r.setCovered(s)}}},labelIsolatedLines:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},buildLines:function(t){for(var e=this.lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=(n.getLabel(),this.geometryFactory.createLineString(n.getCoordinates()));this.resultLineList.add(i),n.setInResult(!0)}},collectBoundaryTouchEdge:function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(f.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(ii.isResultOfOp(i,e)&&e===ii.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},interfaces_:function(){return[]},getClass:function(){return wn}}),e(Ln.prototype,{filterCoveredNodeToPoint:function(t){var e=t.getCoordinate();if(!this.op.isCoveredByLA(e)){var n=this.geometryFactory.createPoint(e);this.resultPointList.add(n)}},extractNonCoveredResultNodes:function(t){for(var e=this.op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!(n.isInResult()||n.isIncidentEdgeInResult()||0!==n.getEdges().getDegree()&&t!==ii.INTERSECTION)){var i=n.getLabel();ii.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},build:function(t){return this.extractNonCoveredResultNodes(t),this.resultPointList},interfaces_:function(){return[]},getClass:function(){return Ln}}),e(Rn.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return Rn}}),e(Tn.prototype,{locate:function(t){return Tn.locate(t,this.geom)},interfaces_:function(){return[Rn]},getClass:function(){return Tn}}),Tn.isPointInRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?he.isPointInRing(t,e.getCoordinates()):!1},Tn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!Tn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(Tn.isPointInRing(t,r))return!1}return!0},Tn.containsPoint=function(t,e){if(e instanceof Tt)return Tn.containsPointInPolygon(t,e);if(e instanceof ft)for(var n=new Re(e);n.hasNext();){var i=n.next();if(i!==e&&Tn.containsPoint(t,i))return!0}return!1},Tn.locate=function(t,e){return e.isEmpty()?L.EXTERIOR:Tn.containsPoint(t,e)?L.INTERIOR:L.EXTERIOR},e(Pn.prototype,{getNextCW:function(t){this.getEdges();var e=this.edgeList.indexOf(t),n=e-1;return 0===e&&(n=this.edgeList.size()-1),this.edgeList.get(n)},propagateSideLabels:function(t){for(var e=L.NONE,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea(t)&&r.getLocation(t,cn.LEFT)!==L.NONE&&(e=r.getLocation(t,cn.LEFT))}if(e===L.NONE)return null;for(var s=e,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();if(r.getLocation(t,cn.ON)===L.NONE&&r.setLocation(t,cn.ON,s),r.isArea(t)){var o=r.getLocation(t,cn.LEFT),a=r.getLocation(t,cn.RIGHT);if(a!==L.NONE){if(a!==s)throw new sn(\"side location conflict\",i.getCoordinate());o===L.NONE&&f.shouldNeverReachHere(\"found single null side (at \"+i.getCoordinate()+\")\"),s=o}else f.isTrue(r.getLocation(t,cn.LEFT)===L.NONE,\"found single null side\"),r.setLocation(t,cn.RIGHT,s),r.setLocation(t,cn.LEFT,s)}}},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},print:function(t){A.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},isAreaLabelsConsistent:function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},checkAreaLabelsConsistent:function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel(),r=i.getLocation(t,cn.LEFT);f.isTrue(r!==L.NONE,\"Found unlabelled area edge\");for(var s=r,o=this.iterator();o.hasNext();){var a=o.next(),u=a.getLabel();\nf.isTrue(u.isArea(t),\"Found non-area edge\");var l=u.getLocation(t,cn.LEFT),h=u.getLocation(t,cn.RIGHT);if(l===h)return!1;if(h!==s)return!1;s=l}return!0},findIndex:function(t){this.iterator();for(var e=0;e<this.edgeList.size();e++){var n=this.edgeList.get(e);if(n===t)return e}return-1},iterator:function(){return this.getEdges().iterator()},getEdges:function(){return null===this.edgeList&&(this.edgeList=new I(this.edgeMap.values())),this.edgeList},getLocation:function(t,e,n){return this.ptInAreaLocation[t]===L.NONE&&(this.ptInAreaLocation[t]=Tn.locate(e,n[t].getGeometry())),this.ptInAreaLocation[t]},toString:function(){var t=new P;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},computeEdgeEndLabels:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.computeLabel(t)}},computeLabelling:function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),s=0;2>s;s++)r.isLine(s)&&r.getLocation(s)===L.BOUNDARY&&(e[s]=!0);for(var n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),s=0;2>s;s++)if(r.isAnyNull(s)){var o=L.NONE;if(e[s])o=L.EXTERIOR;else{var a=i.getCoordinate();o=this.getLocation(s,a,t)}r.setAllLocationsIfNull(s,o)}},getDegree:function(){return this.edgeMap.size()},insertEdgeEnd:function(t,e){this.edgeMap.put(t,e),this.edgeList=null},interfaces_:function(){return[]},getClass:function(){return Pn}}),h(bn,Pn),e(bn.prototype,{linkResultDirectedEdges:function(){this.getResultAreaEdges();for(var t=null,e=null,n=this.SCANNING_FOR_INCOMING,i=0;i<this.resultAreaEdgeList.size();i++){var r=this.resultAreaEdgeList.get(i),s=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this.SCANNING_FOR_INCOMING:if(!s.isInResult())continue;e=s,n=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this.SCANNING_FOR_INCOMING}}if(n===this.LINKING_TO_OUTGOING){if(null===t)throw new sn(\"no outgoing dirEdge found\",this.getCoordinate());f.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},insert:function(t){var e=t;this.insertEdgeEnd(e,e)},getRightmostEdge:function(){var t=this.getEdges(),e=t.size();if(1>e)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),s=i.getQuadrant();if(Je.isNorthern(r)&&Je.isNorthern(s))return n;if(!Je.isNorthern(r)&&!Je.isNorthern(s))return i;return 0!==n.getDy()?n:0!==i.getDy()?i:(f.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null)},print:function(t){A.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},getResultAreaEdges:function(){if(null!==this.resultAreaEdgeList)return this.resultAreaEdgeList;this.resultAreaEdgeList=new I;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this.resultAreaEdgeList.add(e)}return this.resultAreaEdgeList},updateLabelling:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.setAllLocationsIfNull(0,t.getLocation(0)),i.setAllLocationsIfNull(1,t.getLocation(1))}},linkAllDirectedEdges:function(){this.getEdges();for(var t=null,e=null,n=this.edgeList.size()-1;n>=0;n--){var i=this.edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},computeDepths:function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=(t.getLabel(),t.getDepth(cn.LEFT)),i=t.getDepth(cn.RIGHT),r=this.computeDepths(e+1,this.edgeList.size(),n),s=this.computeDepths(0,e,r);if(s!==i)throw new sn(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],a=arguments[1],u=arguments[2],l=u,h=o;a>h;h++){var c=this.edgeList.get(h);c.getLabel();c.setEdgeDepths(cn.RIGHT,l),l=c.getDepth(cn.LEFT)}return l}},mergeSymLabels:function(){for(var t=this.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();n.merge(e.getSym().getLabel())}},linkMinimalDirectedEdges:function(t){for(var e=null,n=null,i=this.SCANNING_FOR_INCOMING,r=this.resultAreaEdgeList.size()-1;r>=0;r--){var s=this.resultAreaEdgeList.get(r),o=s.getSym();switch(null===e&&s.getEdgeRing()===t&&(e=s),i){case this.SCANNING_FOR_INCOMING:if(o.getEdgeRing()!==t)continue;n=o,i=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(s.getEdgeRing()!==t)continue;n.setNextMin(s),i=this.SCANNING_FOR_INCOMING}}i===this.LINKING_TO_OUTGOING&&(f.isTrue(null!==e,\"found null for first outgoing dirEdge\"),f.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},getOutgoingDegree:function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){var n=e.next();n.isInResult()&&t++}return t}if(1===arguments.length){for(var i=arguments[0],t=0,e=this.iterator();e.hasNext();){var n=e.next();n.getEdgeRing()===i&&t++}return t}},getLabel:function(){return this.label},findCoveredLineEdges:function(){for(var t=L.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=L.INTERIOR;break}if(i.isInResult()){t=L.EXTERIOR;break}}}if(t===L.NONE)return null;for(var r=t,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();n.isLineEdge()?n.getEdge().setCovered(r===L.INTERIOR):(n.isInResult()&&(r=L.EXTERIOR),i.isInResult()&&(r=L.INTERIOR))}},computeLabelling:function(t){Pn.prototype.computeLabelling.call(this,t),this.label=new gn(L.NONE);for(var e=this.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge(),r=i.getLabel(),s=0;2>s;s++){var o=r.getLocation(s);o!==L.INTERIOR&&o!==L.BOUNDARY||this.label.setLocation(s,L.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return bn}}),h(On,Nn),e(On.prototype,{createNode:function(t){return new yn(t,new bn)},interfaces_:function(){return[]},getClass:function(){return On}}),e(_n.prototype,{computeIntersections:function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},interfaces_:function(){return[]},getClass:function(){return _n}}),e(Mn.prototype,{isDelete:function(){return this.eventType===Mn.DELETE},setDeleteEventIndex:function(t){this.deleteEventIndex=t},getObject:function(){return this.obj},compareTo:function(t){var e=t;return this.xValue<e.xValue?-1:this.xValue>e.xValue?1:this.eventType<e.eventType?-1:this.eventType>e.eventType?1:0},getInsertEvent:function(){return this.insertEvent},isInsert:function(){return this.eventType===Mn.INSERT},isSameLabel:function(t){return null===this.label?!1:this.label===t.label},getDeleteEventIndex:function(){return this.deleteEventIndex},interfaces_:function(){return[s]},getClass:function(){return Mn}}),Mn.INSERT=1,Mn.DELETE=2,e(Dn.prototype,{interfaces_:function(){return[]},getClass:function(){return Dn}}),e(An.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(An.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},setIsDoneIfProperInt:function(t){this.isDoneWhenProperInt=t},hasProperInteriorIntersection:function(){return this.hasProperInterior},isBoundaryPointInternal:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinate();if(t.isIntersection(r))return!0}return!1},hasProperIntersection:function(){return this.hasProper},hasIntersection:function(){return this._hasIntersection},isDone:function(){return this._isDone},isBoundaryPoint:function(t,e){return null===e?!1:this.isBoundaryPointInternal(t,e[0])?!0:!!this.isBoundaryPointInternal(t,e[1])},setBoundaryNodes:function(t,e){this.bdyNodes=new Array(2).fill(null),this.bdyNodes[0]=t,this.bdyNodes[1]=e},addIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&(this.recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this.numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this.includeProper&&this.li.isProper()||(t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)),this.li.isProper()&&(this.properIntersectionPoint=this.li.getIntersection(0).copy(),this.hasProper=!0,this.isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this.li,this.bdyNodes)||(this.hasProperInterior=!0))))},interfaces_:function(){return[]},getClass:function(){return An}}),An.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},h(Fn,Dn),e(Fn.prototype,{prepareEvents:function(){ho.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},computeIntersections:function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof An&&R(arguments[0],y)&&R(arguments[1],y)){var i=arguments[0],r=arguments[1],s=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(s)}else if(\"boolean\"==typeof arguments[2]&&R(arguments[0],y)&&arguments[1]instanceof An){var o=arguments[0],a=arguments[1],u=arguments[2];u?this.addEdges(o,null):this.addEdges(o),this.computeIntersections(a)}},addEdge:function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var s=new _n(n,r),o=new Mn(e,n.getMinX(r),s);this.events.add(o),this.events.add(new Mn(n.getMaxX(r),o))}},processOverlaps:function(t,e,n,i){for(var r=n.getObject(),s=t;e>s;s++){var o=this.events.get(s);if(o.isInsert()){var a=o.getObject();n.isSameLabel(o)||(r.computeIntersections(a,i),this.nOverlaps++)}}},addEdges:function(){if(1===arguments.length)for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.addEdge(n,n)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],e=i.iterator();e.hasNext();){var n=e.next();this.addEdge(n,r)}},interfaces_:function(){return[]},getClass:function(){return Fn}}),e(Gn.prototype,{getMin:function(){return this.min},intersects:function(t,e){return!(this.min>e||this.max<t)},getMax:function(){return this.max},toString:function(){return se.toLineString(new g(this.min,0),new g(this.max,0))},interfaces_:function(){return[]},getClass:function(){return Gn}}),e(qn.prototype,{compare:function(t,e){var n=t,i=e,r=(n.min+n.max)/2,s=(i.min+i.max)/2;return s>r?-1:r>s?1:0},interfaces_:function(){return[a]},getClass:function(){return qn}}),Gn.NodeComparator=qn,h(Bn,Gn),e(Bn.prototype,{query:function(t,e,n){return this.intersects(t,e)?void n.visitItem(this.item):null},interfaces_:function(){return[]},getClass:function(){return Bn}}),h(zn,Gn),e(zn.prototype,{buildExtent:function(t,e){this.min=Math.min(t.min,e.min),this.max=Math.max(t.max,e.max)},query:function(t,e,n){return this.intersects(t,e)?(null!==this.node1&&this.node1.query(t,e,n),void(null!==this.node2&&this.node2.query(t,e,n))):null},interfaces_:function(){return[]},getClass:function(){return zn}}),e(Vn.prototype,{buildTree:function(){ho.sort(this.leaves,new IntervalRTreeNode.NodeComparator);for(var t=this.leaves,e=null,n=new I;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},insert:function(t,e,n){if(null!==this.root)throw new IllegalStateException(\"Index cannot be added to once it has been queried\");this.leaves.add(new Bn(t,e,n))},query:function(t,e,n){this.init(),this.root.query(t,e,n)},buildRoot:function(){return null!==this.root?null:void(this.root=this.buildTree())},printNode:function(t){A.out.println(se.toLineString(new g(t.min,this.level),new g(t.max,this.level)))},init:function(){return null!==this.root?null:void this.buildRoot()},buildLevel:function(t,e){this.level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n),r=n+1<t.size()?t.get(n):null;if(null===r)e.add(i);else{var s=new zn(t.get(n),t.get(n+1));e.add(s)}}},interfaces_:function(){return[]},getClass:function(){return Vn}}),e(kn.prototype,{filter:function(t){if(this.isForcedToLineString&&t instanceof bt){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this.lines.add(e),null}t instanceof St&&this.lines.add(t)},setForceToLineString:function(t){this.isForcedToLineString=t},interfaces_:function(){return[q]},getClass:function(){return kn}}),kn.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(kn.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(kn.getLines(e,n))}},kn.getLines=function(){if(1===arguments.length){var t=arguments[0];return kn.getLines(t,!1)}if(2===arguments.length){if(R(arguments[0],v)&&R(arguments[1],v)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();kn.getLines(r,n)}return n}if(arguments[0]instanceof B&&\"boolean\"==typeof arguments[1]){var s=arguments[0],o=arguments[1],a=new I;return s.apply(new kn(a,o)),a}if(arguments[0]instanceof B&&R(arguments[1],v)){var u=arguments[0],l=arguments[1];return u instanceof St?l.add(u):u.apply(new kn(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&R(arguments[0],v)&&R(arguments[1],v)){for(var h=arguments[0],c=arguments[1],f=arguments[2],i=h.iterator();i.hasNext();){var r=i.next();kn.getLines(r,c,f)}return c}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof B&&R(arguments[1],v)){var g=arguments[0],d=arguments[1],p=arguments[2];return g.apply(new kn(d,p)),d}}},e(Yn.prototype,{visitItem:function(t){this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[Ae]},getClass:function(){return Yn}}),e(Un.prototype,{locate:function(t){var e=new le(t),n=new Xn(e);return this.index.query(t.y,t.y,n),e.getLocation()},interfaces_:function(){return[Rn]},getClass:function(){return Un}}),e(Xn.prototype,{visitItem:function(t){var e=t;this.counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},interfaces_:function(){return[Ae]},getClass:function(){return Xn}}),e(Hn.prototype,{init:function(t){for(var e=kn.getLines(t),n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinates();this.addLine(r)}},addLine:function(t){for(var e=1;e<t.length;e++){var n=new ce(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this.index.insert(i,r,n)}},query:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Yn;return this.index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.index.query(i,r,s)}},interfaces_:function(){return[]},getClass:function(){return Hn}}),Un.SegmentVisitor=Xn,Un.IntervalIndexedGeometry=Hn,e(Wn.prototype,{getSegmentIndex:function(){return this.segmentIndex},getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},compareTo:function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},isEndPoint:function(t){return 0===this.segmentIndex&&0===this.dist?!0:this.segmentIndex===t},toString:function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},getDistance:function(){return this.dist},compare:function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},interfaces_:function(){return[s]},getClass:function(){return Wn}}),e(jn.prototype,{print:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},addEndpoints:function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),o=0;s[o++]=new g(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)s[o++]=this.edge.pts[a];return r&&(s[o]=e.coord),new Jn(s,new gn(this.edge.label))},add:function(t,e,n){var i=new Wn(t,e,n),r=this.nodeMap.get(i);return null!==r?r:(this.nodeMap.put(i,i),i)},isIntersection:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();if(n.coord.equals(t))return!0}return!1},interfaces_:function(){return[]},getClass:function(){return jn}}),e(Kn.prototype,{getChainStartIndices:function(t){var e=0,n=new I;n.add(new b(e));do{var i=this.findChainEnd(t,e);n.add(new b(i)),e=i}while(e<t.length-1);var r=Kn.toIntArray(n);return r},findChainEnd:function(t,e){for(var n=Je.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){var r=Je.quadrant(t[i-1],t[i]);if(r!==n)break;i++}return i-1},interfaces_:function(){return[]},getClass:function(){return Kn}}),Kn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},e(Zn.prototype,{getCoordinates:function(){return this.pts},getMaxX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},getMinX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return n>e?e:n},computeIntersectsForChain:function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],h=this.pts[r],c=this.pts[s],f=o.pts[a],g=o.pts[u];if(s-r===1&&u-a===1)return l.addIntersections(this.e,r,o.e,a),null;if(this.env1.init(h,c),this.env2.init(f,g),!this.env1.intersects(this.env2))return null;var d=Math.trunc((r+s)/2),p=Math.trunc((a+u)/2);d>r&&(p>a&&this.computeIntersectsForChain(r,d,o,a,p,l),u>p&&this.computeIntersectsForChain(r,d,o,p,u,l)),s>d&&(p>a&&this.computeIntersectsForChain(d,s,o,a,p,l),u>p&&this.computeIntersectsForChain(d,s,o,p,u,l))}},getStartIndexes:function(){return this.startIndex},computeIntersects:function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},interfaces_:function(){return[]},getClass:function(){return Zn}}),e(Qn.prototype,{getDepth:function(t,e){return this.depth[t][e]},setDepth:function(t,e,n){this.depth[t][e]=n},isNull:function(){if(0===arguments.length){for(var t=0;2>t;t++)for(var e=0;3>e;e++)if(this.depth[t][e]!==Qn.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this.depth[n][1]===Qn.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this.depth[i][r]===Qn.NULL_VALUE}},normalize:function(){for(var t=0;2>t;t++)if(!this.isNull(t)){var e=this.depth[t][1];this.depth[t][2]<e&&(e=this.depth[t][2]),0>e&&(e=0);for(var n=1;3>n;n++){var i=0;this.depth[t][n]>e&&(i=1),this.depth[t][n]=i}}},getDelta:function(t){return this.depth[t][cn.RIGHT]-this.depth[t][cn.LEFT]},getLocation:function(t,e){return this.depth[t][e]<=0?L.EXTERIOR:L.INTERIOR},toString:function(){return\"A: \"+this.depth[0][1]+\",\"+this.depth[0][2]+\" B: \"+this.depth[1][1]+\",\"+this.depth[1][2]},add:function(){if(1===arguments.length)for(var t=arguments[0],e=0;2>e;e++)for(var n=1;3>n;n++){var i=t.getLocation(e,n);i!==L.EXTERIOR&&i!==L.INTERIOR||(this.isNull(e,n)?this.depth[e][n]=Qn.depthAtLocation(i):this.depth[e][n]+=Qn.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];o===L.INTERIOR&&this.depth[r][s]++}},interfaces_:function(){return[]},getClass:function(){return Qn}}),Qn.depthAtLocation=function(t){return t===L.EXTERIOR?0:t===L.INTERIOR?1:Qn.NULL_VALUE},Qn.NULL_VALUE=-1,h(Jn,mn),e(Jn.prototype,{getDepth:function(){return this.depth},getCollapsedEdge:function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];var e=new Jn(t,gn.toLineLabel(this.label));return e},isIsolated:function(){return this._isIsolated},getCoordinates:function(){return this.pts},setIsolated:function(t){this._isIsolated=t},setName:function(t){this.name=t},equals:function(t){if(!(t instanceof Jn))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var n=!0,i=!0,r=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(e.pts[s])||(n=!1),this.pts[s].equals2D(e.pts[--r])||(i=!1),!n&&!i)return!1;return!0},getCoordinate:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},print:function(t){t.print(\"edge \"+this.name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this.label+\" \"+this.depthDelta)},computeIM:function(t){Jn.updateIM(this.label,t)},isCollapsed:function(){return this.label.isArea()?3!==this.pts.length?!1:!!this.pts[0].equals(this.pts[2]):!1},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getMaximumSegmentIndex:function(){return this.pts.length-1},getDepthDelta:function(){return this.depthDelta},getNumPoints:function(){return this.pts.length},printReverse:function(t){t.print(\"edge \"+this.name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},getMonotoneChainEdge:function(){return null===this.mce&&(this.mce=new Zn(this)),this.mce},getEnvelope:function(){if(null===this.env){this.env=new C;for(var t=0;t<this.pts.length;t++)this.env.expandToInclude(this.pts[t])}return this.env},addIntersection:function(t,e,n,i){var r=new g(t.getIntersection(i)),s=e,o=t.getEdgeDistance(n,i),a=s+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(s=a,o=0)}this.eiList.add(r,s,o)},toString:function(){var t=new P;t.append(\"edge \"+this.name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this.label+\" \"+this.depthDelta),t.toString()},isPointwiseEqual:function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},setDepthDelta:function(t){this.depthDelta=t},getEdgeIntersectionList:function(){return this.eiList},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[]},getClass:function(){return Jn}}),Jn.updateIM=function(){if(2!==arguments.length)return mn.prototype.updateIM.apply(this,arguments);var t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,cn.ON),t.getLocation(1,cn.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,cn.LEFT),t.getLocation(1,cn.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,cn.RIGHT),t.getLocation(1,cn.RIGHT),2))},h($n,Cn),e($n.prototype,{insertBoundaryPoint:function(t,e){var n=this.nodes.addNode(e),i=n.getLabel(),r=1,s=L.NONE;s=i.getLocation(t,cn.ON),s===L.BOUNDARY&&r++;var o=$n.determineBoundary(this.boundaryNodeRule,r);i.setLocation(t,o)},computeSelfNodes:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=new An(n,!0,!1);s.setIsDoneIfProperInt(r);var o=this.createEdgeSetIntersector(),a=this.parentGeom instanceof bt||this.parentGeom instanceof Tt||this.parentGeom instanceof Ot,u=i||!a;return o.computeIntersections(this.edges,s,u),this.addSelfIntersectionNodes(this.argIndex),s}},computeSplitEdges:function(t){for(var e=this.edges.iterator();e.hasNext();){var n=e.next();n.eiList.addSplitEdges(t)}},computeEdgeIntersections:function(t,e,n){var i=new An(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());var r=this.createEdgeSetIntersector();return r.computeIntersections(this.edges,t.edges,i),i},getGeometry:function(){return this.parentGeom},getBoundaryNodeRule:function(){return this.boundaryNodeRule},hasTooFewPoints:function(){return this._hasTooFewPoints},addPoint:function(){if(arguments[0]instanceof Lt){var t=arguments[0],e=t.getCoordinate();this.insertPoint(this.argIndex,e,L.INTERIOR)}else if(arguments[0]instanceof g){var n=arguments[0];this.insertPoint(this.argIndex,n,L.INTERIOR)}},addPolygon:function(t){this.addPolygonRing(t.getExteriorRing(),L.EXTERIOR,L.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,L.INTERIOR,L.EXTERIOR)}},addEdge:function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this.argIndex,e[0],L.BOUNDARY),this.insertPoint(this.argIndex,e[e.length-1],L.BOUNDARY)},addLineString:function(t){var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this.invalidPoint=e[0],null;var n=new Jn(e,new gn(this.argIndex,L.INTERIOR));this.lineEdgeMap.put(t,n),this.insertEdge(n),f.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this.argIndex,e[0]),this.insertBoundaryPoint(this.argIndex,e[e.length-1])},getInvalidPoint:function(){return this.invalidPoint},getBoundaryPoints:function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},getBoundaryNodes:function(){return null===this.boundaryNodes&&(this.boundaryNodes=this.nodes.getBoundaryNodes(this.argIndex)),this.boundaryNodes},addSelfIntersectionNode:function(t,e,n){return this.isBoundaryNode(t,e)?null:void(n===L.BOUNDARY&&this.useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n))},addPolygonRing:function(t,e,n){if(t.isEmpty())return null;var i=H.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this.invalidPoint=i[0],null;var r=e,s=n;he.isCCW(i)&&(r=n,s=e);var o=new Jn(i,new gn(this.argIndex,L.BOUNDARY,r,s));this.lineEdgeMap.put(t,o),this.insertEdge(o),this.insertPoint(this.argIndex,i[0],L.BOUNDARY)},insertPoint:function(t,e,n){var i=this.nodes.addNode(e),r=i.getLabel();null===r?i.label=new gn(t,n):r.setLocation(t,n)},createEdgeSetIntersector:function(){return new Fn},addSelfIntersectionNodes:function(t){for(var e=this.edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var s=r.next();this.addSelfIntersectionNode(t,s.coord,i)}},add:function(){if(1!==arguments.length)return Cn.prototype.add.apply(this,arguments);var t=arguments[0];if(t.isEmpty())return null;if(t instanceof Ot&&(this.useBoundaryDeterminationRule=!1),t instanceof Tt)this.addPolygon(t);else if(t instanceof St)this.addLineString(t);else if(t instanceof Lt)this.addPoint(t);else if(t instanceof Pt)this.addCollection(t);else if(t instanceof gt)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else{if(!(t instanceof ft))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},locate:function(t){return R(this.parentGeom,Rt)&&this.parentGeom.getNumGeometries()>50?(null===this.areaPtLocator&&(this.areaPtLocator=new Un(this.parentGeom)),this.areaPtLocator.locate(t)):this.ptLocator.locate(t,this.parentGeom)},findEdge:function(){if(1===arguments.length){var t=arguments[0];return this.lineEdgeMap.get(t)}return Cn.prototype.findEdge.apply(this,arguments)},interfaces_:function(){return[]},getClass:function(){return $n}}),$n.determineBoundary=function(t,e){return t.isInBoundary(e)?L.BOUNDARY:L.INTERIOR},e(ti.prototype,{getArgGeometry:function(t){return this.arg[t].getGeometry()},setComputationPrecision:function(t){this.resultPrecisionModel=t,this.li.setPrecisionModel(this.resultPrecisionModel)},interfaces_:function(){return[]},getClass:function(){return ti}}),e(ei.prototype,{compareTo:function(t){var e=t,n=ei.compareOriented(this.pts,this._orientation,e.pts,e._orientation);return n},interfaces_:function(){return[s]},getClass:function(){return ei}}),ei.orientation=function(t){return 1===H.increasingDirection(t)},ei.compareOriented=function(t,e,n,i){for(var r=e?1:-1,s=i?1:-1,o=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var h=t[u].compareTo(n[l]);if(0!==h)return h;u+=r,l+=s;var c=u===o,f=l===a;if(c&&!f)return-1;if(!c&&f)return 1;if(c&&f)return 0}},e(ni.prototype,{print:function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this.edges.size();e++){var n=this.edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},addAll:function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},findEdgeIndex:function(t){for(var e=0;e<this.edges.size();e++)if(this.edges.get(e).equals(t))return e;return-1},iterator:function(){return this.edges.iterator()},getEdges:function(){return this.edges},get:function(t){return this.edges.get(t)},findEqualEdge:function(t){var e=new ei(t.getCoordinates()),n=this.ocaMap.get(e);return n},add:function(t){this.edges.add(t);var e=new ei(t.getCoordinates());this.ocaMap.put(e,t)},interfaces_:function(){return[]},getClass:function(){return ni}}),h(ii,ti),e(ii.prototype,{insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new gn(t.getLabel()),i.flip());var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this.edgeList.add(t)},getGraph:function(){return this.graph},cancelDuplicateResultEdges:function(){for(var t=this.graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},isCoveredByLA:function(t){return this.isCovered(t,this.resultLineList)?!0:!!this.isCovered(t,this.resultPolyList)},computeGeometry:function(t,e,n,i){var r=new I;return r.addAll(t),r.addAll(e),r.addAll(n),r.isEmpty()?ii.createEmptyResult(i,this.arg[0].getGeometry(),this.arg[1].getGeometry(),this.geomFact):this.geomFact.buildGeometry(r)},mergeSymLabels:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().mergeSymLabels()}},isCovered:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=this.ptLocator.locate(t,i);if(r!==L.EXTERIOR)return!0}return!1},replaceCollapsedEdges:function(){for(var t=new I,e=this.edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this.edgeList.addAll(t)},updateNodeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},getResultGeometry:function(t){return this.computeOverlay(t),this.resultGeom},insertUniqueEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},computeOverlay:function(t){this.copyPoints(0),this.copyPoints(1),this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1),this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!0);var e=new I;this.arg[0].computeSplitEdges(e),this.arg[1].computeSplitEdges(e);this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),ln.checkValid(this.edgeList.getEdges()),this.graph.addEdges(this.edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new Sn(this.geomFact);n.add(this.graph),this.resultPolyList=n.getPolygons();var i=new wn(this,this.geomFact,this.ptLocator);this.resultLineList=i.build(t);var r=new Ln(this,this.geomFact,this.ptLocator);this.resultPointList=r.build(t),\nthis.resultGeom=this.computeGeometry(this.resultPointList,this.resultLineList,this.resultPolyList,t)},labelIncompleteNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setLocation(e,n)},copyPoints:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.graph.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},findResultAreaEdges:function(t){for(var e=this.graph.getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.isArea()&&!n.isInteriorAreaEdge()&&ii.isResultOfOp(i.getLocation(0,cn.RIGHT),i.getLocation(1,cn.RIGHT),t)&&n.setInResult(!0)}},computeLabelsFromDepths:function(){for(var t=this.edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;2>r;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(f.isTrue(!i.isNull(r,cn.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,cn.LEFT,i.getLocation(r,cn.LEFT)),f.isTrue(!i.isNull(r,cn.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,cn.RIGHT,i.getLocation(r,cn.RIGHT))))}}},computeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}this.mergeSymLabels(),this.updateNodeLabelling()},labelIncompleteNodes:function(){for(var t=0,e=this.graph.getNodes().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(t++,i.isNull(0)?this.labelIncompleteNode(n,0):this.labelIncompleteNode(n,1)),n.getEdges().updateLabelling(i)}},isCoveredByA:function(t){return!!this.isCovered(t,this.resultPolyList)},interfaces_:function(){return[]},getClass:function(){return ii}}),ii.overlayOp=function(t,e,n){var i=new ii(t,e),r=i.getResultGeometry(n);return r},ii.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return ii.createEmptyResult(ii.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return hn.map(t,{interfaces_:function(){return[MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.INTERSECTION)},ii.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return ii.createEmptyResult(ii.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.SYMDIFFERENCE)},ii.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),s=-1;switch(t){case ii.INTERSECTION:s=Math.min(i,r);break;case ii.UNION:s=Math.max(i,r);break;case ii.DIFFERENCE:s=i;break;case ii.SYMDIFFERENCE:s=Math.max(i,r)}return s},ii.createEmptyResult=function(t,e,n,i){var r=null;switch(ii.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},ii.difference=function(t,e){return t.isEmpty()?ii.createEmptyResult(ii.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.DIFFERENCE))},ii.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return ii.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];switch(r===L.BOUNDARY&&(r=L.INTERIOR),s===L.BOUNDARY&&(s=L.INTERIOR),o){case ii.INTERSECTION:return r===L.INTERIOR&&s===L.INTERIOR;case ii.UNION:return r===L.INTERIOR||s===L.INTERIOR;case ii.DIFFERENCE:return r===L.INTERIOR&&s!==L.INTERIOR;case ii.SYMDIFFERENCE:return r===L.INTERIOR&&s!==L.INTERIOR||r!==L.INTERIOR&&s===L.INTERIOR}return!1}},ii.INTERSECTION=1,ii.UNION=2,ii.DIFFERENCE=3,ii.SYMDIFFERENCE=4,e(ri.prototype,{selfSnap:function(t){var e=new Ie(t),n=e.snapTo(t,this.snapTolerance);return n},removeCommonBits:function(t){this.cbr=new Se,this.cbr.add(t[0]),this.cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this.cbr.removeCommonBits(t[0].copy()),e[1]=this.cbr.removeCommonBits(t[1].copy()),e},prepareResult:function(t){return this.cbr.addCommonBits(t),t},getResultGeometry:function(t){var e=this.snap(this.geom),n=ii.overlayOp(e[0],e[1],t);return this.prepareResult(n)},checkValid:function(t){t.isValid()||A.out.println(\"Snapped geometry is invalid\")},computeSnapTolerance:function(){this.snapTolerance=Ie.computeOverlaySnapTolerance(this.geom[0],this.geom[1])},snap:function(t){var e=this.removeCommonBits(t),n=Ie.snap(e[0],e[1],this.snapTolerance);return n},interfaces_:function(){return[]},getClass:function(){return ri}}),ri.overlayOp=function(t,e,n){var i=new ri(t,e);return i.getResultGeometry(n)},ri.union=function(t,e){return ri.overlayOp(t,e,ii.UNION)},ri.intersection=function(t,e){return ri.overlayOp(t,e,ii.INTERSECTION)},ri.symDifference=function(t,e){return ri.overlayOp(t,e,ii.SYMDIFFERENCE)},ri.difference=function(t,e){return ri.overlayOp(t,e,ii.DIFFERENCE)},e(si.prototype,{getResultGeometry:function(t){var e=null,n=!1,i=null;try{e=ii.overlayOp(this.geom[0],this.geom[1],t);var r=!0;r&&(n=!0)}catch(t){if(!(t instanceof l))throw t;i=t}finally{}if(!n)try{e=ri.overlayOp(this.geom[0],this.geom[1],t)}catch(t){throw t instanceof l?i:t}finally{}return e},interfaces_:function(){return[]},getClass:function(){return si}}),si.overlayOp=function(t,e,n){var i=new si(t,e);return i.getResultGeometry(n)},si.union=function(t,e){return si.overlayOp(t,e,ii.UNION)},si.intersection=function(t,e){return si.overlayOp(t,e,ii.INTERSECTION)},si.symDifference=function(t,e){return si.overlayOp(t,e,ii.SYMDIFFERENCE)},si.difference=function(t,e){return si.overlayOp(t,e,ii.DIFFERENCE)},e(oi.prototype,{addPolygon:function(t){if(t.isEmpty())return null;var e=null,n=0,i=this.horizontalBisector(t);if(0===i.getLength())n=0,e=i.getCoordinate();else{var r=si.overlayOp(i,t,ii.INTERSECTION),s=this.widestGeometry(r);n=s.getEnvelopeInternal().getWidth(),e=oi.centre(s.getEnvelopeInternal())}(null===this.interiorPoint||n>this.maxWidth)&&(this.interiorPoint=e,this.maxWidth=n)},getInteriorPoint:function(){return this.interiorPoint},widestGeometry:function t(){if(arguments[0]instanceof ft){var e=arguments[0];if(e.isEmpty())return e;for(var t=e.getGeometryN(0),n=1;n<e.getNumGeometries();n++)e.getGeometryN(n).getEnvelopeInternal().getWidth()>t.getEnvelopeInternal().getWidth()&&(t=e.getGeometryN(n));return t}if(arguments[0]instanceof B){var i=arguments[0];return i instanceof ft?this.widestGeometry(i):i}},horizontalBisector:function(t){var e=t.getEnvelopeInternal(),n=ai.getBisectorY(t);return this.factory.createLineString([new g(e.getMinX(),n),new g(e.getMaxX(),n)])},add:function(t){if(t instanceof Tt)this.addPolygon(t);else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))},interfaces_:function(){return[]},getClass:function(){return oi}}),oi.centre=function(t){return new g(oi.avg(t.getMinX(),t.getMaxX()),oi.avg(t.getMinY(),t.getMaxY()))},oi.avg=function(t,e){return(t+e)/2},e(ai.prototype,{updateInterval:function(t){t<=this.centreY?t>this.loY&&(this.loY=t):t>this.centreY&&t<this.hiY&&(this.hiY=t)},getBisectorY:function(){this.process(this.poly.getExteriorRing());for(var t=0;t<this.poly.getNumInteriorRing();t++)this.process(this.poly.getInteriorRingN(t));var e=oi.avg(this.hiY,this.loY);return e},process:function(t){for(var e=t.getCoordinateSequence(),n=0;n<e.size();n++){var i=e.getY(n);this.updateInterval(i)}},interfaces_:function(){return[]},getClass:function(){return ai}}),ai.getBisectorY=function(t){var e=new ai(t);return e.getBisectorY()},oi.SafeBisectorFinder=ai,e(ui.prototype,{addEndpoints:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof St)this.addEndpoints(t.getCoordinates());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addEndpoints(e.getGeometryN(n))}else if(arguments[0]instanceof Array){var i=arguments[0];this.add(i[0]),this.add(i[i.length-1])}},getInteriorPoint:function(){return this.interiorPoint},addInterior:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof St)this.addInterior(t.getCoordinates());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addInterior(e.getGeometryN(n))}else if(arguments[0]instanceof Array)for(var i=arguments[0],n=1;n<i.length-1;n++)this.add(i[n])},add:function(t){var e=t.distance(this.centroid);e<this.minDistance&&(this.interiorPoint=new g(t),this.minDistance=e)},interfaces_:function(){return[]},getClass:function(){return ui}}),e(li.prototype,{getInteriorPoint:function(){return this.interiorPoint},add:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof Lt)this.add(t.getCoordinate());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))}else if(arguments[0]instanceof g){var i=arguments[0],r=i.distance(this.centroid);r<this.minDistance&&(this.interiorPoint=new g(i),this.minDistance=r)}},interfaces_:function(){return[]},getClass:function(){return li}}),e(hi.prototype,{interfaces_:function(){return[]},getClass:function(){return hi}}),hi.toDegrees=function(t){return 180*t/Math.PI},hi.normalize=function(t){for(;t>Math.PI;)t-=hi.PI_TIMES_2;for(;t<=-Math.PI;)t+=hi.PI_TIMES_2;return t},hi.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},hi.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=n.x-e.x,o=n.y-e.y,a=i*s+r*o;return a>0},hi.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=n.x-e.x,o=n.y-e.y,a=i*s+r*o;return 0>a},hi.interiorAngle=function(t,e,n){var i=hi.angle(e,t),r=hi.angle(e,n);return Math.abs(r-i)},hi.normalizePositive=function(t){if(0>t){for(;0>t;)t+=hi.PI_TIMES_2;t>=hi.PI_TIMES_2&&(t=0)}else{for(;t>=hi.PI_TIMES_2;)t-=hi.PI_TIMES_2;0>t&&(t=0)}return t},hi.angleBetween=function(t,e,n){var i=hi.angle(e,t),r=hi.angle(e,n);return hi.diff(i,r)},hi.diff=function(t,e){var n=null;return n=e>t?e-t:t-e,n>Math.PI&&(n=2*Math.PI-n),n},hi.toRadians=function(t){return t*Math.PI/180},hi.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?hi.COUNTERCLOCKWISE:0>n?hi.CLOCKWISE:hi.NONE},hi.angleBetweenOriented=function(t,e,n){var i=hi.angle(e,t),r=hi.angle(e,n),s=r-i;return s<=-Math.PI?s+hi.PI_TIMES_2:s>Math.PI?s-hi.PI_TIMES_2:s},hi.PI_TIMES_2=2*Math.PI,hi.PI_OVER_2=Math.PI/2,hi.PI_OVER_4=Math.PI/4,hi.COUNTERCLOCKWISE=he.COUNTERCLOCKWISE,hi.CLOCKWISE=he.CLOCKWISE,hi.NONE=he.COLLINEAR,e(ci.prototype,{area:function(){return ci.area(this.p0,this.p1,this.p2)},signedArea:function(){return ci.signedArea(this.p0,this.p1,this.p2)},interpolateZ:function(t){if(null===t)throw new i(\"Supplied point is null.\");return ci.interpolateZ(t,this.p0,this.p1,this.p2)},longestSideLength:function(){return ci.longestSideLength(this.p0,this.p1,this.p2)},isAcute:function(){return ci.isAcute(this.p0,this.p1,this.p2)},circumcentre:function(){return ci.circumcentre(this.p0,this.p1,this.p2)},area3D:function(){return ci.area3D(this.p0,this.p1,this.p2)},centroid:function(){return ci.centroid(this.p0,this.p1,this.p2)},inCentre:function(){return ci.inCentre(this.p0,this.p1,this.p2)},interfaces_:function(){return[]},getClass:function(){return ci}}),ci.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},ci.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},ci.det=function(t,e,n,i){return t*i-e*n},ci.interpolateZ=function(t,e,n,i){var r=e.x,s=e.y,o=n.x-r,a=i.x-r,u=n.y-s,l=i.y-s,h=o*l-a*u,c=t.x-r,f=t.y-s,g=(l*c-a*f)/h,d=(-u*c+o*f)/h,p=e.z+g*(n.z-e.z)+d*(i.z-e.z);return p},ci.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),s=n.distance(t),o=i;return r>o&&(o=r),s>o&&(o=s),o},ci.isAcute=function(t,e,n){return hi.isAcute(t,e,n)&&hi.isAcute(e,n,t)?!!hi.isAcute(n,t,e):!1},ci.circumcentre=function(t,e,n){var i=n.x,r=n.y,s=t.x-i,o=t.y-r,a=e.x-i,u=e.y-r,l=2*ci.det(s,o,a,u),h=ci.det(o,s*s+o*o,u,a*a+u*u),c=ci.det(s,s*s+o*o,a,a*a+u*u),f=i-h/l,d=r+c/l;return new g(f,d)},ci.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new F(t.x+n/2,t.y+i/2,1),s=new F(t.x-i+n/2,t.y+n+i/2,1);return new F(r,s)},ci.angleBisector=function(t,e,n){var i=e.distance(t),r=e.distance(n),s=i/(i+r),o=n.x-t.x,a=n.y-t.y,u=new g(t.x+s*o,t.y+s*a);return u},ci.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=e.z-t.z,o=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-s*a,h=s*o-i*u,c=i*a-r*o,f=l*l+h*h+c*c,g=Math.sqrt(f)/2;return g},ci.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new g(i,r)},ci.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),s=t.distance(e),o=i+r+s,a=(i*t.x+r*e.x+s*n.x)/o,u=(i*t.y+r*e.y+s*n.y)/o;return new g(a,u)},e(fi.prototype,{getRadius:function(){return this.compute(),this.radius},getDiameter:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[1];return this.input.getFactory().createLineString([t,e])},getExtremalPoints:function(){return this.compute(),this.extremalPts},computeCirclePoints:function(){if(this.input.isEmpty())return this.extremalPts=new Array(0).fill(null),null;if(1===this.input.getNumPoints()){var t=this.input.getCoordinates();return this.extremalPts=[new g(t[0])],null}var e=this.input.convexHull(),n=e.getCoordinates(),t=n;if(n[0].equals2D(n[n.length-1])&&(t=new Array(n.length-1).fill(null),H.copyDeep(n,0,t,0,n.length-1)),t.length<=2)return this.extremalPts=H.copyDeep(t),null;for(var i=fi.lowestPoint(t),r=fi.pointWitMinAngleWithX(t,i),s=0;s<t.length;s++){var o=fi.pointWithMinAngleWithSegment(t,i,r);if(hi.isObtuse(i,o,r))return this.extremalPts=[new g(i),new g(r)],null;if(hi.isObtuse(o,i,r))i=o;else{if(!hi.isObtuse(o,r,i))return this.extremalPts=[new g(i),new g(r),new g(o)],null;r=o}}f.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\")},compute:function(){return null!==this.extremalPts?null:(this.computeCirclePoints(),this.computeCentre(),void(null!==this.centre&&(this.radius=this.centre.distance(this.extremalPts[0]))))},getFarthestPoints:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[this.extremalPts.length-1];return this.input.getFactory().createLineString([t,e])},getCircle:function(){if(this.compute(),null===this.centre)return this.input.getFactory().createPolygon();var t=this.input.getFactory().createPoint(this.centre);return 0===this.radius?t:t.buffer(this.radius)},getCentre:function(){return this.compute(),this.centre},computeCentre:function(){switch(this.extremalPts.length){case 0:this.centre=null;break;case 1:this.centre=this.extremalPts[0];break;case 2:this.centre=new g((this.extremalPts[0].x+this.extremalPts[1].x)/2,(this.extremalPts[0].y+this.extremalPts[1].y)/2);break;case 3:this.centre=ci.circumcentre(this.extremalPts[0],this.extremalPts[1],this.extremalPts[2])}},interfaces_:function(){return[]},getClass:function(){return fi}}),fi.pointWitMinAngleWithX=function(t,e){for(var n=r.MAX_VALUE,i=null,s=0;s<t.length;s++){var o=t[s];if(o!==e){var a=o.x-e.x,u=o.y-e.y;0>u&&(u=-u);var l=Math.sqrt(a*a+u*u),h=u/l;n>h&&(n=h,i=o)}}return i},fi.lowestPoint=function(t){for(var e=t[0],n=1;n<t.length;n++)t[n].y<e.y&&(e=t[n]);return e},fi.pointWithMinAngleWithSegment=function(t,e,n){for(var i=r.MAX_VALUE,s=null,o=0;o<t.length;o++){var a=t[o];if(a!==e&&a!==n){var u=hi.angleBetween(e,a,n);i>u&&(i=u,s=a)}}return s},e(gi.prototype,{getWidthCoordinate:function(){return this.computeMinimumDiameter(),this.minWidthPt},getSupportingSegment:function(){return this.computeMinimumDiameter(),this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0,this.minBaseSeg.p1])},getDiameter:function(){if(this.computeMinimumDiameter(),null===this.minWidthPt)return this.inputGeom.getFactory().createLineString(null);var t=this.minBaseSeg.project(this.minWidthPt);return this.inputGeom.getFactory().createLineString([t,this.minWidthPt])},computeWidthConvex:function(t){t instanceof Tt?this.convexHullPts=t.getExteriorRing().getCoordinates():this.convexHullPts=t.getCoordinates(),0===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=null,this.minBaseSeg=null):1===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[0]):2===this.convexHullPts.length||3===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[1]):this.computeConvexRingMinDiameter(this.convexHullPts)},computeConvexRingMinDiameter:function(t){this.minWidth=r.MAX_VALUE;for(var e=1,n=new ce,i=0;i<t.length-1;i++)n.p0=t[i],n.p1=t[i+1],e=this.findMaxPerpDistance(t,n,e)},computeMinimumDiameter:function(){if(null!==this.minWidthPt)return null;if(this.isConvex)this.computeWidthConvex(this.inputGeom);else{var t=new me(this.inputGeom).getConvexHull();this.computeWidthConvex(t)}},getLength:function(){return this.computeMinimumDiameter(),this.minWidth},findMaxPerpDistance:function(t,e,n){for(var i=e.distancePerpendicular(t[n]),r=i,s=n,o=s;r>=i;)i=r,s=o,o=gi.nextIndex(t,s),r=e.distancePerpendicular(t[o]);return i<this.minWidth&&(this.minPtIndex=s,this.minWidth=i,this.minWidthPt=t[this.minPtIndex],this.minBaseSeg=new ce(e)),s},getMinimumRectangle:function(){if(this.computeMinimumDiameter(),0===this.minWidth)return this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)?this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0):this.minBaseSeg.toGeometry(this.inputGeom.getFactory());for(var t=this.minBaseSeg.p1.x-this.minBaseSeg.p0.x,e=this.minBaseSeg.p1.y-this.minBaseSeg.p0.y,n=r.MAX_VALUE,i=-r.MAX_VALUE,s=r.MAX_VALUE,o=-r.MAX_VALUE,a=0;a<this.convexHullPts.length;a++){var u=gi.computeC(t,e,this.convexHullPts[a]);u>i&&(i=u),n>u&&(n=u);var l=gi.computeC(-e,t,this.convexHullPts[a]);l>o&&(o=l),s>l&&(s=l)}var h=gi.computeSegmentForLine(-t,-e,o),c=gi.computeSegmentForLine(-t,-e,s),f=gi.computeSegmentForLine(-e,t,i),g=gi.computeSegmentForLine(-e,t,n),d=f.lineIntersection(h),p=g.lineIntersection(h),v=g.lineIntersection(c),m=f.lineIntersection(c),y=this.inputGeom.getFactory().createLinearRing([d,p,v,m,d]);return this.inputGeom.getFactory().createPolygon(y,null)},interfaces_:function(){return[]},getClass:function(){return gi}}),gi.nextIndex=function(t,e){return e++,e>=t.length&&(e=0),e},gi.computeC=function(t,e,n){return t*n.y-e*n.x},gi.getMinimumDiameter=function(t){return new gi(t).getDiameter()},gi.getMinimumRectangle=function(t){return new gi(t).getMinimumRectangle()},gi.computeSegmentForLine=function(t,e,n){var i=null,r=null;return Math.abs(e)>Math.abs(t)?(i=new g(0,n/e),r=new g(1,n/e-t/e)):(i=new g(n/t,0),r=new g(n/t-e/t,1)),new ce(i,r)};var co=Object.freeze({Centroid:ge,CGAlgorithms:he,ConvexHull:me,InteriorPointArea:oi,InteriorPointLine:ui,InteriorPointPoint:li,RobustLineIntersector:ae,MinimumBoundingCircle:fi,MinimumDiameter:gi});e(di.prototype,{getResultGeometry:function(){return new pi(this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(0>=t)throw new i(\"Tolerance must be positive\");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return di}}),di.densifyPoints=function(t,e,n){for(var i=new ce,r=new N,s=0;s<t.length-1;s++){i.p0=t[s],i.p1=t[s+1],r.add(i.p0,!1);var o=i.getLength(),a=Math.trunc(o/e)+1;if(a>1)for(var u=o/a,l=1;a>l;l++){var h=l*u/o,c=i.pointAlong(h);n.makePrecise(c),r.add(c,!1)}}return r.add(t[t.length-1],!1),r.toCoordinateArray()},di.densify=function(t,e){var n=new di(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(pi,xe),e(pi.prototype,{transformMultiPolygon:function(t,e){var n=xe.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformPolygon:function(t,e){var n=xe.prototype.transformPolygon.call(this,t,e);return e instanceof Ot?n:this.createValidArea(n)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=di.densifyPoints(n,this.distanceTolerance,e.getPrecisionModel());return e instanceof St&&1===i.length&&(i=new Array(0).fill(null)),this.factory.getCoordinateSequenceFactory().create(i)},createValidArea:function(t){return t.buffer(0)},interfaces_:function(){return[]},getClass:function(){return pi}}),di.DensifyTransformer=pi;var fo=Object.freeze({Densifier:di});e(vi.prototype,{find:function(t){var e=this;do{if(null===e)return null;if(e.dest().equals2D(t))return e;e=e.oNext()}while(e!==this);return null},dest:function(){return this._sym._orig},oNext:function(){return this._sym._next},insert:function(t){if(this.oNext()===this)return this.insertAfter(t),null;var e=this.compareTo(t),n=this;do{var i=n.oNext(),r=i.compareTo(t);if(r!==e||i===this)return n.insertAfter(t),null;n=i}while(n!==this);f.shouldNeverReachHere()},insertAfter:function(t){f.equals(this._orig,t.orig());var e=this.oNext();this._sym.setNext(t),t.sym().setNext(e)},degree:function t(){var t=0,e=this;do t++,e=e.oNext();while(e!==this);return t},equals:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this._orig.equals2D(t)&&this._sym._orig.equals(e)}},deltaY:function(){return this._sym._orig.y-this._orig.y},sym:function(){return this._sym},prev:function(){return this._sym.next()._sym},compareAngularDirection:function(t){var e=this.deltaX(),n=this.deltaY(),i=t.deltaX(),r=t.deltaY();if(e===i&&n===r)return 0;var s=Je.quadrant(e,n),o=Je.quadrant(i,r);return s>o?1:o>s?-1:he.computeOrientation(t._orig,t.dest(),this.dest())},prevNode:function(){for(var t=this;2===t.degree();)if(t=t.prev(),t===this)return null;return t},compareTo:function(t){var e=t,n=this.compareAngularDirection(e);return n},next:function(){return this._next},setSym:function(t){this._sym=t},orig:function(){return this._orig},toString:function(){return\"HE(\"+this._orig.x+\" \"+this._orig.y+\", \"+this._sym._orig.x+\" \"+this._sym._orig.y+\")\"},setNext:function(t){this._next=t},init:function(t){this.setSym(t),t.setSym(this),this.setNext(t),t.setNext(this)},deltaX:function(){return this._sym._orig.x-this._orig.x},interfaces_:function(){return[]},getClass:function(){return vi}}),vi.init=function(t,e){if(null!==t._sym||null!==e._sym||null!==t._next||null!==e._next)throw new IllegalStateException(\"Edges are already initialized\");return t.init(e),t},vi.create=function(t,e){var n=new vi(t),i=new vi(e);return n.init(i),n},h(mi,vi),e(mi.prototype,{mark:function(){this._isMarked=!0},setMark:function(t){this._isMarked=t},isMarked:function(){return this._isMarked},interfaces_:function(){return[]},getClass:function(){return mi}}),mi.setMarkBoth=function(t,e){t.setMark(e),t.sym().setMark(e)},mi.isMarked=function(t){return t.isMarked()},mi.setMark=function(t,e){t.setMark(e)},mi.markBoth=function(t){t.mark(),t.sym().mark()},mi.mark=function(t){t.mark()},e(yi.prototype,{insert:function(t,e,n){var i=this.create(t,e);null!==n?n.insert(i):this.vertexMap.put(t,i);var r=this.vertexMap.get(e);return null!==r?r.insert(i.sym()):this.vertexMap.put(e,i.sym()),i},create:function(t,e){var n=this.createEdge(t),i=this.createEdge(e);return vi.init(n,i),n},createEdge:function(t){return new vi(t)},addEdge:function(t,e){if(!yi.isValidEdge(t,e))return null;var n=this.vertexMap.get(t),i=null;if(null!==n&&(i=n.find(e)),null!==i)return i;var r=this.insert(t,e,n);return r},getVertexEdges:function(){return this.vertexMap.values()},findEdge:function(t,e){var n=this.vertexMap.get(t);return null===n?null:n.find(e)},interfaces_:function(){return[]},getClass:function(){return yi}}),yi.isValidEdge=function(t,e){var n=e.compareTo(t);return 0!==n},h(xi,mi),e(xi.prototype,{setStart:function(){this._isStart=!0},isStart:function(){return this._isStart},interfaces_:function(){return[]},getClass:function(){return xi}}),h(Ei,yi),e(Ei.prototype,{createEdge:function(t){return new xi(t)},interfaces_:function(){return[]},getClass:function(){return Ei}}),e(Ii.prototype,{addLine:function(t){this.lines.add(this.factory.createLineString(t.toCoordinateArray()))},updateRingStartEdge:function(t){return t.isStart()||(t=t.sym(),t.isStart())?null===this.ringStartEdge?(this.ringStartEdge=t,null):void(t.orig().compareTo(this.ringStartEdge.orig())<0&&(this.ringStartEdge=t)):null},getResult:function(){return null===this.result&&this.computeResult(),this.result},process:function(t){var e=t.prevNode();null===e&&(e=t),this.stackEdges(e),this.buildLines()},buildRing:function(t){var e=new N,n=t;for(e.add(n.orig().copy(),!1);2===n.sym().degree();){var i=n.next();if(i===t)break;e.add(i.orig().copy(),!1),n=i}e.add(n.dest().copy(),!1),this.addLine(e)},buildLine:function(t){var e=new N,n=t;for(this.ringStartEdge=null,mi.markBoth(n),e.add(n.orig().copy(),!1);2===n.sym().degree();){this.updateRingStartEdge(n);var i=n.next();if(i===t)return this.buildRing(this.ringStartEdge),null;e.add(i.orig().copy(),!1),n=i,mi.markBoth(n)}e.add(n.dest().copy(),!1),this.stackEdges(n.sym()),this.addLine(e)},stackEdges:function(t){var e=t;do mi.isMarked(e)||this.nodeEdgeStack.add(e),e=e.oNext();while(e!==t)},computeResult:function(){for(var t=this.graph.getVertexEdges(),e=t.iterator();e.hasNext();){var n=e.next();mi.isMarked(n)||this.process(n)}this.result=this.factory.buildGeometry(this.lines)},buildLines:function(){for(;!this.nodeEdgeStack.empty();){var t=this.nodeEdgeStack.pop();mi.isMarked(t)||this.buildLine(t)}},add:function(){if(arguments[0]instanceof B){var t=arguments[0];t.apply({interfaces_:function(){return[q]},filter:function(t){t instanceof St&&this.add(t)}})}else if(R(arguments[0],v))for(var e=arguments[0],n=e.iterator();n.hasNext();){var i=n.next();this.add(i)}else if(arguments[0]instanceof St){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory());for(var s=r.getCoordinateSequence(),o=!1,n=1;n<s.size();n++){var a=this.graph.addEdge(s.getCoordinate(n-1),s.getCoordinate(n));null!==a&&(o||(a.setStart(),o=!0))}}},interfaces_:function(){return[]},getClass:function(){return Ii}}),Ii.dissolve=function(t){var e=new Ii;return e.add(t),e.getResult()};var go=Object.freeze({LineDissolver:Ii});e(Ni.prototype,{hasChildren:function(){for(var t=0;4>t;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;4>e;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},getNodeCount:function(){for(var t=0,e=0;4>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+1},size:function(){for(var t=0,e=0;4>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){if(!this.isSearchMatch(t))return null;e.addAll(this.items);for(var n=0;4>n;n++)null!==this.subnode[n]&&this.subnode[n].addAllItemsFromOverlapping(t,e)},visitItems:function(t,e){for(var n=this.items.iterator();n.hasNext();)e.visitItem(n.next())},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;4>i;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},visit:function(t,e){if(!this.isSearchMatch(t))return null;this.visitItems(t,e);for(var n=0;4>n;n++)null!==this.subnode[n]&&this.subnode[n].visit(t,e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;4>e;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},isEmpty:function t(){var t=!0;this.items.isEmpty()||(t=!1);for(var e=0;4>e;e++)null!==this.subnode[e]&&(this.subnode[e].isEmpty()||(t=!1));return t},add:function(t){this.items.add(t)},interfaces_:function(){return[u]},getClass:function(){return Ni}}),Ni.getSubnodeIndex=function(t,e,n){var i=-1;return t.getMinX()>=e&&(t.getMinY()>=n&&(i=3),t.getMaxY()<=n&&(i=1)),t.getMaxX()<=e&&(t.getMinY()>=n&&(i=2),t.getMaxY()<=n&&(i=0)),i},Ci.exponent=function(t){return Si(64,t)-1023},Ci.powerOf2=function(t){return Math.pow(2,t)},e(wi.prototype,{getLevel:function(){return this.level},computeKey:function(){if(1===arguments.length){var t=arguments[0];for(this.level=wi.computeQuadLevel(t),this.env=new C,this.computeKey(this.level,t);!this.env.contains(t);)this.level+=1,this.computeKey(this.level,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=Ci.powerOf2(e);this.pt.x=Math.floor(n.getMinX()/i)*i,this.pt.y=Math.floor(n.getMinY()/i)*i,this.env.init(this.pt.x,this.pt.x+i,this.pt.y,this.pt.y+i)}},getEnvelope:function(){return this.env},getCentre:function(){return new g((this.env.getMinX()+this.env.getMaxX())/2,(this.env.getMinY()+this.env.getMaxY())/2)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return wi}}),wi.computeQuadLevel=function(t){var e=t.getWidth(),n=t.getHeight(),i=e>n?e:n,r=Ci.exponent(i)+1;return r},h(Li,Ni),e(Li.prototype,{find:function(t){var e=Ni.getSubnodeIndex(t,this.centrex,this.centrey);if(-1===e)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},isSearchMatch:function(t){return this.env.intersects(t)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getEnvelope:function(){return this.env},getNode:function(t){var e=Ni.getSubnodeIndex(t,this.centrex,this.centrey);if(-1!==e){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0,i=0,r=0;switch(t){case 0:e=this.env.getMinX(),n=this.centrex,i=this.env.getMinY(),r=this.centrey;break;case 1:e=this.centrex,n=this.env.getMaxX(),i=this.env.getMinY(),r=this.centrey;break;case 2:e=this.env.getMinX(),n=this.centrex,i=this.centrey,r=this.env.getMaxY();break;case 3:e=this.centrex,n=this.env.getMaxX(),i=this.centrey,r=this.env.getMaxY()}var s=new C(e,n,i,r),o=new Li(s,this.level-1);return o},insertNode:function(t){f.isTrue(null===this.env||this.env.contains(t.env));var e=Ni.getSubnodeIndex(t.env,this.centrex,this.centrey);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insertNode(t),this.subnode[e]=n}},interfaces_:function(){return[]},getClass:function(){return Li}}),Li.createNode=function(t){var e=new wi(t),n=new Li(e.getEnvelope(),e.getLevel());return n},Li.createExpanded=function(t,e){var n=new C(e);null!==t&&n.expandToInclude(t.env);var i=Li.createNode(n);return null!==t&&i.insertNode(t),i},e(Ri.prototype,{interfaces_:function(){return[]},getClass:function(){return Ri}}),Ri.isZeroWidth=function(t,e){var n=e-t;if(0===n)return!0;var i=Math.max(Math.abs(t),Math.abs(e)),r=n/i,s=Ci.exponent(r);return s<=Ri.MIN_BINARY_EXPONENT},Ri.MIN_BINARY_EXPONENT=-50,h(Ti,Ni),e(Ti.prototype,{insert:function(t,e){var n=Ni.getSubnodeIndex(t,Ti.origin.x,Ti.origin.y);if(-1===n)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getEnvelope().contains(t)){var r=Li.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){f.isTrue(t.getEnvelope().contains(e));var i=Ri.isZeroWidth(e.getMinX(),e.getMaxX()),r=Ri.isZeroWidth(e.getMinY(),e.getMaxY()),s=null;s=i||r?t.find(e):t.getNode(e),s.add(n)},interfaces_:function(){return[]},getClass:function(){return Ti}}),Ti.origin=new g(0,0),e(Pi.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=Pi.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){var t=arguments[0],e=new Yn;return this.query(t,e),e.getItems()}if(2===arguments.length){var n=arguments[0],i=arguments[1];this.root.visit(n,i)}},queryAll:function(){var t=new I;return this.root.addAllItems(t),\nt},remove:function(t,e){var n=Pi.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e);var n=t.getHeight();n<this.minExtent&&n>0&&(this.minExtent=n)},depth:function(){return null!==this.root?this.root.depth():0},isEmpty:function(){return null===this.root},interfaces_:function(){return[Fe,u]},getClass:function(){return Pi}}),Pi.ensureExtent=function(t,e){var n=t.getMinX(),i=t.getMaxX(),r=t.getMinY(),s=t.getMaxY();return n!==i&&r!==s?t:(n===i&&(n-=e/2,i=n+e/2),r===s&&(r-=e/2,s=r+e/2),new C(n,i,r,s))},Pi.serialVersionUID=-0x678b60c967a25400;var po=Object.freeze({Quadtree:Pi}),vo=Object.freeze({STRtree:ke}),mo=Object.freeze({quadtree:po,strtree:vo}),yo=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"];e(bi.prototype,{read:function(t){var e=void 0;e=\"string\"==typeof t?JSON.parse(t):t;var n=e.type;if(!xo[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==yo.indexOf(n)?xo[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?xo[n].apply(this,[e.geometries]):xo[n].apply(this,[e])},write:function(t){var e=t.getGeometryType();if(!Eo[e])throw new Error(\"Geometry is not supported\");return Eo[e].apply(this,[t])}});var xo={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!xo[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=xo.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function t(e){for(var t=[],n=0;n<e.length;++n){var i=e[n];t.push(new g(i[0],i[1]))}return t},bbox:function(t){return this.geometryFactory.createLinearRing([new g(t[0],t[1]),new g(t[2],t[1]),new g(t[2],t[3]),new g(t[0],t[3]),new g(t[0],t[1])])},Point:function(t){var e=new g(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(xo.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=xo.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(xo.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=xo.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var s=t[r],o=xo.coordinates.apply(this,[s]),a=this.geometryFactory.createLinearRing(o);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(xo.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},Eo={coordinate:function(t){return[t.x,t.y]},Point:function(t){var e=Eo.coordinate.apply(this,[t.getCoordinate()]);return{type:\"Point\",coordinates:e}},MultiPoint:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Eo.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(Eo.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Eo.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=Eo.LineString.apply(this,[t.shell]);e.push(n.coordinates);for(var i=0;i<t.holes.length;++i){var r=t.holes[i],s=Eo.LineString.apply(this,[r]);e.push(s.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Eo.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=i.getGeometryType();e.push(Eo[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}};e(Oi.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===ee.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;n>e;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;n>e;e++)this.reducePrecision(t.geometries[e])}}),e(_i.prototype,{write:function(t){return this.parser.write(t)}}),e(Mi.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===ee.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(var e=0,n=t.points.coordinates.length;n>e;e++)this.precisionModel.makePrecise(t.points.coordinates[e]);else if(t.geometries)for(var i=0,r=t.geometries.length;r>i;i++)this.reducePrecision(t.geometries[i])}}),e(Ai.prototype,{read:function(t){return t instanceof ol.geom.Point?this.convertFromPoint(t):t instanceof ol.geom.LineString?this.convertFromLineString(t):t instanceof ol.geom.LinearRing?this.convertFromLinearRing(t):t instanceof ol.geom.Polygon?this.convertFromPolygon(t):t instanceof ol.geom.MultiPoint?this.convertFromMultiPoint(t):t instanceof ol.geom.MultiLineString?this.convertFromMultiLineString(t):t instanceof ol.geom.MultiPolygon?this.convertFromMultiPolygon(t):t instanceof ol.geom.GeometryCollection?this.convertFromCollection(t):void 0},convertFromPoint:function(t){var e=t.getCoordinates();return this.geometryFactory.createPoint(new g(e[0],e[1]))},convertFromLineString:function(t){return this.geometryFactory.createLineString(t.getCoordinates().map(function(t){return new g(t[0],t[1])}))},convertFromLinearRing:function(t){return this.geometryFactory.createLinearRing(t.getCoordinates().map(function(t){return new g(t[0],t[1])}))},convertFromPolygon:function(t){for(var e=t.getLinearRings(),n=null,i=[],r=0;r<e.length;r++){var s=this.convertFromLinearRing(e[r]);0===r?n=s:i.push(s)}return this.geometryFactory.createPolygon(n,i)},convertFromMultiPoint:function(t){var e=t.getPoints().map(function(t){return this.convertFromPoint(t)},this);return this.geometryFactory.createMultiPoint(e)},convertFromMultiLineString:function(t){var e=t.getLineStrings().map(function(t){return this.convertFromLineString(t)},this);return this.geometryFactory.createMultiLineString(e)},convertFromMultiPolygon:function(t){var e=t.getPolygons().map(function(t){return this.convertFromPolygon(t)},this);return this.geometryFactory.createMultiPolygon(e)},convertFromCollection:function(t){var e=t.getGeometries().map(function(t){return this.read(t)},this);return this.geometryFactory.createGeometryCollection(e)},write:function(t){return\"Point\"===t.getGeometryType()?this.convertToPoint(t.getCoordinate()):\"LineString\"===t.getGeometryType()?this.convertToLineString(t):\"LinearRing\"===t.getGeometryType()?this.convertToLinearRing(t):\"Polygon\"===t.getGeometryType()?this.convertToPolygon(t):\"MultiPoint\"===t.getGeometryType()?this.convertToMultiPoint(t):\"MultiLineString\"===t.getGeometryType()?this.convertToMultiLineString(t):\"MultiPolygon\"===t.getGeometryType()?this.convertToMultiPolygon(t):\"GeometryCollection\"===t.getGeometryType()?this.convertToCollection(t):void 0},convertToPoint:function(t){return new ol.geom.Point([t.x,t.y])},convertToLineString:function(t){var e=t.points.coordinates.map(Di);return new ol.geom.LineString(e)},convertToLinearRing:function(t){var e=t.points.coordinates.map(Di);return new ol.geom.LinearRing(e)},convertToPolygon:function(t){for(var e=[t.shell.points.coordinates.map(Di)],n=0;n<t.holes.length;n++)e.push(t.holes[n].points.coordinates.map(Di));return new ol.geom.Polygon(e)},convertToMultiPoint:function(t){return new ol.geom.MultiPoint(t.getCoordinates().map(Di))},convertToMultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToLineString(t.geometries[n]).getCoordinates());return new ol.geom.MultiLineString(e)},convertToMultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToPolygon(t.geometries[n]).getCoordinates());return new ol.geom.MultiPolygon(e)},convertToCollection:function(t){for(var e=[],n=0;n<t.geometries.length;n++){var i=t.geometries[n];e.push(this.write(i))}return new ol.geom.GeometryCollection(e)}});var Io=Object.freeze({GeoJSONReader:Oi,GeoJSONWriter:_i,OL3Parser:Ai,WKTReader:Mi,WKTWriter:se});e(Fi.prototype,{rescale:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.rescale(n.getCoordinates())}else if(arguments[0]instanceof Array){var i=arguments[0],r=null,s=null;2===i.length&&(r=new g(i[0]),s=new g(i[1]));for(var e=0;e<i.length;e++)i[e].x=i[e].x/this.scaleFactor+this.offsetX,i[e].y=i[e].y/this.scaleFactor+this.offsetY;2===i.length&&i[0].equals2D(i[1])&&A.out.println(i)}},scale:function(){if(R(arguments[0],v)){for(var t=arguments[0],e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ke(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],s=new Array(r.length).fill(null),n=0;n<r.length;n++)s[n]=new g(Math.round((r[n].x-this.offsetX)*this.scaleFactor),Math.round((r[n].y-this.offsetY)*this.scaleFactor),r[n].z);var o=H.removeRepeatedPoints(s);return o}},isIntegerPrecision:function(){return 1===this.scaleFactor},getNodedSubstrings:function(){var t=this.noder.getNodedSubstrings();return this.isScaled&&this.rescale(t),t},computeNodes:function(t){var e=t;this.isScaled&&(e=this.scale(t)),this.noder.computeNodes(e)},interfaces_:function(){return[tn]},getClass:function(){return Fi}});var No=Object.freeze({MCIndexNoder:nn,ScaledNoder:Fi,SegmentString:be});e(Gi.prototype,{isSimpleMultiPoint:function(t){if(t.isEmpty())return!0;for(var e=new at,n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n),r=i.getCoordinate();if(e.contains(r))return this.nonSimpleLocation=r,!1;e.add(r)}return!0},isSimplePolygonal:function(t){for(var e=kn.getLines(t),n=e.iterator();n.hasNext();){var i=n.next();if(!this.isSimpleLinearGeometry(i))return!1}return!0},hasClosedEndpointIntersection:function(t){for(var e=new rt,n=t.getEdgeIterator();n.hasNext();){var i=n.next(),r=(i.getMaximumSegmentIndex(),i.isClosed()),s=i.getCoordinate(0);this.addEndpoint(e,s,r);var o=i.getCoordinate(i.getNumPoints()-1);this.addEndpoint(e,o,r)}for(var n=e.values().iterator();n.hasNext();){var a=n.next();if(a.isClosed&&2!==a.degree)return this.nonSimpleLocation=a.getCoordinate(),!0}return!1},getNonSimpleLocation:function(){return this.nonSimpleLocation},isSimpleLinearGeometry:function(t){if(t.isEmpty())return!0;var e=new $n(0,t),n=new ae,i=e.computeSelfNodes(n,!0);return i.hasIntersection()?i.hasProperIntersection()?(this.nonSimpleLocation=i.getProperIntersectionPoint(),!1):this.hasNonEndpointIntersection(e)?!1:!this.isClosedEndpointsInInterior||!this.hasClosedEndpointIntersection(e):!0},hasNonEndpointIntersection:function(t){for(var e=t.getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getMaximumSegmentIndex(),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next();if(!s.isEndPoint(i))return this.nonSimpleLocation=s.getCoordinate(),!0}return!1},addEndpoint:function(t,e,n){var i=t.get(e);null===i&&(i=new qi(e),t.put(e,i)),i.addEndpoint(n)},computeSimple:function(t){return this.nonSimpleLocation=null,t.isEmpty()?!0:t instanceof St?this.isSimpleLinearGeometry(t):t instanceof gt?this.isSimpleLinearGeometry(t):t instanceof Pt?this.isSimpleMultiPoint(t):R(t,Rt)?this.isSimplePolygonal(t):t instanceof ft?this.isSimpleGeometryCollection(t):!0},isSimple:function(){return this.nonSimpleLocation=null,this.computeSimple(this.inputGeom)},isSimpleGeometryCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.computeSimple(n))return!1}return!0},interfaces_:function(){return[]},getClass:function(){return Gi}}),e(qi.prototype,{addEndpoint:function(t){this.degree++,this.isClosed|=t},getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return qi}}),Gi.EndpointInfo=qi,e(Bi.prototype,{getEndCapStyle:function(){return this.endCapStyle},isSingleSided:function(){return this._isSingleSided},setQuadrantSegments:function(t){this.quadrantSegments=t,0===this.quadrantSegments&&(this.joinStyle=Bi.JOIN_BEVEL),this.quadrantSegments<0&&(this.joinStyle=Bi.JOIN_MITRE,this.mitreLimit=Math.abs(this.quadrantSegments)),0>=t&&(this.quadrantSegments=1),this.joinStyle!==Bi.JOIN_ROUND&&(this.quadrantSegments=Bi.DEFAULT_QUADRANT_SEGMENTS)},getJoinStyle:function(){return this.joinStyle},setJoinStyle:function(t){this.joinStyle=t},setSimplifyFactor:function(t){this.simplifyFactor=0>t?0:t},getSimplifyFactor:function(){return this.simplifyFactor},getQuadrantSegments:function(){return this.quadrantSegments},setEndCapStyle:function(t){this.endCapStyle=t},getMitreLimit:function(){return this.mitreLimit},setMitreLimit:function(t){this.mitreLimit=t},setSingleSided:function(t){this._isSingleSided=t},interfaces_:function(){return[]},getClass:function(){return Bi}}),Bi.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Bi.CAP_ROUND=1,Bi.CAP_FLAT=2,Bi.CAP_SQUARE=3,Bi.JOIN_ROUND=1,Bi.JOIN_MITRE=2,Bi.JOIN_BEVEL=3,Bi.DEFAULT_QUADRANT_SEGMENTS=8,Bi.DEFAULT_MITRE_LIMIT=5,Bi.DEFAULT_SIMPLIFY_FACTOR=.01,e(zi.prototype,{getCoordinate:function(){return this.minCoord},getRightmostSide:function(t,e){var n=this.getRightmostSideOfSegment(t,e);return 0>n&&(n=this.getRightmostSideOfSegment(t,e-1)),0>n&&(this.minCoord=null,this.checkForRightmostCoordinate(t)),n},findRightmostEdgeAtVertex:function(){var t=this.minDe.getEdge().getCoordinates();f.isTrue(this.minIndex>0&&this.minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this.minIndex-1],n=t[this.minIndex+1],i=he.computeOrientation(this.minCoord,n,e),r=!1;e.y<this.minCoord.y&&n.y<this.minCoord.y&&i===he.COUNTERCLOCKWISE?r=!0:e.y>this.minCoord.y&&n.y>this.minCoord.y&&i===he.CLOCKWISE&&(r=!0),r&&(this.minIndex=this.minIndex-1)},getRightmostSideOfSegment:function(t,e){var n=t.getEdge(),i=n.getCoordinates();if(0>e||e+1>=i.length)return-1;if(i[e].y===i[e+1].y)return-1;var r=cn.LEFT;return i[e].y<i[e+1].y&&(r=cn.RIGHT),r},getEdge:function(){return this.orientedDe},checkForRightmostCoordinate:function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this.minCoord||e[n].x>this.minCoord.x)&&(this.minDe=t,this.minIndex=n,this.minCoord=e[n])},findRightmostEdgeAtNode:function(){var t=this.minDe.getNode(),e=t.getEdges();this.minDe=e.getRightmostEdge(),this.minDe.isForward()||(this.minDe=this.minDe.getSym(),this.minIndex=this.minDe.getEdge().getCoordinates().length-1)},findEdge:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}f.isTrue(0!==this.minIndex||this.minCoord.equals(this.minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this.minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this.orientedDe=this.minDe;var i=this.getRightmostSide(this.minDe,this.minIndex);i===cn.LEFT&&(this.orientedDe=this.minDe.getSym())},interfaces_:function(){return[]},getClass:function(){return zi}}),Vi.prototype.addLast=function(t){this.array_.push(t)},Vi.prototype.removeFirst=function(){return this.array_.shift()},Vi.prototype.isEmpty=function(){return 0===this.array_.length},e(ki.prototype,{clearVisitedEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.setVisited(!1)}},getRightmostCoordinate:function(){return this.rightMostCoord},computeNodeDepth:function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new sn(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();i.setVisited(!0),this.copySymDepths(i)}},computeDepth:function(t){this.clearVisitedEdges();var e=this.finder.getEdge();e.getNode(),e.getLabel();e.setEdgeDepths(cn.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},create:function(t){this.addReachable(t),this.finder.findEdge(this.dirEdgeList),this.rightMostCoord=this.finder.getCoordinate()},findResultEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(cn.RIGHT)>=1&&e.getDepth(cn.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},computeDepths:function(t){var e=new J,n=new Vi,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var s=r.getEdges().iterator();s.hasNext();){var o=s.next(),a=o.getSym();if(!a.isVisited()){var u=a.getNode();e.contains(u)||(n.addLast(u),e.add(u))}}}},compareTo:function(t){var e=t;return this.rightMostCoord.x<e.rightMostCoord.x?-1:this.rightMostCoord.x>e.rightMostCoord.x?1:0},getEnvelope:function(){if(null===this.env){for(var t=new C,e=this.dirEdgeList.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge().getCoordinates(),r=0;r<i.length-1;r++)t.expandToInclude(i[r]);this.env=t}return this.env},addReachable:function(t){var e=new pe;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},copySymDepths:function(t){var e=t.getSym();e.setDepth(cn.LEFT,t.getDepth(cn.RIGHT)),e.setDepth(cn.RIGHT,t.getDepth(cn.LEFT))},add:function(t,e){t.setVisited(!0),this.nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this.dirEdgeList.add(i);var r=i.getSym(),s=r.getNode();s.isVisited()||e.push(s)}},getNodes:function(){return this.nodes},getDirectedEdges:function(){return this.dirEdgeList},interfaces_:function(){return[s]},getClass:function(){return ki}}),e(Yi.prototype,{isDeletable:function(t,e,n,i){var r=this.inputLine[t],s=this.inputLine[e],o=this.inputLine[n];return this.isConcave(r,s,o)&&this.isShallow(r,s,o,i)?this.isShallowSampled(r,s,t,n,i):!1},deleteShallowConcavities:function(){for(var t=1,e=(this.inputLine.length-1,this.findNextNonDeletedIndex(t)),n=this.findNextNonDeletedIndex(e),i=!1;n<this.inputLine.length;){var r=!1;this.isDeletable(t,e,n,this.distanceTol)&&(this.isDeleted[e]=Yi.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},isShallowConcavity:function(t,e,n,i){var r=he.computeOrientation(t,e,n),s=r===this.angleOrientation;if(!s)return!1;var o=he.distancePointLine(e,t,n);return i>o},isShallowSampled:function(t,e,n,i,r){var s=Math.trunc((i-n)/Yi.NUM_PTS_TO_CHECK);0>=s&&(s=1);for(var o=n;i>o;o+=s)if(!this.isShallow(t,e,this.inputLine[o],r))return!1;return!0},isConcave:function t(e,n,i){var r=he.computeOrientation(e,n,i),t=r===this.angleOrientation;return t},simplify:function(t){this.distanceTol=Math.abs(t),0>t&&(this.angleOrientation=he.CLOCKWISE),this.isDeleted=new Array(this.inputLine.length).fill(null);var e=!1;do e=this.deleteShallowConcavities();while(e);return this.collapseLine()},findNextNonDeletedIndex:function(t){for(var e=t+1;e<this.inputLine.length&&this.isDeleted[e]===Yi.DELETE;)e++;return e},isShallow:function(t,e,n,i){var r=he.distancePointLine(e,t,n);return i>r},collapseLine:function(){for(var t=new N,e=0;e<this.inputLine.length;e++)this.isDeleted[e]!==Yi.DELETE&&t.add(this.inputLine[e]);return t.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return Yi}}),Yi.simplify=function(t,e){var n=new Yi(t);return n.simplify(e)},Yi.INIT=0,Yi.DELETE=1,Yi.KEEP=1,Yi.NUM_PTS_TO_CHECK=10,e(Ui.prototype,{getCoordinates:function(){var t=this.ptList.toArray(Ui.COORDINATE_ARRAY_TYPE);return t},setPrecisionModel:function(t){this.precisionModel=t},addPt:function(t){var e=new g(t);return this.precisionModel.makePrecise(e),this.isRedundant(e)?null:void this.ptList.add(e)},reverse:function(){},addPts:function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var n=t.length-1;n>=0;n--)this.addPt(t[n])},isRedundant:function(t){if(this.ptList.size()<1)return!1;var e=this.ptList.get(this.ptList.size()-1),n=t.distance(e);return n<this.minimimVertexDistance},toString:function(){var t=new ie,e=t.createLineString(this.getCoordinates());return e.toString()},closeRing:function(){if(this.ptList.size()<1)return null;var t=new g(this.ptList.get(0)),e=this.ptList.get(this.ptList.size()-1),n=null;return this.ptList.size()>=2&&(n=this.ptList.get(this.ptList.size()-2)),t.equals(e)?null:void this.ptList.add(t)},setMinimumVertexDistance:function(t){this.minimimVertexDistance=t},interfaces_:function(){return[]},getClass:function(){return Ui}}),Ui.COORDINATE_ARRAY_TYPE=new Array(0).fill(null),e(Xi.prototype,{addNextSegment:function(t,e){if(this.s0=this.s1,this.s1=this.s2,this.s2=t,this.seg0.setCoordinates(this.s0,this.s1),this.computeOffsetSegment(this.seg0,this.side,this.distance,this.offset0),this.seg1.setCoordinates(this.s1,this.s2),this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1),this.s1.equals(this.s2))return null;var n=he.computeOrientation(this.s0,this.s1,this.s2),i=n===he.CLOCKWISE&&this.side===cn.LEFT||n===he.COUNTERCLOCKWISE&&this.side===cn.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},addLineEndCap:function(t,e){var n=new ce(t,e),i=new ce;this.computeOffsetSegment(n,cn.LEFT,this.distance,i);var r=new ce;this.computeOffsetSegment(n,cn.RIGHT,this.distance,r);var s=e.x-t.x,o=e.y-t.y,a=Math.atan2(o,s);switch(this.bufParams.getEndCapStyle()){case Bi.CAP_ROUND:this.segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,he.CLOCKWISE,this.distance),this.segList.addPt(r.p1);break;case Bi.CAP_FLAT:this.segList.addPt(i.p1),this.segList.addPt(r.p1);break;case Bi.CAP_SQUARE:var u=new g;u.x=Math.abs(this.distance)*Math.cos(a),u.y=Math.abs(this.distance)*Math.sin(a);var l=new g(i.p1.x+u.x,i.p1.y+u.y),h=new g(r.p1.x+u.x,r.p1.y+u.y);this.segList.addPt(l),this.segList.addPt(h)}},getCoordinates:function(){var t=this.segList.getCoordinates();return t},addMitreJoin:function(t,e,n,i){var r=!0,s=null;try{s=F.intersection(e.p0,e.p1,n.p0,n.p1);var o=0>=i?1:s.distance(t)/Math.abs(i);o>this.bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof w))throw t;s=new g(0,0),r=!1}finally{}r?this.segList.addPt(s):this.addLimitedMitreJoin(e,n,i,this.bufParams.getMitreLimit())},addFilletCorner:function(t,e,n,i,r){var s=e.x-t.x,o=e.y-t.y,a=Math.atan2(o,s),u=n.x-t.x,l=n.y-t.y,h=Math.atan2(l,u);i===he.CLOCKWISE?h>=a&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this.segList.addPt(e),this.addFilletArc(t,a,h,i,r),this.segList.addPt(n)},addOutsideTurn:function(t,e){return this.offset0.p1.distance(this.offset1.p0)<this.distance*Xi.OFFSET_SEGMENT_SEPARATION_FACTOR?(this.segList.addPt(this.offset0.p1),null):void(this.bufParams.getJoinStyle()===Bi.JOIN_MITRE?this.addMitreJoin(this.s1,this.offset0,this.offset1,this.distance):this.bufParams.getJoinStyle()===Bi.JOIN_BEVEL?this.addBevelJoin(this.offset0,this.offset1):(e&&this.segList.addPt(this.offset0.p1),this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,t,this.distance),this.segList.addPt(this.offset1.p0)))},createSquare:function(t){this.segList.addPt(new g(t.x+this.distance,t.y+this.distance)),this.segList.addPt(new g(t.x+this.distance,t.y-this.distance)),this.segList.addPt(new g(t.x-this.distance,t.y-this.distance)),this.segList.addPt(new g(t.x-this.distance,t.y+this.distance)),this.segList.closeRing()},addSegments:function(t,e){this.segList.addPts(t,e)},addFirstSegment:function(){this.segList.addPt(this.offset1.p0)},addLastSegment:function(){this.segList.addPt(this.offset1.p1)},initSideSegments:function(t,e,n){this.s1=t,this.s2=e,this.side=n,this.seg1.setCoordinates(t,e),this.computeOffsetSegment(this.seg1,n,this.distance,this.offset1)},addLimitedMitreJoin:function(t,e,n,i){var r=this.seg0.p1,s=hi.angle(r,this.seg0.p0),o=(hi.angle(r,this.seg1.p1),hi.angleBetweenOriented(this.seg0.p0,r,this.seg1.p1)),a=o/2,u=hi.normalize(s+a),l=hi.normalize(u+Math.PI),h=i*n,c=h*Math.abs(Math.sin(a)),f=n-c,d=r.x+h*Math.cos(l),p=r.y+h*Math.sin(l),v=new g(d,p),m=new ce(r,v),y=m.pointAlongOffset(1,f),x=m.pointAlongOffset(1,-f);this.side===cn.LEFT?(this.segList.addPt(y),this.segList.addPt(x)):(this.segList.addPt(x),this.segList.addPt(y))},computeOffsetSegment:function(t,e,n,i){var r=e===cn.LEFT?1:-1,s=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,a=Math.sqrt(s*s+o*o),u=r*n*s/a,l=r*n*o/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},addFilletArc:function(t,e,n,i,r){var s=i===he.CLOCKWISE?-1:1,o=Math.abs(e-n),a=Math.trunc(o/this.filletAngleQuantum+.5);if(1>a)return null;var u=null,l=null;u=0,l=o/a;for(var h=u,c=new g;o>h;){var f=e+s*h;c.x=t.x+r*Math.cos(f),c.y=t.y+r*Math.sin(f),this.segList.addPt(c),h+=l}},addInsideTurn:function(t,e){if(this.li.computeIntersection(this.offset0.p0,this.offset0.p1,this.offset1.p0,this.offset1.p1),this.li.hasIntersection())this.segList.addPt(this.li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this.offset0.p1.distance(this.offset1.p0)<this.distance*Xi.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this.segList.addPt(this.offset0.p1);else{if(this.segList.addPt(this.offset0.p1),this.closingSegLengthFactor>0){var n=new g((this.closingSegLengthFactor*this.offset0.p1.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset0.p1.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(n);var i=new g((this.closingSegLengthFactor*this.offset1.p0.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset1.p0.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(i)}else this.segList.addPt(this.s1);this.segList.addPt(this.offset1.p0)}},createCircle:function(t){var e=new g(t.x+this.distance,t.y);this.segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this.distance),this.segList.closeRing()},addBevelJoin:function(t,e){this.segList.addPt(t.p1),this.segList.addPt(e.p0)},init:function(t){this.distance=t,this.maxCurveSegmentError=t*(1-Math.cos(this.filletAngleQuantum/2)),this.segList=new Ui,this.segList.setPrecisionModel(this.precisionModel),this.segList.setMinimumVertexDistance(t*Xi.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},addCollinear:function(t){this.li.computeIntersection(this.s0,this.s1,this.s1,this.s2);var e=this.li.getIntersectionNum();e>=2&&(this.bufParams.getJoinStyle()===Bi.JOIN_BEVEL||this.bufParams.getJoinStyle()===Bi.JOIN_MITRE?(t&&this.segList.addPt(this.offset0.p1),this.segList.addPt(this.offset1.p0)):this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,he.CLOCKWISE,this.distance))},closeRing:function(){this.segList.closeRing()},hasNarrowConcaveAngle:function(){return this._hasNarrowConcaveAngle},interfaces_:function(){return[]},getClass:function(){return Xi}}),Xi.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,Xi.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,Xi.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,Xi.MAX_CLOSING_SEG_LEN_FACTOR=80,e(Hi.prototype,{getOffsetCurve:function(t,e){if(this.distance=e,0===e)return null;var n=0>e,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var s=r.getCoordinates();return n&&H.reverse(s),s},computeSingleSidedBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){n.addSegments(t,!0);var r=Yi.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],cn.LEFT),n.addFirstSegment();for(var o=s-2;o>=0;o--)n.addNextSegment(r[o],!0)}else{n.addSegments(t,!1);var a=Yi.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],cn.LEFT),n.addFirstSegment();for(var o=2;u>=o;o++)n.addNextSegment(a[o],!0)}n.addLastSegment(),n.closeRing()},computeRingBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);e===cn.RIGHT&&(i=-i);var r=Yi.simplify(t,i),s=r.length-1;n.initSideSegments(r[s-1],r[0],e);for(var o=1;s>=o;o++){var a=1!==o;n.addNextSegment(r[o],a)}n.closeRing()},computeLineBufferCurve:function(t,e){var n=this.simplifyTolerance(this.distance),i=Yi.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],cn.LEFT);for(var s=2;r>=s;s++)e.addNextSegment(i[s],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var o=Yi.simplify(t,-n),a=o.length-1;e.initSideSegments(o[a],o[a-1],cn.LEFT);for(var s=a-2;s>=0;s--)e.addNextSegment(o[s],!0);e.addLastSegment(),e.addLineEndCap(o[1],o[0]),e.closeRing()},computePointCurve:function(t,e){switch(this.bufParams.getEndCapStyle()){case Bi.CAP_ROUND:e.createCircle(t);break;case Bi.CAP_SQUARE:e.createSquare(t)}},getLineCurve:function(t,e){if(this.distance=e,0>e&&!this.bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this.bufParams.isSingleSided()){var r=0>e;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);var s=i.getCoordinates();return s},getBufferParameters:function(){return this.bufParams},simplifyTolerance:function(t){return t*this.bufParams.getSimplifyFactor()},getRingCurve:function(t,e,n){if(this.distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Hi.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},computeOffsetCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){var r=Yi.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],cn.LEFT),n.addFirstSegment();for(var o=s-2;o>=0;o--)n.addNextSegment(r[o],!0)}else{var a=Yi.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],cn.LEFT),n.addFirstSegment();for(var o=2;u>=o;o++)n.addNextSegment(a[o],!0)}n.addLastSegment()},getSegGen:function(t){return new Xi(this.precisionModel,this.bufParams,t)},interfaces_:function(){return[]},getClass:function(){return Hi}}),Hi.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new g(t[n]);return e},e(Wi.prototype,{findStabbedSegments:function(){if(1===arguments.length){for(var t=arguments[0],e=new I,n=this.subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(R(arguments[2],y)&&arguments[0]instanceof g&&arguments[1]instanceof In)for(var s=arguments[0],o=arguments[1],a=arguments[2],u=o.getEdge().getCoordinates(),n=0;n<u.length-1;n++){this.seg.p0=u[n],this.seg.p1=u[n+1],this.seg.p0.y>this.seg.p1.y&&this.seg.reverse();var l=Math.max(this.seg.p0.x,this.seg.p1.x);if(!(l<s.x||this.seg.isHorizontal()||s.y<this.seg.p0.y||s.y>this.seg.p1.y||he.computeOrientation(this.seg.p0,this.seg.p1,s)===he.RIGHT)){var h=o.getDepth(cn.LEFT);this.seg.p0.equals(u[n])||(h=o.getDepth(cn.RIGHT));var c=new ji(this.seg,h);a.add(c)}}else if(R(arguments[2],y)&&arguments[0]instanceof g&&R(arguments[1],y))for(var f=arguments[0],d=arguments[1],p=arguments[2],n=d.iterator();n.hasNext();){var v=n.next();v.isForward()&&this.findStabbedSegments(f,v,p)}},getDepth:function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;var n=ho.min(e);return n.leftDepth},interfaces_:function(){return[]},getClass:function(){return Wi}}),e(ji.prototype,{compareTo:function(t){var e=t;if(this.upwardSeg.minX()>=e.upwardSeg.maxX())return 1;if(this.upwardSeg.maxX()<=e.upwardSeg.minX())return-1;var n=this.upwardSeg.orientationIndex(e.upwardSeg);return 0!==n?n:(n=-1*e.upwardSeg.orientationIndex(this.upwardSeg),0!==n?n:this.upwardSeg.compareTo(e.upwardSeg))},compareX:function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},toString:function(){return this.upwardSeg.toString()},interfaces_:function(){return[s]},getClass:function(){return ji}}),Wi.DepthSegment=ji,e(Ki.prototype,{addPoint:function(t){if(this.distance<=0)return null;\nvar e=t.getCoordinates(),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,L.EXTERIOR,L.INTERIOR)},addPolygon:function(t){var e=this.distance,n=cn.LEFT;this.distance<0&&(e=-this.distance,n=cn.RIGHT);var i=t.getExteriorRing(),r=H.removeRepeatedPoints(i.getCoordinates());if(this.distance<0&&this.isErodedCompletely(i,this.distance))return null;if(this.distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,L.EXTERIOR,L.INTERIOR);for(var s=0;s<t.getNumInteriorRing();s++){var o=t.getInteriorRingN(s),a=H.removeRepeatedPoints(o.getCoordinates());this.distance>0&&this.isErodedCompletely(o,-this.distance)||this.addPolygonRing(a,e,cn.opposite(n),L.INTERIOR,L.EXTERIOR)}},isTriangleErodedCompletely:function(t,e){var n=new ci(t[0],t[1],t[2]),i=n.inCentre(),r=he.distancePointLine(i,n.p0,n.p1);return r<Math.abs(e)},addLineString:function(t){if(this.distance<=0&&!this.curveBuilder.getBufferParameters().isSingleSided())return null;var e=H.removeRepeatedPoints(t.getCoordinates()),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,L.EXTERIOR,L.INTERIOR)},addCurve:function(t,e,n){if(null===t||t.length<2)return null;var i=new Ke(t,new gn(0,L.BOUNDARY,e,n));this.curveList.add(i)},getCurves:function(){return this.add(this.inputGeom),this.curveList},addPolygonRing:function(t,e,n,i,r){if(0===e&&t.length<bt.MINIMUM_VALID_SIZE)return null;var s=i,o=r;t.length>=bt.MINIMUM_VALID_SIZE&&he.isCCW(t)&&(s=r,o=i,n=cn.opposite(n));var a=this.curveBuilder.getRingCurve(t,n,e);this.addCurve(a,s,o)},add:function(t){if(t.isEmpty())return null;if(t instanceof Tt)this.addPolygon(t);else if(t instanceof St)this.addLineString(t);else if(t instanceof Lt)this.addPoint(t);else if(t instanceof Pt)this.addCollection(t);else if(t instanceof gt)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else{if(!(t instanceof ft))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},isErodedCompletely:function(t,e){var n=t.getCoordinates();if(n.length<4)return 0>e;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return 0>e&&2*Math.abs(e)>r},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},interfaces_:function(){return[]},getClass:function(){return Ki}}),e(Zi.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(Zi.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},hasProperInteriorIntersection:function(){return this.hasProperInterior},getLineIntersector:function(){return this.li},hasProperIntersection:function(){return this.hasProper},processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&(this.numIntersections++,this.li.isInteriorIntersection()&&(this.numInteriorIntersections++,this.hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1),this.li.isProper()&&(this.numProperIntersections++,this.hasProper=!0,this.hasProperInterior=!0)))},hasIntersection:function(){return this._hasIntersection},isDone:function(){return!1},hasInteriorIntersection:function(){return this.hasInterior},interfaces_:function(){return[on]},getClass:function(){return Zi}}),Zi.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},e(Qi.prototype,{setWorkingPrecisionModel:function(t){this.workingPrecisionModel=t},insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new gn(t.getLabel()),i.flip()),n.merge(i);var r=Qi.depthDelta(i),s=e.getDepthDelta(),o=s+r;e.setDepthDelta(o)}else this.edgeList.add(t),t.setDepthDelta(Qi.depthDelta(t.getLabel()))},buildSubgraphs:function(t,e){for(var n=new I,i=t.iterator();i.hasNext();){var r=i.next(),s=r.getRightmostCoordinate(),o=new Wi(n),a=o.getDepth(s);r.computeDepth(a),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},createSubgraphs:function(t){for(var e=new I,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new ki;r.create(i),e.add(r)}}return ho.sort(e,ho.reverseOrder()),e},createEmptyResultGeometry:function(){var t=this.geomFact.createPolygon();return t},getNoder:function(t){if(null!==this.workingNoder)return this.workingNoder;var e=new nn,n=new ae;return n.setPrecisionModel(t),e.setSegmentIntersector(new Zi(n)),e},buffer:function(t,e){var n=this.workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this.geomFact=t.getFactory();var i=new Hi(n,this.bufParams),r=new Ki(t,e,i),s=r.getCurves();if(s.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(s,n),this.graph=new Cn(new On),this.graph.addEdges(this.edgeList.getEdges());var o=this.createSubgraphs(this.graph),a=new Sn(this.geomFact);this.buildSubgraphs(o,a);var u=a.getPolygons();if(u.size()<=0)return this.createEmptyResultGeometry();var l=this.geomFact.buildGeometry(u);return l},computeNodedEdges:function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings(),r=i.iterator();r.hasNext();){var s=r.next(),o=s.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var a=s.getData(),u=new Jn(s.getCoordinates(),new gn(a));this.insertUniqueEdge(u)}}},setNoder:function(t){this.workingNoder=t},interfaces_:function(){return[]},getClass:function(){return Qi}}),Qi.depthDelta=function(t){var e=t.getLocation(0,cn.LEFT),n=t.getLocation(0,cn.RIGHT);return e===L.INTERIOR&&n===L.EXTERIOR?1:e===L.EXTERIOR&&n===L.INTERIOR?-1:0},Qi.convertSegStrings=function(t){for(var e=new ie,n=new I;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)},e(Ji.prototype,{checkEndPtVertexIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next(),n=e.getCoordinates();this.checkEndPtVertexIntersections(n[0],this.segStrings),this.checkEndPtVertexIntersections(n[n.length-1],this.segStrings)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],t=r.iterator();t.hasNext();)for(var e=t.next(),n=e.getCoordinates(),s=1;s<n.length-1;s++)if(n[s].equals(i))throw new l(\"found endpt/interior pt intersection at index \"+s+\" :pt \"+i)},checkInteriorIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this.segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],s=arguments[1],o=r.getCoordinates(),a=s.getCoordinates(),u=0;u<o.length-1;u++)for(var h=0;h<a.length-1;h++)this.checkInteriorIntersections(r,u,s,h);else if(4===arguments.length){var c=arguments[0],f=arguments[1],g=arguments[2],d=arguments[3];if(c===g&&f===d)return null;var p=c.getCoordinates()[f],v=c.getCoordinates()[f+1],m=g.getCoordinates()[d],y=g.getCoordinates()[d+1];if(this.li.computeIntersection(p,v,m,y),this.li.hasIntersection()&&(this.li.isProper()||this.hasInteriorIntersection(this.li,p,v)||this.hasInteriorIntersection(this.li,m,y)))throw new l(\"found non-noded intersection at \"+p+\"-\"+v+\" and \"+m+\"-\"+y)}},checkValid:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},checkCollapses:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0],i=n.getCoordinates(),t=0;t<i.length-2;t++)this.checkCollapse(i[t],i[t+1],i[t+2])},hasInteriorIntersection:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},checkCollapse:function(t,e,n){if(t.equals(n))throw new l(\"found non-noded collapse at \"+Ji.fact.createLineString([t,e,n]))},interfaces_:function(){return[]},getClass:function(){return Ji}}),Ji.fact=new ie,e($i.prototype,{intersectsScaled:function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),s=Math.max(t.y,e.y),o=this.maxx<n||this.minx>i||this.maxy<r||this.miny>s;if(o)return!1;var a=this.intersectsToleranceSquare(t,e);return f.isTrue(!(o&&a),\"Found bad envelope test\"),a},initCorners:function(t){var e=.5;this.minx=t.x-e,this.maxx=t.x+e,this.miny=t.y-e,this.maxy=t.y+e,this.corner[0]=new g(this.maxx,this.maxy),this.corner[1]=new g(this.minx,this.maxy),this.corner[2]=new g(this.minx,this.miny),this.corner[3]=new g(this.maxx,this.miny)},intersects:function(t,e){return 1===this.scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this.p0Scaled),this.copyScaled(e,this.p1Scaled),this.intersectsScaled(this.p0Scaled,this.p1Scaled))},scale:function(t){return Math.round(t*this.scaleFactor)},getCoordinate:function(){return this.originalPt},copyScaled:function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},getSafeEnvelope:function(){if(null===this.safeEnv){var t=$i.SAFE_ENV_EXPANSION_FACTOR/this.scaleFactor;this.safeEnv=new C(this.originalPt.x-t,this.originalPt.x+t,this.originalPt.y-t,this.originalPt.y+t)}return this.safeEnv},intersectsPixelClosure:function(t,e){return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),!!this.li.hasIntersection())))},intersectsToleranceSquare:function(t,e){var n=!1,i=!1;return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),this.li.isProper()?!0:(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),this.li.isProper()?!0:(this.li.hasIntersection()&&(n=!0),this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),this.li.isProper()?!0:(this.li.hasIntersection()&&(i=!0),this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),this.li.isProper()?!0:n&&i?!0:t.equals(this.pt)?!0:!!e.equals(this.pt))))},addSnappedNode:function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return this.intersects(n,i)?(t.addIntersection(this.getCoordinate(),e),!0):!1},interfaces_:function(){return[]},getClass:function(){return $i}}),$i.SAFE_ENV_EXPANSION_FACTOR=.75,e(tr.prototype,{select:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},interfaces_:function(){return[]},getClass:function(){return tr}}),e(er.prototype,{snap:function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),s=new nr(e,n,i);return this.index.query(r,{interfaces_:function(){return[Ae]},visitItem:function(t){var e=t;e.select(r,s)}}),s.isNodeAdded()}},interfaces_:function(){return[]},getClass:function(){return er}}),h(nr,tr),e(nr.prototype,{isNodeAdded:function(){return this._isNodeAdded},select:function(){if(2!==arguments.length)return tr.prototype.select.apply(this,arguments);var t=arguments[0],e=arguments[1],n=t.getContext();return null!==this.parentEdge&&n===this.parentEdge&&e===this.hotPixelVertexIndex?null:void(this._isNodeAdded=this.hotPixel.addSnappedNode(n,e))},interfaces_:function(){return[]},getClass:function(){return nr}}),er.HotPixelSnapAction=nr,e(ir.prototype,{processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&this.li.isInteriorIntersection()){for(var u=0;u<this.li.getIntersectionNum();u++)this.interiorIntersections.add(this.li.getIntersection(u));t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)}},isDone:function(){return!1},getInteriorIntersections:function(){return this.interiorIntersections},interfaces_:function(){return[on]},getClass:function(){return ir}}),e(rr.prototype,{checkCorrectness:function(t){var e=Ke.getNodedSubstrings(t),n=new Ji(e);try{n.checkValid()}catch(t){if(!(t instanceof S))throw t;t.printStackTrace()}finally{}},getNodedSubstrings:function(){return Ke.getNodedSubstrings(this.nodedSegStrings)},snapRound:function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},findInteriorIntersections:function(t,e){var n=new ir(e);return this.noder.setSegmentIntersector(n),this.noder.computeNodes(t),n.getInteriorIntersections()},computeVertexSnaps:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.computeVertexSnaps(n)}else if(arguments[0]instanceof Ke)for(var i=arguments[0],r=i.getCoordinates(),s=0;s<r.length;s++){var o=new $i(r[s],this.scaleFactor,this.li),a=this.pointSnapper.snap(o,i,s);a&&i.addIntersection(r[s],s)}},computeNodes:function(t){this.nodedSegStrings=t,this.noder=new nn,this.pointSnapper=new er(this.noder.getIndex()),this.snapRound(t,this.li)},computeIntersectionSnaps:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new $i(n,this.scaleFactor,this.li);this.pointSnapper.snap(i)}},interfaces_:function(){return[tn]},getClass:function(){return rr}}),e(sr.prototype,{bufferFixedPrecision:function(t){var e=new Fi(new rr(new ee(1)),t.getScale()),n=new Qi(this.bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this.resultGeometry=n.buffer(this.argGeom,this.distance)},bufferReducedPrecision:function(){if(0===arguments.length){for(var t=sr.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof sn))throw t;this.saveException=t}finally{}if(null!==this.resultGeometry)return null}throw this.saveException}if(1===arguments.length){var e=arguments[0],n=sr.precisionScaleFactor(this.argGeom,this.distance,e),i=new ee(n);this.bufferFixedPrecision(i)}},computeGeometry:function(){if(this.bufferOriginalPrecision(),null!==this.resultGeometry)return null;var t=this.argGeom.getFactory().getPrecisionModel();t.getType()===ee.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},setQuadrantSegments:function(t){this.bufParams.setQuadrantSegments(t)},bufferOriginalPrecision:function(){try{var t=new Qi(this.bufParams);this.resultGeometry=t.buffer(this.argGeom,this.distance)}catch(t){if(!(t instanceof l))throw t;this.saveException=t}finally{}},getResultGeometry:function(t){return this.distance=t,this.computeGeometry(),this.resultGeometry},setEndCapStyle:function(t){this.bufParams.setEndCapStyle(t)},interfaces_:function(){return[]},getClass:function(){return sr}}),sr.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new sr(t),i=n.getResultGeometry(e);return i}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof B&&\"number\"==typeof arguments[1]){var r=arguments[0],s=arguments[1],o=arguments[2],a=new sr(r);a.setQuadrantSegments(o);var i=a.getResultGeometry(s);return i}if(arguments[2]instanceof Bi&&arguments[0]instanceof B&&\"number\"==typeof arguments[1]){var u=arguments[0],l=arguments[1],h=arguments[2],a=new sr(u,h),i=a.getResultGeometry(l);return i}}else if(4===arguments.length){var c=arguments[0],f=arguments[1],g=arguments[2],d=arguments[3],a=new sr(c);a.setQuadrantSegments(g),a.setEndCapStyle(d);var i=a.getResultGeometry(f);return i}},sr.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=T.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY())),s=e>0?e:0,o=r+2*s,a=Math.trunc(Math.log(o)/Math.log(10)+1),u=n-a,l=Math.pow(10,u);return l},sr.CAP_ROUND=Bi.CAP_ROUND,sr.CAP_BUTT=Bi.CAP_FLAT,sr.CAP_FLAT=Bi.CAP_FLAT,sr.CAP_SQUARE=Bi.CAP_SQUARE,sr.MAX_PRECISION_DIGITS=12;var Co=Object.freeze({BufferOp:sr,BufferParameters:Bi});e(or.prototype,{filter:function(t){t instanceof Tt&&this.comps.add(t)},interfaces_:function(){return[ht]},getClass:function(){return or}}),or.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return or.getPolygons(t,new I)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Tt?n.add(e):e instanceof ft&&e.apply(new or(n)),n}},e(ar.prototype,{isInsideArea:function(){return this.segIndex===ar.INSIDE_AREA},getCoordinate:function(){return this.pt},getGeometryComponent:function(){return this.component},getSegmentIndex:function(){return this.segIndex},interfaces_:function(){return[]},getClass:function(){return ar}}),ar.INSIDE_AREA=-1,e(ur.prototype,{filter:function(t){t instanceof Lt&&this.pts.add(t)},interfaces_:function(){return[ht]},getClass:function(){return ur}}),ur.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Lt?ho.singletonList(t):ur.getPoints(t,new I)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Lt?n.add(e):e instanceof ft&&e.apply(new ur(n)),n}},e(lr.prototype,{filter:function(t){(t instanceof Lt||t instanceof St||t instanceof Tt)&&this.locations.add(new ar(t,0,t.getCoordinate()))},interfaces_:function(){return[ht]},getClass:function(){return lr}}),lr.getLocations=function(t){var e=new I;return t.apply(new lr(e)),e},e(hr.prototype,{computeContainmentDistance:function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this.minDistance<=this.terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=or.getPolygons(this.geom[e]);if(r.size()>0){var s=lr.getLocations(this.geom[i]);if(this.computeContainmentDistance(s,r,n),this.minDistance<=this.terminateDistance)return this.minDistanceLocation[i]=n[0],this.minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&R(arguments[0],y)&&R(arguments[1],y)){for(var o=arguments[0],a=arguments[1],u=arguments[2],l=0;l<o.size();l++)for(var h=o.get(l),c=0;c<a.size();c++)if(this.computeContainmentDistance(h,a.get(c),u),this.minDistance<=this.terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof ar&&arguments[1]instanceof Tt){var f=arguments[0],g=arguments[1],d=arguments[2],p=f.getCoordinate();if(L.EXTERIOR!==this.ptLocator.locate(p,g))return this.minDistance=0,d[0]=f,d[1]=new ar(g,p),null}},computeMinDistanceLinesPoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s);if(this.computeMinDistance(r,o,n),this.minDistance<=this.terminateDistance)return null}},computeFacetDistance:function(){var t=new Array(2).fill(null),e=kn.getLines(this.geom[0]),n=kn.getLines(this.geom[1]),i=ur.getPoints(this.geom[0]),r=ur.getPoints(this.geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},nearestLocations:function(){return this.computeMinDistance(),this.minDistanceLocation},updateMinDistance:function(t,e){return null===t[0]?null:void(e?(this.minDistanceLocation[0]=t[1],this.minDistanceLocation[1]=t[0]):(this.minDistanceLocation[0]=t[0],this.minDistanceLocation[1]=t[1]))},nearestPoints:function(){this.computeMinDistance();var t=[this.minDistanceLocation[0].getCoordinate(),this.minDistanceLocation[1].getCoordinate()];return t},computeMinDistance:function(){if(0===arguments.length){if(null!==this.minDistanceLocation)return null;if(this.minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this.minDistance<=this.terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof St&&arguments[1]instanceof Lt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this.minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),s=0;s<i.length-1;s++){var o=he.distancePointLine(r,i[s],i[s+1]);if(o<this.minDistance){this.minDistance=o;var a=new ce(i[s],i[s+1]),u=a.closestPoint(r);n[0]=new ar(t,s,u),n[1]=new ar(e,0,r)}if(this.minDistance<=this.terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof St&&arguments[1]instanceof St){var l=arguments[0],h=arguments[1],c=arguments[2];if(l.getEnvelopeInternal().distance(h.getEnvelopeInternal())>this.minDistance)return null;for(var i=l.getCoordinates(),f=h.getCoordinates(),s=0;s<i.length-1;s++)for(var g=0;g<f.length-1;g++){var o=he.distanceLineLine(i[s],i[s+1],f[g],f[g+1]);if(o<this.minDistance){this.minDistance=o;var d=new ce(i[s],i[s+1]),p=new ce(f[g],f[g+1]),v=d.closestPoints(p);c[0]=new ar(l,s,v[0]),c[1]=new ar(h,g,v[1])}if(this.minDistance<=this.terminateDistance)return null}}},computeMinDistancePoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s),a=r.getCoordinate().distance(o.getCoordinate());if(a<this.minDistance&&(this.minDistance=a,n[0]=new ar(r,0,r.getCoordinate()),n[1]=new ar(o,0,o.getCoordinate())),this.minDistance<=this.terminateDistance)return null}},distance:function(){if(null===this.geom[0]||null===this.geom[1])throw new i(\"null geometries are not supported\");return this.geom[0].isEmpty()||this.geom[1].isEmpty()?0:(this.computeMinDistance(),this.minDistance)},computeMinDistanceLines:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s);if(this.computeMinDistance(r,o,n),this.minDistance<=this.terminateDistance)return null}},interfaces_:function(){return[]},getClass:function(){return hr}}),hr.distance=function(t,e){var n=new hr(t,e);return n.distance()},hr.isWithinDistance=function(t,e,n){var i=new hr(t,e,n);return i.distance()<=n},hr.nearestPoints=function(t,e){var n=new hr(t,e);return n.nearestPoints()};var So=Object.freeze({DistanceOp:hr});e(cr.prototype,{getCoordinates:function(){if(null===this.coordinates){for(var t=0,e=0,n=new N,i=this.directedEdges.iterator();i.hasNext();){var r=i.next();r.getEdgeDirection()?t++:e++,n.add(r.getEdge().getLine().getCoordinates(),!1,r.getEdgeDirection())}this.coordinates=n.toCoordinateArray(),e>t&&H.reverse(this.coordinates)}return this.coordinates},toLineString:function(){return this.factory.createLineString(this.getCoordinates())},add:function(t){this.directedEdges.add(t)},interfaces_:function(){return[]},getClass:function(){return cr}}),e(fr.prototype,{setVisited:function(t){this._isVisited=t},isMarked:function(){return this._isMarked},setData:function(t){this.data=t},getData:function(){return this.data},setMarked:function(t){this._isMarked=t},getContext:function(){return this.data},isVisited:function(){return this._isVisited},setContext:function(t){this.data=t},interfaces_:function(){return[]},getClass:function(){return fr}}),fr.getComponentWithVisitedState=function(t,e){for(;t.hasNext();){var n=t.next();if(n.isVisited()===e)return n}return null},fr.setVisited=function(t,e){for(;t.hasNext();){var n=t.next();n.setVisited(e)}},fr.setMarked=function(t,e){for(;t.hasNext();){var n=t.next();n.setMarked(e)}},h(gr,fr),e(gr.prototype,{isRemoved:function(){return null===this.parentEdge},compareDirection:function(t){return this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:he.computeOrientation(t.p0,t.p1,this.p1)},getCoordinate:function(){return this.from.getCoordinate()},print:function(t){var e=this.getClass().getName(),n=e.lastIndexOf(\".\"),i=e.substring(n+1);t.print(\"  \"+i+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+this.angle)},getDirectionPt:function(){return this.p1},getAngle:function(){return this.angle},compareTo:function(t){var e=t;return this.compareDirection(e)},getFromNode:function(){return this.from},getSym:function(){return this.sym},setEdge:function(t){this.parentEdge=t},remove:function(){this.sym=null,this.parentEdge=null},getEdge:function(){return this.parentEdge},getQuadrant:function(){return this.quadrant},setSym:function(t){this.sym=t},getToNode:function(){return this.to},getEdgeDirection:function(){return this.edgeDirection},interfaces_:function(){return[s]},getClass:function(){return gr}}),gr.toEdges=function(t){for(var e=new I,n=t.iterator();n.hasNext();)e.add(n.next().parentEdge);return e},h(dr,gr),e(dr.prototype,{getNext:function(){return 2!==this.getToNode().getDegree()?null:this.getToNode().getOutEdges().getEdges().get(0)===this.getSym()?this.getToNode().getOutEdges().getEdges().get(1):(f.isTrue(this.getToNode().getOutEdges().getEdges().get(1)===this.getSym()),this.getToNode().getOutEdges().getEdges().get(0))},interfaces_:function(){return[]},getClass:function(){return dr}}),h(pr,fr),e(pr.prototype,{isRemoved:function(){return null===this.dirEdge},setDirectedEdges:function(t,e){this.dirEdge=[t,e],t.setEdge(this),e.setEdge(this),t.setSym(e),e.setSym(t),t.getFromNode().addOutEdge(t),e.getFromNode().addOutEdge(e)},getDirEdge:function(){if(Number.isInteger(arguments[0])){var t=arguments[0];return this.dirEdge[t]}if(arguments[0]instanceof mr){var e=arguments[0];return this.dirEdge[0].getFromNode()===e?this.dirEdge[0]:this.dirEdge[1].getFromNode()===e?this.dirEdge[1]:null}},remove:function(){this.dirEdge=null},getOppositeNode:function(t){return this.dirEdge[0].getFromNode()===t?this.dirEdge[0].getToNode():this.dirEdge[1].getFromNode()===t?this.dirEdge[1].getToNode():null},interfaces_:function(){return[]},getClass:function(){return pr}}),e(vr.prototype,{getNextEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e+1))},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},iterator:function(){return this.sortEdges(),this.outEdges.iterator()},sortEdges:function(){this.sorted||(ho.sort(this.outEdges),this.sorted=!0)},remove:function(t){this.outEdges.remove(t)},getEdges:function(){return this.sortEdges(),this.outEdges},getNextCWEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e-1))},getIndex:function(){if(arguments[0]instanceof pr){var t=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n.getEdge()===t)return e}return-1}if(arguments[0]instanceof gr){var i=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n===i)return e}return-1}if(Number.isInteger(arguments[0])){var r=arguments[0],s=r%this.outEdges.size();return 0>s&&(s+=this.outEdges.size()),s}},add:function(t){this.outEdges.add(t),this.sorted=!1},getDegree:function(){return this.outEdges.size()},interfaces_:function(){return[]},getClass:function(){return vr}}),h(mr,fr),e(mr.prototype,{isRemoved:function(){return null===this.pt},addOutEdge:function(t){this.deStar.add(t)},getCoordinate:function(){return this.pt},getOutEdges:function(){return this.deStar},remove:function(){if(0===arguments.length)this.pt=null;else if(1===arguments.length){var t=arguments[0];this.deStar.remove(t)}},getIndex:function(t){return this.deStar.getIndex(t)},getDegree:function(){return this.deStar.getDegree()},interfaces_:function(){return[]},getClass:function(){return mr}}),mr.getEdgesBetween=function(t,e){var n=gr.toEdges(t.getOutEdges().getEdges()),i=new J(n),r=gr.toEdges(e.getOutEdges().getEdges());return i.retainAll(r),i},h(yr,pr),e(yr.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return yr}}),e(xr.prototype,{find:function(t){return this.nodeMap.get(t)},iterator:function(){return this.nodeMap.values().iterator()},remove:function(t){return this.nodeMap.remove(t)},values:function(){return this.nodeMap.values()},add:function(t){return this.nodeMap.put(t.getCoordinate(),t),t},interfaces_:function(){return[]},getClass:function(){return xr}}),e(Er.prototype,{findNodesOfDegree:function(t){for(var e=new I,n=this.nodeIterator();n.hasNext();){var i=n.next();i.getDegree()===t&&e.add(i)}return e},dirEdgeIterator:function(){return this.dirEdges.iterator()},edgeIterator:function(){return this.edges.iterator()},remove:function(){if(arguments[0]instanceof pr){var t=arguments[0];this.remove(t.getDirEdge(0)),this.remove(t.getDirEdge(1)),this.edges.remove(t),t.remove()}else if(arguments[0]instanceof gr){var e=arguments[0],n=e.getSym();null!==n&&n.setSym(null),e.getFromNode().remove(e),e.remove(),this.dirEdges.remove(e)}else if(arguments[0]instanceof mr){for(var i=arguments[0],r=i.getOutEdges().getEdges(),s=r.iterator();s.hasNext();){var o=s.next(),n=o.getSym();null!==n&&this.remove(n),this.dirEdges.remove(o);var a=o.getEdge();null!==a&&this.edges.remove(a)}this.nodeMap.remove(i.getCoordinate()),i.remove()}},findNode:function(t){return this.nodeMap.find(t)},getEdges:function(){return this.edges},nodeIterator:function(){return this.nodeMap.iterator()},contains:function(){if(arguments[0]instanceof pr){var t=arguments[0];return this.edges.contains(t)}if(arguments[0]instanceof gr){var e=arguments[0];return this.dirEdges.contains(e)}},add:function(){if(arguments[0]instanceof mr){var t=arguments[0];this.nodeMap.add(t)}else if(arguments[0]instanceof pr){var e=arguments[0];this.edges.add(e),this.add(e.getDirEdge(0)),this.add(e.getDirEdge(1))}else if(arguments[0]instanceof gr){var n=arguments[0];this.dirEdges.add(n)}},getNodes:function(){return this.nodeMap.values()},interfaces_:function(){return[]},getClass:function(){return Er}}),h(Ir,Er),e(Ir.prototype,{addEdge:function(t){if(t.isEmpty())return null;var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<=1)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),s=this.getNode(i),o=new dr(r,s,e[1],!0),a=new dr(s,r,e[e.length-2],!1),u=new yr(t);u.setDirectedEdges(o,a),this.add(u)},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new mr(t),this.add(e)),e},interfaces_:function(){return[]},getClass:function(){return Ir}}),e(Nr.prototype,{buildEdgeStringsForUnprocessedNodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.isMarked()||(f.isTrue(2===e.getDegree()),this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForNonDegree2Nodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();2!==e.getDegree()&&(this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForObviousStartNodes:function(){this.buildEdgeStringsForNonDegree2Nodes()},getMergedLineStrings:function(){return this.merge(),this.mergedLineStrings},buildEdgeStringsStartingAt:function(t){for(var e=t.getOutEdges().iterator();e.hasNext();){var n=e.next();n.getEdge().isMarked()||this.edgeStrings.add(this.buildEdgeStringStartingWith(n))}},merge:function(){if(null!==this.mergedLineStrings)return null;fr.setMarked(this.graph.nodeIterator(),!1),fr.setMarked(this.graph.edgeIterator(),!1),this.edgeStrings=new I,this.buildEdgeStringsForObviousStartNodes(),this.buildEdgeStringsForIsolatedLoops(),this.mergedLineStrings=new I;for(var t=this.edgeStrings.iterator();t.hasNext();){var e=t.next();this.mergedLineStrings.add(e.toLineString())}},buildEdgeStringStartingWith:function(t){var e=new cr(this.factory),n=t;do e.add(n),n.getEdge().setMarked(!0),n=n.getNext();while(null!==n&&n!==t);return e},add:function(){if(arguments[0]instanceof B){var t=arguments[0];t.apply({interfaces_:function(){return[q]},filter:function(t){t instanceof St&&this.add(t)}})}else if(R(arguments[0],v)){var e=arguments[0];this.mergedLineStrings=null;for(var n=e.iterator();n.hasNext();){\nvar i=n.next();this.add(i)}}else if(arguments[0]instanceof St){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory()),this.graph.addEdge(r)}},buildEdgeStringsForIsolatedLoops:function(){this.buildEdgeStringsForUnprocessedNodes()},interfaces_:function(){return[]},getClass:function(){return Nr}});var wo=Object.freeze({LineMerger:Nr}),Lo=Object.freeze({OverlayOp:ii});h(Cr,gr),e(Cr.prototype,{getNext:function(){return this.next},isInRing:function(){return null!==this.edgeRing},setRing:function(t){this.edgeRing=t},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setNext:function(t){this.next=t},getRing:function(){return this.edgeRing},interfaces_:function(){return[]},getClass:function(){return Cr}}),h(Sr,pr),e(Sr.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return Sr}}),e(wr.prototype,{isIncluded:function(){return this._isIncluded},getCoordinates:function(){if(null===this.ringPts){for(var t=new N,e=this.deList.iterator();e.hasNext();){var n=e.next(),i=n.getEdge();wr.addEdge(i.getLine().getCoordinates(),n.getEdgeDirection(),t)}this.ringPts=t.toCoordinateArray()}return this.ringPts},isIncludedSet:function(){return this._isIncludedSet},isValid:function(){return this.getCoordinates(),this.ringPts.length<=3?!1:(this.getRing(),this.ring.isValid())},build:function(t){var e=t;do this.add(e),e.setRing(this),e=e.getNext(),f.isTrue(null!==e,\"found null DE in ring\"),f.isTrue(e===t||!e.isInRing(),\"found DE already in ring\");while(e!==t)},isOuterHole:function(){return this._isHole?!this.hasShell():!1},getPolygon:function(){var t=null;if(null!==this.holes){t=new Array(this.holes.size()).fill(null);for(var e=0;e<this.holes.size();e++)t[e]=this.holes.get(e)}var n=this.factory.createPolygon(this.ring,t);return n},isHole:function(){return this._isHole},isProcessed:function(){return this._isProcessed},addHole:function(){if(arguments[0]instanceof bt){var t=arguments[0];null===this.holes&&(this.holes=new I),this.holes.add(t)}else if(arguments[0]instanceof wr){var e=arguments[0];e.setShell(this);var n=e.getRing();null===this.holes&&(this.holes=new I),this.holes.add(n)}},setIncluded:function(t){this._isIncluded=t,this._isIncludedSet=!0},getOuterHole:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing();if(n.isOuterHole())return n}return null},computeHole:function(){var t=this.getRing();this._isHole=he.isCCW(t.getCoordinates())},hasShell:function(){return null!==this.shell},isOuterShell:function(){return null!==this.getOuterHole()},getLineString:function(){return this.getCoordinates(),this.factory.createLineString(this.ringPts)},toString:function(){return se.toLineString(new Gt(this.getCoordinates()))},getShell:function(){return this.isHole()?this.shell:this},add:function(t){this.deList.add(t)},getRing:function(){if(null!==this.ring)return this.ring;this.getCoordinates(),this.ringPts.length<3&&A.out.println(this.ringPts);try{this.ring=this.factory.createLinearRing(this.ringPts)}catch(t){if(!(t instanceof S))throw t;A.out.println(this.ringPts)}finally{}return this.ring},updateIncluded:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing().getShell();if(null!==n&&n.isIncludedSet())return this.setIncluded(!n.isIncluded()),null}},setShell:function(t){this.shell=t},setProcessed:function(t){this._isProcessed=t},interfaces_:function(){return[]},getClass:function(){return wr}}),wr.findDirEdgesInRing=function(t){var e=t,n=new I;do n.add(e),e=e.getNext(),f.isTrue(null!==e,\"found null DE in ring\"),f.isTrue(e===t||!e.isInRing(),\"found DE already in ring\");while(e!==t);return n},wr.addEdge=function(t,e,n){if(e)for(var i=0;i<t.length;i++)n.add(t[i],!1);else for(var i=t.length-1;i>=0;i--)n.add(t[i],!1)},wr.findEdgeRingContaining=function(t,e){for(var n=t.getRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),s=null,o=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getRing(),h=l.getEnvelopeInternal();if(!h.equals(i)&&h.contains(i)){r=H.ptNotInList(n.getCoordinates(),l.getCoordinates());var c=!1;he.isPointInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||o.contains(h))&&(s=u,o=s.getRing().getEnvelopeInternal())}}return s},e(Lr.prototype,{compare:function(t,e){var n=t,i=e;return n.getRing().getEnvelope().compareTo(i.getRing().getEnvelope())},interfaces_:function(){return[a]},getClass:function(){return Lr}}),wr.EnvelopeComparator=Lr,h(Rr,Er),e(Rr.prototype,{findEdgeRing:function(t){var e=new wr(this.factory);return e.build(t),e},computeDepthParity:function(){if(0===arguments.length)for(;;){var t=null;if(null===t)return null;this.computeDepthParity(t)}else if(1===arguments.length){arguments[0]}},computeNextCWEdges:function(){for(var t=this.nodeIterator();t.hasNext();){var e=t.next();Rr.computeNextCWEdges(e)}},addEdge:function(t){if(t.isEmpty())return null;var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),s=this.getNode(i),o=new Cr(r,s,e[1],!0),a=new Cr(s,r,e[e.length-2],!1),u=new Sr(t);u.setDirectedEdges(o,a),this.add(u)},deleteCutEdges:function(){this.computeNextCWEdges(),Rr.findLabeledEdgeRings(this.dirEdges);for(var t=new I,e=this.dirEdges.iterator();e.hasNext();){var n=e.next();if(!n.isMarked()){var i=n.getSym();if(n.getLabel()===i.getLabel()){n.setMarked(!0),i.setMarked(!0);var r=n.getEdge();t.add(r.getLine())}}}return t},getEdgeRings:function(){this.computeNextCWEdges(),Rr.label(this.dirEdges,-1);var t=Rr.findLabeledEdgeRings(this.dirEdges);this.convertMaximalToMinimalEdgeRings(t);for(var e=new I,n=this.dirEdges.iterator();n.hasNext();){var i=n.next();if(!i.isMarked()&&!i.isInRing()){var r=this.findEdgeRing(i);e.add(r)}}return e},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new mr(t),this.add(e)),e},convertMaximalToMinimalEdgeRings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel(),r=Rr.findIntersectionNodes(n,i);if(null!==r)for(var s=r.iterator();s.hasNext();){var o=s.next();Rr.computeNextCCWEdges(o,i)}}},deleteDangles:function(){for(var t=this.findNodesOfDegree(1),e=new J,n=new pe,i=t.iterator();i.hasNext();)n.push(i.next());for(;!n.isEmpty();){var r=n.pop();Rr.deleteAllEdges(r);for(var s=r.getOutEdges().getEdges(),i=s.iterator();i.hasNext();){var o=i.next();o.setMarked(!0);var a=o.getSym();null!==a&&a.setMarked(!0);var u=o.getEdge();e.add(u.getLine());var l=o.getToNode();1===Rr.getDegreeNonDeleted(l)&&n.push(l)}}return e},interfaces_:function(){return[]},getClass:function(){return Rr}}),Rr.findLabeledEdgeRings=function(t){for(var e=new I,n=1,i=t.iterator();i.hasNext();){var r=i.next();if(!(r.isMarked()||r.getLabel()>=0)){e.add(r);var s=wr.findDirEdgesInRing(r);Rr.label(s,n),n++}}return e},Rr.getDegreeNonDeleted=function(t){for(var e=t.getOutEdges().getEdges(),n=0,i=e.iterator();i.hasNext();){var r=i.next();r.isMarked()||n++}return n},Rr.deleteAllEdges=function(t){for(var e=t.getOutEdges().getEdges(),n=e.iterator();n.hasNext();){var i=n.next();i.setMarked(!0);var r=i.getSym();null!==r&&r.setMarked(!0)}},Rr.label=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();i.setLabel(e)}},Rr.computeNextCWEdges=function(t){for(var e=t.getOutEdges(),n=null,i=null,r=e.getEdges().iterator();r.hasNext();){var s=r.next();if(!s.isMarked()){if(null===n&&(n=s),null!==i){var o=i.getSym();o.setNext(s)}i=s}}if(null!==i){var o=i.getSym();o.setNext(n)}},Rr.computeNextCCWEdges=function(t,e){for(var n=t.getOutEdges(),i=null,r=null,s=n.getEdges(),o=s.size()-1;o>=0;o--){var a=s.get(o),u=a.getSym(),l=null;a.getLabel()===e&&(l=a);var h=null;u.getLabel()===e&&(h=u),null===l&&null===h||(null!==h&&(r=h),null!==l&&(null!==r&&(r.setNext(l),r=null),null===i&&(i=l)))}null!==r&&(f.isTrue(null!==i),r.setNext(i))},Rr.getDegree=function(t,e){for(var n=t.getOutEdges().getEdges(),i=0,r=n.iterator();r.hasNext();){var s=r.next();s.getLabel()===e&&i++}return i},Rr.findIntersectionNodes=function(t,e){var n=t,i=null;do{var r=n.getFromNode();Rr.getDegree(r,e)>1&&(null===i&&(i=new I),i.add(r)),n=n.getNext(),f.isTrue(null!==n,\"found null DE in ring\"),f.isTrue(n===t||!n.isInRing(),\"found DE already in ring\")}while(n!==t);return i},e(Tr.prototype,{getGeometry:function(){return null===this.geomFactory&&(this.geomFactory=new ie),this.polygonize(),this.extractOnlyPolygonal?this.geomFactory.buildGeometry(this.polyList):this.geomFactory.createGeometryCollection(ie.toGeometryArray(this.polyList))},getInvalidRingLines:function(){return this.polygonize(),this.invalidRingLines},findValidRings:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isValid()?e.add(r):n.add(r.getLineString())}},polygonize:function(){if(null!==this.polyList)return null;if(this.polyList=new I,null===this.graph)return null;this.dangles=this.graph.deleteDangles(),this.cutEdges=this.graph.deleteCutEdges();var t=this.graph.getEdgeRings(),e=new I;this.invalidRingLines=new I,this.isCheckingRingsValid?this.findValidRings(t,e,this.invalidRingLines):e=t,this.findShellsAndHoles(e),Tr.assignHolesToShells(this.holeList,this.shellList),ho.sort(this.shellList,new wr.EnvelopeComparator);var n=!0;this.extractOnlyPolygonal&&(Tr.findDisjointShells(this.shellList),n=!1),this.polyList=Tr.extractPolygons(this.shellList,n)},getDangles:function(){return this.polygonize(),this.dangles},getCutEdges:function(){return this.polygonize(),this.cutEdges},getPolygons:function(){return this.polygonize(),this.polyList},add:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.add(n)}else if(arguments[0]instanceof St){var i=arguments[0];this.geomFactory=i.getFactory(),null===this.graph&&(this.graph=new Rr(this.geomFactory)),this.graph.addEdge(i)}else if(arguments[0]instanceof B){var r=arguments[0];r.apply(this.lineStringAdder)}},setCheckRingsValid:function(t){this.isCheckingRingsValid=t},findShellsAndHoles:function(t){this.holeList=new I,this.shellList=new I;for(var e=t.iterator();e.hasNext();){var n=e.next();n.computeHole(),n.isHole()?this.holeList.add(n):this.shellList.add(n)}},interfaces_:function(){return[]},getClass:function(){return Tr}}),Tr.findOuterShells=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getOuterHole();null===i||i.isProcessed()||(n.setIncluded(!0),i.setProcessed(!0))}},Tr.extractPolygons=function(t,e){for(var n=new I,i=t.iterator();i.hasNext();){var r=i.next();(e||r.isIncluded())&&n.add(r.getPolygon())}return n},Tr.assignHolesToShells=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();Tr.assignHoleToShell(i,e)}},Tr.assignHoleToShell=function(t,e){var n=wr.findEdgeRingContaining(t,e);null!==n&&n.addHole(t)},Tr.findDisjointShells=function(t){Tr.findOuterShells(t);var e=null;do{e=!1;for(var n=t.iterator();n.hasNext();){var i=n.next();i.isIncludedSet()||(i.updateIncluded(),i.isIncludedSet()||(e=!0))}}while(e)},e(Pr.prototype,{filter:function(t){t instanceof St&&this.p.add(t)},interfaces_:function(){return[q]},getClass:function(){return Pr}}),Tr.LineStringAdder=Pr;var Ro=Object.freeze({Polygonizer:Tr});e(br.prototype,{createEdgeEndForNext:function(t,e,n,i){var r=n.segmentIndex+1;if(r>=t.getNumPoints()&&null===i)return null;var s=t.getCoordinate(r);null!==i&&i.segmentIndex===n.segmentIndex&&(s=i.coord);var o=new En(t,n.coord,s,new gn(t.getLabel()));e.add(o)},createEdgeEndForPrev:function(t,e,n,i){var r=n.segmentIndex;if(0===n.dist){if(0===r)return null;r--}var s=t.getCoordinate(r);null!==i&&i.segmentIndex>=r&&(s=i.coord);var o=new gn(t.getLabel());o.flip();var a=new En(t,n.coord,s,o);e.add(a)},computeEdgeEnds:function(){if(1===arguments.length){for(var t=arguments[0],e=new I,n=t;n.hasNext();){var i=n.next();this.computeEdgeEnds(i,e)}return e}if(2===arguments.length){var r=arguments[0],s=arguments[1],o=r.getEdgeIntersectionList();o.addEndpoints();var a=o.iterator(),u=null,l=null;if(!a.hasNext())return null;var h=a.next();do u=l,l=h,h=null,a.hasNext()&&(h=a.next()),null!==l&&(this.createEdgeEndForPrev(r,s,l,u),this.createEdgeEndForNext(r,s,l,h));while(null!==l)}},interfaces_:function(){return[]},getClass:function(){return br}}),h(Or,En),e(Or.prototype,{insert:function(t){this.edgeEnds.add(t)},print:function(t){t.println(\"EdgeEndBundle--> Label: \"+this.label);for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t),t.println()}},iterator:function(){return this.edgeEnds.iterator()},getEdgeEnds:function(){return this.edgeEnds},computeLabelOn:function(t,e){for(var n=0,i=!1,r=this.iterator();r.hasNext();){var s=r.next(),o=s.getLabel().getLocation(t);o===L.BOUNDARY&&n++,o===L.INTERIOR&&(i=!0)}var o=L.NONE;i&&(o=L.INTERIOR),n>0&&(o=$n.determineBoundary(e,n)),this.label.setLocation(t,o)},computeLabelSide:function(t,e){for(var n=this.iterator();n.hasNext();){var i=n.next();if(i.getLabel().isArea()){var r=i.getLabel().getLocation(t,e);if(r===L.INTERIOR)return this.label.setLocation(t,e,L.INTERIOR),null;r===L.EXTERIOR&&this.label.setLocation(t,e,L.EXTERIOR)}}},getLabel:function(){return this.label},computeLabelSides:function(t){this.computeLabelSide(t,cn.LEFT),this.computeLabelSide(t,cn.RIGHT)},updateIM:function(t){Jn.updateIM(this.label,t)},computeLabel:function(t){for(var e=!1,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().isArea()&&(e=!0)}e?this.label=new gn(L.NONE,L.NONE,L.NONE):this.label=new gn(L.NONE);for(var r=0;2>r;r++)this.computeLabelOn(r,t),e&&this.computeLabelSides(r)},interfaces_:function(){return[]},getClass:function(){return Or}}),h(_r,Pn),e(_r.prototype,{updateIM:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}},insert:function(t){var e=this.edgeMap.get(t);null===e?(e=new Or(t),this.insertEdgeEnd(t,e)):e.insert(t)},interfaces_:function(){return[]},getClass:function(){return _r}}),h(Mr,yn),e(Mr.prototype,{updateIMFromEdges:function(t){this.edges.updateIM(t)},computeIM:function(t){t.setAtLeastIfValid(this.label.getLocation(0),this.label.getLocation(1),0)},interfaces_:function(){return[]},getClass:function(){return Mr}}),h(Dr,Nn),e(Dr.prototype,{createNode:function(t){return new Mr(t,new _r)},interfaces_:function(){return[]},getClass:function(){return Dr}}),e(Ar.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},computeProperIntersectionIM:function(t,e){var n=this.arg[0].getGeometry().getDimension(),i=this.arg[1].getGeometry().getDimension(),r=t.hasProperIntersection(),s=t.hasProperInteriorIntersection();2===n&&2===i?r&&e.setAtLeast(\"212101212\"):2===n&&1===i?(r&&e.setAtLeast(\"FFF0FFFF2\"),s&&e.setAtLeast(\"1FFFFF1FF\")):1===n&&2===i?(r&&e.setAtLeast(\"F0FFFFFF2\"),s&&e.setAtLeast(\"1F1FFFFFF\")):1===n&&1===i&&s&&e.setAtLeast(\"0FFFFFFFF\")},labelIsolatedEdges:function(t,e){for(var n=this.arg[t].getEdgeIterator();n.hasNext();){var i=n.next();i.isIsolated()&&(this.labelIsolatedEdge(i,e,this.arg[e].getGeometry()),this.isolatedEdges.add(i))}},labelIsolatedEdge:function(t,e,n){if(n.getDimension()>0){var i=this.ptLocator.locate(t.getCoordinate(),n);t.getLabel().setAllLocations(e,i)}else t.getLabel().setAllLocations(e,L.EXTERIOR)},computeIM:function(){var t=new fe;if(t.set(L.EXTERIOR,L.EXTERIOR,2),!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(t),t;this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1);var e=this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(e,t);var n=new br,i=n.computeEdgeEnds(this.arg[0].getEdgeIterator());this.insertEdgeEnds(i);var r=n.computeEdgeEnds(this.arg[1].getEdgeIterator());return this.insertEdgeEnds(r),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(t),t},labelNodeEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}},copyNodesAndLabels:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.nodes.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},labelIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next(),o=this.nodes.find(s.coord);o.getLabel().isNull(t)&&(i===L.BOUNDARY?o.setLabelBoundary(t):o.setLabel(t,L.INTERIOR))}},labelIsolatedNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setAllLocations(e,n)},computeIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next(),o=this.nodes.addNode(s.coord);i===L.BOUNDARY?o.setLabelBoundary(t):o.getLabel().isNull(t)&&o.setLabel(t,L.INTERIOR)}},labelIsolatedNodes:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();f.isTrue(n.getGeometryCount()>0,\"node with empty label found\"),e.isIsolated()&&(n.isNull(0)?this.labelIsolatedNode(e,0):this.labelIsolatedNode(e,1))}},updateIM:function(t){for(var e=this.isolatedEdges.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}for(var i=this.nodes.iterator();i.hasNext();){var r=i.next();r.updateIM(t),r.updateIMFromEdges(t)}},computeDisjointIM:function(t){var e=this.arg[0].getGeometry();e.isEmpty()||(t.set(L.INTERIOR,L.EXTERIOR,e.getDimension()),t.set(L.BOUNDARY,L.EXTERIOR,e.getBoundaryDimension()));var n=this.arg[1].getGeometry();n.isEmpty()||(t.set(L.EXTERIOR,L.INTERIOR,n.getDimension()),t.set(L.EXTERIOR,L.BOUNDARY,n.getBoundaryDimension()))},interfaces_:function(){return[]},getClass:function(){return Ar}}),e(Fr.prototype,{isContainedInBoundary:function(t){if(t instanceof Tt)return!1;if(t instanceof Lt)return this.isPointContainedInBoundary(t);if(t instanceof St)return this.isLineStringContainedInBoundary(t);for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.isContainedInBoundary(n))return!1}return!0},isLineSegmentContainedInBoundary:function(t,e){if(t.equals(e))return this.isPointContainedInBoundary(t);if(t.x===e.x){if(t.x===this.rectEnv.getMinX()||t.x===this.rectEnv.getMaxX())return!0}else if(t.y===e.y&&(t.y===this.rectEnv.getMinY()||t.y===this.rectEnv.getMaxY()))return!0;return!1},isLineStringContainedInBoundary:function(t){for(var e=t.getCoordinateSequence(),n=new g,i=new g,r=0;r<e.size()-1;r++)if(e.getCoordinate(r,n),e.getCoordinate(r+1,i),!this.isLineSegmentContainedInBoundary(n,i))return!1;return!0},isPointContainedInBoundary:function(){if(arguments[0]instanceof Lt){var t=arguments[0];return this.isPointContainedInBoundary(t.getCoordinate())}if(arguments[0]instanceof g){var e=arguments[0];return e.x===this.rectEnv.getMinX()||e.x===this.rectEnv.getMaxX()||e.y===this.rectEnv.getMinY()||e.y===this.rectEnv.getMaxY()}},contains:function(t){return this.rectEnv.contains(t.getEnvelopeInternal())?!this.isContainedInBoundary(t):!1},interfaces_:function(){return[]},getClass:function(){return Fr}}),Fr.contains=function(t,e){var n=new Fr(t);return n.contains(e)},e(Gr.prototype,{intersects:function(t,e){var n=new C(t,e);if(!this.rectEnv.intersects(n))return!1;if(this.rectEnv.intersects(t))return!0;if(this.rectEnv.intersects(e))return!0;if(t.compareTo(e)>0){var i=t;t=e,e=i}var r=!1;return e.y>t.y&&(r=!0),r?this.li.computeIntersection(t,e,this.diagDown0,this.diagDown1):this.li.computeIntersection(t,e,this.diagUp0,this.diagUp1),!!this.li.hasIntersection()},interfaces_:function(){return[]},getClass:function(){return Gr}}),e(qr.prototype,{applyTo:function(t){for(var e=0;e<t.getNumGeometries()&&!this._isDone;e++){var n=t.getGeometryN(e);if(n instanceof ft)this.applyTo(n);else if(this.visit(n),this.isDone())return this._isDone=!0,null}},interfaces_:function(){return[]},getClass:function(){return qr}}),e(Br.prototype,{intersects:function(t){if(!this.rectEnv.intersects(t.getEnvelopeInternal()))return!1;var e=new zr(this.rectEnv);if(e.applyTo(t),e.intersects())return!0;var n=new Vr(this.rectangle);if(n.applyTo(t),n.containsPoint())return!0;var i=new kr(this.rectangle);return i.applyTo(t),!!i.intersects()},interfaces_:function(){return[]},getClass:function(){return Br}}),Br.intersects=function(t,e){var n=new Br(t);return n.intersects(e)},h(zr,qr),e(zr.prototype,{isDone:function(){return this._intersects===!0},visit:function(t){var e=t.getEnvelopeInternal();return this.rectEnv.intersects(e)?this.rectEnv.contains(e)?(this._intersects=!0,null):e.getMinX()>=this.rectEnv.getMinX()&&e.getMaxX()<=this.rectEnv.getMaxX()?(this._intersects=!0,null):e.getMinY()>=this.rectEnv.getMinY()&&e.getMaxY()<=this.rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null},intersects:function(){return this._intersects},interfaces_:function(){return[]},getClass:function(){return zr}}),h(Vr,qr),e(Vr.prototype,{isDone:function(){return this._containsPoint===!0},visit:function(t){if(!(t instanceof Tt))return null;var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;for(var n=new g,i=0;4>i;i++)if(this.rectSeq.getCoordinate(i,n),e.contains(n)&&Tn.containsPointInPolygon(n,t))return this._containsPoint=!0,null},containsPoint:function(){return this._containsPoint},interfaces_:function(){return[]},getClass:function(){return Vr}}),h(kr,qr),e(kr.prototype,{intersects:function(){return this.hasIntersection},isDone:function(){return this.hasIntersection===!0},visit:function(t){var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;var n=kn.getLines(t);this.checkIntersectionWithLineStrings(n)},checkIntersectionWithLineStrings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();if(this.checkIntersectionWithSegments(n),this.hasIntersection)return null}},checkIntersectionWithSegments:function(t){for(var e=t.getCoordinateSequence(),n=1;n<e.size();n++)if(e.getCoordinate(n-1,this.p0),e.getCoordinate(n,this.p1),this.rectIntersector.intersects(this.p0,this.p1))return this.hasIntersection=!0,null},interfaces_:function(){return[]},getClass:function(){return kr}}),h(Yr,ti),e(Yr.prototype,{getIntersectionMatrix:function(){return this._relate.computeIM()},interfaces_:function(){return[]},getClass:function(){return Yr}}),Yr.covers=function(t,e){return t.getEnvelopeInternal().covers(e.getEnvelopeInternal())?t.isRectangle()?!0:Yr.relate(t,e).isCovers():!1},Yr.intersects=function(t,e){return t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())?t.isRectangle()?Br.intersects(t,e):e.isRectangle()?Br.intersects(e,t):Yr.relate(t,e).isIntersects():!1},Yr.touches=function(t,e){return t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())?Yr.relate(t,e).isTouches(t.getDimension(),e.getDimension()):!1},Yr.within=function(t,e){return e.contains(t)},Yr.coveredBy=function(t,e){return Yr.covers(e,t)},Yr.relate=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Yr(t,e),i=n.getIntersectionMatrix();return i}if(3===arguments.length){if(\"string\"==typeof arguments[2]&&arguments[0]instanceof B&&arguments[1]instanceof B){var r=arguments[0],s=arguments[1],o=arguments[2];return Yr.relateWithCheck(r,s).matches(o)}if(R(arguments[2],V)&&arguments[0]instanceof B&&arguments[1]instanceof B){var a=arguments[0],u=arguments[1],l=arguments[2],n=new Yr(a,u,l),i=n.getIntersectionMatrix();return i}}},Yr.overlaps=function(t,e){return t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())?Yr.relate(t,e).isOverlaps(t.getDimension(),e.getDimension()):!1},Yr.disjoint=function(t,e){return!t.intersects(e)},Yr.relateWithCheck=function(t,e){return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),Yr.relate(t,e)},Yr.crosses=function(t,e){return t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())?Yr.relate(t,e).isCrosses(t.getDimension(),e.getDimension()):!1},Yr.contains=function(t,e){return t.getEnvelopeInternal().contains(e.getEnvelopeInternal())?t.isRectangle()?Fr.contains(t,e):Yr.relate(t,e).isContains():!1};var To=Object.freeze({RelateOp:Yr});e(Ur.prototype,{extractElements:function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this.skipEmpty&&i.isEmpty()||e.add(i)}},combine:function(){for(var t=new I,e=this.inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this.geomFactory?this.geomFactory.createGeometryCollection(null):null:this.geomFactory.buildGeometry(t)},interfaces_:function(){return[]},getClass:function(){return Ur}}),Ur.combine=function(){if(1===arguments.length){var t=arguments[0],e=new Ur(t);return e.combine()}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=new Ur(Ur.createList(n,i));return e.combine()}if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],e=new Ur(Ur.createList(r,s,o));return e.combine()}},Ur.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Ur.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new I;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],n=new I;return n.add(i),n.add(r),n.add(s),n}},e(Xr.prototype,{union:function(){for(var t=new Te,e=new at,n=0;n<this.pointGeom.getNumGeometries();n++){var i=this.pointGeom.getGeometryN(n),r=i.getCoordinate(),s=t.locate(r,this.otherGeom);s===L.EXTERIOR&&e.add(r)}if(0===e.size())return this.otherGeom;var o=null,a=H.toCoordinateArray(e);return o=1===a.length?this.geomFact.createPoint(a[0]):this.geomFact.createMultiPointFromCoords(a),Ur.combine(o,this.otherGeom)},interfaces_:function(){return[]},getClass:function(){return Xr}}),Xr.union=function(t,e){var n=new Xr(t,e);return n.union()},e(Hr.prototype,{filter:function(t){-1!==this.sortIndex&&t.getSortIndex()!==this.sortIndex||this.comps.add(t)},interfaces_:function(){return[ht]},getClass:function(){return Hr}}),Hr.extract=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return Hr.extract(t,e,new I)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];return n.getSortIndex()===i?r.add(n):n instanceof ft&&n.apply(new Hr(i,r)),r}},e(Wr.prototype,{reduceToGeometries:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next(),r=null;R(i,y)?r=this.unionTree(i):i instanceof B&&(r=i),e.add(r)}return e},extractByEnvelope:function(t,e,n){for(var i=new I,r=0;r<e.getNumGeometries();r++){var s=e.getGeometryN(r);s.getEnvelopeInternal().intersects(t)?i.add(s):n.add(s)}return this.geomFactory.buildGeometry(i)},unionOptimized:function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){var r=Ur.combine(t,e);return r}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var s=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,s)},union:function(){if(null===this.inputPolys)throw new IllegalStateException(\"union() method cannot be called twice\");if(this.inputPolys.isEmpty())return null;this.geomFactory=this.inputPolys.iterator().next().getFactory();for(var t=new ke(Wr.STRTREE_NODE_CAPACITY),e=this.inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this.inputPolys=null;var i=t.itemsTree(),r=this.unionTree(i);return r},binaryUnion:function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(1>=i-n){var r=Wr.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n===2)return this.unionSafe(Wr.getGeometry(e,n),Wr.getGeometry(e,n+1));var s=Math.trunc((i+n)/2),r=this.binaryUnion(e,n,s),o=this.binaryUnion(e,s,i);return this.unionSafe(r,o)}},repeatedUnion:function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},unionSafe:function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},unionActual:function(t,e){return Wr.restrictToPolygons(t.union(e))},unionTree:function(t){var e=this.reduceToGeometries(t),n=this.binaryUnion(e);return n},unionUsingEnvelopeIntersection:function(t,e,n){var i=new I,r=this.extractByEnvelope(n,t,i),s=this.extractByEnvelope(n,e,i),o=this.unionActual(r,s);i.add(o);var a=Ur.combine(i);return a},bufferUnion:function(){if(1===arguments.length){var t=arguments[0],e=t.get(0).getFactory(),n=e.buildGeometry(t),i=n.buffer(0);return i}if(2===arguments.length){var r=arguments[0],s=arguments[1],e=r.getFactory(),n=e.createGeometryCollection([r,s]),i=n.buffer(0);return i}},interfaces_:function(){return[]},getClass:function(){return Wr}}),Wr.restrictToPolygons=function(t){if(R(t,Rt))return t;var e=or.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(ie.toPolygonArray(e))},Wr.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Wr.union=function(t){var e=new Wr(t);return e.union()},Wr.STRTREE_NODE_CAPACITY=4,e(jr.prototype,{unionNoOpt:function(t){var e=this.geomFact.createPoint();return si.overlayOp(t,e,ii.UNION)},unionWithNull:function(t,e){return null===t&&null===e?null:null===e?t:null===t?e:t.union(e)},extract:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.extract(n)}else if(arguments[0]instanceof B){var i=arguments[0];null===this.geomFact&&(this.geomFact=i.getFactory()),Hr.extract(i,B.SORTINDEX_POLYGON,this.polygons),Hr.extract(i,B.SORTINDEX_LINESTRING,this.lines),Hr.extract(i,B.SORTINDEX_POINT,this.points)}},union:function t(){if(null===this.geomFact)return null;var e=null;if(this.points.size()>0){var n=this.geomFact.buildGeometry(this.points);e=this.unionNoOpt(n)}var i=null;if(this.lines.size()>0){var r=this.geomFact.buildGeometry(this.lines);i=this.unionNoOpt(r)}var s=null;this.polygons.size()>0&&(s=Wr.union(this.polygons));var o=this.unionWithNull(i,s),t=null;return t=null===e?o:null===o?e:Xr.union(e,o),null===t?this.geomFact.createGeometryCollection():t},interfaces_:function(){return[]},getClass:function(){return jr}}),jr.union=function(){if(1===arguments.length){if(R(arguments[0],v)){var t=arguments[0],e=new jr(t);return e.union()}if(arguments[0]instanceof B){var n=arguments[0],e=new jr(n);return e.union()}}else if(2===arguments.length){var i=arguments[0],r=arguments[1],e=new jr(i,r);return e.union()}};var Po=Object.freeze({UnaryUnionOp:jr});e(Kr.prototype,{visitInteriorRing:function(t,e){var n=t.getCoordinates(),i=n[0],r=Kr.findDifferentPoint(n,i),s=e.findEdgeInSameDirection(i,r),o=e.findEdgeEnd(s),a=null;o.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR?a=o:o.getSym().getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR&&(a=o.getSym()),f.isTrue(null!==a,\"unable to find dirEdge with Interior on RHS\"),this.visitLinkedDirectedEdges(a)},visitShellInteriors:function(t,e){if(t instanceof Tt){var n=t;this.visitInteriorRing(n.getExteriorRing(),e)}if(t instanceof Ot)for(var i=t,r=0;r<i.getNumGeometries();r++){var n=i.getGeometryN(r);this.visitInteriorRing(n.getExteriorRing(),e)}},getCoordinate:function(){return this.disconnectedRingcoord},setInteriorEdgesInResult:function(t){for(var e=t.getEdgeEnds().iterator();e.hasNext();){var n=e.next();n.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR&&n.setInResult(!0)}},visitLinkedDirectedEdges:function(t){var e=t,n=t;do f.isTrue(null!==n,\"found null Directed Edge\"),n.setVisited(!0),n=n.getNext();while(n!==e)},buildEdgeRings:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&null===i.getEdgeRing()){var r=new vn(i,this.geometryFactory);r.linkDirectedEdgesForMinimalEdgeRings();var s=r.buildMinimalRings();e.addAll(s)}}return e},hasUnvisitedShellEdge:function(t){for(var e=0;e<t.size();e++){var n=t.get(e);if(!n.isHole()){var i=n.getEdges(),r=i.get(0);if(r.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR)for(var s=0;s<i.size();s++)if(r=i.get(s),\n!r.isVisited())return this.disconnectedRingcoord=r.getCoordinate(),!0}}return!1},isInteriorsConnected:function(){var t=new I;this.geomGraph.computeSplitEdges(t);var e=new Cn(new On);e.addEdges(t),this.setInteriorEdgesInResult(e),e.linkResultDirectedEdges();var n=this.buildEdgeRings(e.getEdgeEnds());return this.visitShellInteriors(this.geomGraph.getGeometry(),e),!this.hasUnvisitedShellEdge(n)},interfaces_:function(){return[]},getClass:function(){return Kr}}),Kr.findDifferentPoint=function(t,e){for(var n=0;n<t.length;n++)if(!t[n].equals(e))return t[n];return null},e(Zr.prototype,{hasChildren:function(){for(var t=0;2>t;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;2>e;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},size:function(){for(var t=0,e=0;2>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){return null===t||this.isSearchMatch(t)?(e.addAll(this.items),null!==this.subnode[0]&&this.subnode[0].addAllItemsFromOverlapping(t,e),void(null!==this.subnode[1]&&this.subnode[1].addAllItemsFromOverlapping(t,e))):null},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;2>i;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;2>e;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},nodeSize:function(){for(var t=0,e=0;2>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].nodeSize());return t+1},add:function(t){this.items.add(t)},interfaces_:function(){return[]},getClass:function(){return Zr}}),Zr.getSubnodeIndex=function(t,e){var n=-1;return t.min>=e&&(n=1),t.max<=e&&(n=0),n},e(Qr.prototype,{expandToInclude:function(t){t.max>this.max&&(this.max=t.max),t.min<this.min&&(this.min=t.min)},getWidth:function(){return this.max-this.min},overlaps:function(){if(1===arguments.length){var t=arguments[0];return this.overlaps(t.min,t.max)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!(this.min>n||this.max<e)}},getMin:function(){return this.min},toString:function(){return\"[\"+this.min+\", \"+this.max+\"]\"},contains:function(){if(1===arguments.length){if(arguments[0]instanceof Qr){var t=arguments[0];return this.contains(t.min,t.max)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return e>=this.min&&e<=this.max}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return n>=this.min&&i<=this.max}},init:function(t,e){this.min=t,this.max=e,t>e&&(this.min=e,this.max=t)},getMax:function(){return this.max},interfaces_:function(){return[]},getClass:function(){return Qr}}),e(Jr.prototype,{getInterval:function(){return this.interval},getLevel:function(){return this.level},computeKey:function(t){for(this.level=Jr.computeLevel(t),this.interval=new Qr,this.computeInterval(this.level,t);!this.interval.contains(t);)this.level+=1,this.computeInterval(this.level,t)},computeInterval:function(t,e){var n=Ci.powerOf2(t);this.pt=Math.floor(e.getMin()/n)*n,this.interval.init(this.pt,this.pt+n)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return Jr}}),Jr.computeLevel=function(t){var e=t.getWidth(),n=Ci.exponent(e)+1;return n},h($r,Zr),e($r.prototype,{getInterval:function(){return this.interval},find:function(t){var e=Zr.getSubnodeIndex(t,this.centre);if(-1===e)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},insert:function(t){f.isTrue(null===this.interval||this.interval.contains(t.interval));var e=Zr.getSubnodeIndex(t.interval,this.centre);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insert(t),this.subnode[e]=n}},isSearchMatch:function(t){return t.overlaps(this.interval)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getNode:function(t){var e=Zr.getSubnodeIndex(t,this.centre);if(-1!==e){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0;switch(t){case 0:e=this.interval.getMin(),n=this.centre;break;case 1:e=this.centre,n=this.interval.getMax()}var i=new Qr(e,n),r=new $r(i,this.level-1);return r},interfaces_:function(){return[]},getClass:function(){return $r}}),$r.createNode=function(t){var e=new Jr(t),n=new $r(e.getInterval(),e.getLevel());return n},$r.createExpanded=function(t,e){var n=new Qr(e);null!==t&&n.expandToInclude(t.interval);var i=$r.createNode(n);return null!==t&&i.insert(t),i},h(ts,Zr),e(ts.prototype,{insert:function(t,e){var n=Zr.getSubnodeIndex(t,ts.origin);if(-1===n)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getInterval().contains(t)){var r=$r.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){f.isTrue(t.getInterval().contains(e));var i=Ri.isZeroWidth(e.getMin(),e.getMax()),r=null;r=i?t.find(e):t.getNode(e),r.add(n)},interfaces_:function(){return[]},getClass:function(){return ts}}),ts.origin=0,e(es.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=es.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];return this.query(new Qr(t,t))}if(arguments[0]instanceof Qr){var e=arguments[0],n=new I;return this.query(e,n),n}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.root.addAllItemsFromOverlapping(i,r)}},iterator:function(){var t=new I;return this.root.addAllItems(t),t.iterator()},remove:function(t,e){var n=es.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e)},depth:function(){return null!==this.root?this.root.depth():0},nodeSize:function(){return null!==this.root?this.root.nodeSize():0},interfaces_:function(){return[]},getClass:function(){return es}}),es.ensureExtent=function(t,e){var n=t.getMin(),i=t.getMax();return n!==i?t:(n===i&&(n-=e/2,i=n+e/2),new Qr(n,i))},e(ns.prototype,{isInside:function(t){},interfaces_:function(){return[]},getClass:function(){return ns}}),e(is.prototype,{testLineSegment:function(t,e){var n=null,i=null,r=null,s=null,o=null,a=e.p0,u=e.p1;i=a.x-t.x,r=a.y-t.y,s=u.x-t.x,o=u.y-t.y,(r>0&&0>=o||o>0&&0>=r)&&(n=ue.signOfDet2x2(i,r,s,o)/(o-r),n>0&&this.crossings++)},buildIndex:function(){this.tree=new es;for(var t=H.removeRepeatedPoints(this.ring.getCoordinates()),e=$e.getChains(t),n=0;n<e.size();n++){var i=e.get(n),r=i.getEnvelope();this.interval.min=r.getMinY(),this.interval.max=r.getMaxY(),this.tree.insert(this.interval,i)}},testMonotoneChain:function(t,e,n){n.select(t,e)},isInside:function(t){this.crossings=0;var e=new C(r.NEGATIVE_INFINITY,r.POSITIVE_INFINITY,t.y,t.y);this.interval.min=t.y,this.interval.max=t.y;for(var n=this.tree.query(this.interval),i=new rs(this,t),s=n.iterator();s.hasNext();){var o=s.next();this.testMonotoneChain(e,i,o)}return this.crossings%2===1},interfaces_:function(){return[ns]},getClass:function(){return is}}),h(rs,tr),e(rs.prototype,{select:function(){if(1!==arguments.length)return tr.prototype.select.apply(this,arguments);var t=arguments[0];this.mcp.testLineSegment(this.p,t)},interfaces_:function(){return[]},getClass:function(){return rs}}),is.MCSelecter=rs,e(ss.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},getNodeIterator:function(){return this.nodes.iterator()},copyNodesAndLabels:function(t,e){for(var n=t.getNodeIterator();n.hasNext();){var i=n.next(),r=this.nodes.addNode(i.getCoordinate());r.setLabel(e,i.getLabel().getLocation(e))}},build:function(t){this.computeIntersectionNodes(t,0),this.copyNodesAndLabels(t,0);var e=new br,n=e.computeEdgeEnds(t.getEdgeIterator());this.insertEdgeEnds(n)},computeIntersectionNodes:function(t,e){for(var n=t.getEdgeIterator();n.hasNext();)for(var i=n.next(),r=i.getLabel().getLocation(e),s=i.getEdgeIntersectionList().iterator();s.hasNext();){var o=s.next(),a=this.nodes.addNode(o.coord);r===L.BOUNDARY?a.setLabelBoundary(e):a.getLabel().isNull(e)&&a.setLabel(e,L.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return ss}}),e(os.prototype,{isNodeEdgeAreaLabelsConsistent:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();){var e=t.next();if(!e.getEdges().isAreaLabelsConsistent(this.geomGraph))return this.invalidPoint=e.getCoordinate().copy(),!1}return!0},getInvalidPoint:function(){return this.invalidPoint},hasDuplicateRings:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();)for(var e=t.next(),n=e.getEdges().iterator();n.hasNext();){var i=n.next();if(i.getEdgeEnds().size()>1)return this.invalidPoint=i.getEdge().getCoordinate(0),!0}return!1},isNodeConsistentArea:function(){var t=this.geomGraph.computeSelfNodes(this.li,!0,!0);return t.hasProperIntersection()?(this.invalidPoint=t.getProperIntersectionPoint(),!1):(this.nodeGraph.build(this.geomGraph),this.isNodeEdgeAreaLabelsConsistent())},interfaces_:function(){return[]},getClass:function(){return os}}),e(as.prototype,{buildIndex:function(){this.index=new ke;for(var t=0;t<this.rings.size();t++){var e=this.rings.get(t),n=e.getEnvelopeInternal();this.index.insert(n,e)}},getNestedPoint:function(){return this.nestedPt},isNonNested:function(){this.buildIndex();for(var t=0;t<this.rings.size();t++)for(var e=this.rings.get(t),n=e.getCoordinates(),i=this.index.query(e.getEnvelopeInternal()),r=0;r<i.size();r++){var s=i.get(r),o=s.getCoordinates();if(e!==s&&e.getEnvelopeInternal().intersects(s.getEnvelopeInternal())){var a=ls.findPtNotNode(n,s,this.graph);if(null!==a){var u=he.isPointInRing(a,o);if(u)return this.nestedPt=a,!1}}}return!0},add:function(t){this.rings.add(t),this.totalEnv.expandToInclude(t.getEnvelopeInternal())},interfaces_:function(){return[]},getClass:function(){return as}}),e(us.prototype,{getErrorType:function(){return this.errorType},getMessage:function(){return us.errMsg[this.errorType]},getCoordinate:function(){return this.pt},toString:function(){var t=\"\";return null!==this.pt&&(t=\" at or near point \"+this.pt),this.getMessage()+t},interfaces_:function(){return[]},getClass:function(){return us}}),us.ERROR=0,us.REPEATED_POINT=1,us.HOLE_OUTSIDE_SHELL=2,us.NESTED_HOLES=3,us.DISCONNECTED_INTERIOR=4,us.SELF_INTERSECTION=5,us.RING_SELF_INTERSECTION=6,us.NESTED_SHELLS=7,us.DUPLICATE_RINGS=8,us.TOO_FEW_POINTS=9,us.INVALID_COORDINATE=10,us.RING_NOT_CLOSED=11,us.errMsg=[\"Topology Validation Error\",\"Repeated Point\",\"Hole lies outside shell\",\"Holes are nested\",\"Interior is disconnected\",\"Self-intersection\",\"Ring Self-intersection\",\"Nested shells\",\"Duplicate Rings\",\"Too few distinct points in geometry component\",\"Invalid Coordinate\",\"Ring is not closed\"],e(ls.prototype,{checkInvalidCoordinates:function(){if(arguments[0]instanceof Array){for(var t=arguments[0],e=0;e<t.length;e++)if(!ls.isValid(t[e]))return this.validErr=new us(us.INVALID_COORDINATE,t[e]),null}else if(arguments[0]instanceof Tt){var n=arguments[0];if(this.checkInvalidCoordinates(n.getExteriorRing().getCoordinates()),null!==this.validErr)return null;for(var e=0;e<n.getNumInteriorRing();e++)if(this.checkInvalidCoordinates(n.getInteriorRingN(e).getCoordinates()),null!==this.validErr)return null}},checkHolesNotNested:function(t,e){for(var n=new as(e),i=0;i<t.getNumInteriorRing();i++){var r=t.getInteriorRingN(i);n.add(r)}var s=n.isNonNested();s||(this.validErr=new us(us.NESTED_HOLES,n.getNestedPoint()))},checkConsistentArea:function(t){var e=new os(t),n=e.isNodeConsistentArea();return n?void(e.hasDuplicateRings()&&(this.validErr=new us(us.DUPLICATE_RINGS,e.getInvalidPoint()))):(this.validErr=new us(us.SELF_INTERSECTION,e.getInvalidPoint()),null)},isValid:function(){return this.checkValid(this.parentGeometry),null===this.validErr},checkShellInsideHole:function(t,e,n){var i=t.getCoordinates(),r=e.getCoordinates(),s=ls.findPtNotNode(i,e,n);if(null!==s){var o=he.isPointInRing(s,r);if(!o)return s}var a=ls.findPtNotNode(r,t,n);if(null!==a){var u=he.isPointInRing(a,i);return u?a:null}return f.shouldNeverReachHere(\"points in shell and hole appear to be equal\"),null},checkNoSelfIntersectingRings:function(t){for(var e=t.getEdgeIterator();e.hasNext();){var n=e.next();if(this.checkNoSelfIntersectingRing(n.getEdgeIntersectionList()),null!==this.validErr)return null}},checkConnectedInteriors:function(t){var e=new Kr(t);e.isInteriorsConnected()||(this.validErr=new us(us.DISCONNECTED_INTERIOR,e.getCoordinate()))},checkNoSelfIntersectingRing:function(t){for(var e=new at,n=!0,i=t.iterator();i.hasNext();){var r=i.next();if(n)n=!1;else{if(e.contains(r.coord))return this.validErr=new us(us.RING_SELF_INTERSECTION,r.coord),null;e.add(r.coord)}}},checkHolesInShell:function(t,e){for(var n=t.getExteriorRing(),i=new is(n),r=0;r<t.getNumInteriorRing();r++){var s=t.getInteriorRingN(r),o=ls.findPtNotNode(s.getCoordinates(),n,e);if(null===o)return null;var a=!i.isInside(o);if(a)return this.validErr=new us(us.HOLE_OUTSIDE_SHELL,o),null}},checkTooFewPoints:function(t){return t.hasTooFewPoints()?(this.validErr=new us(us.TOO_FEW_POINTS,t.getInvalidPoint()),null):void 0},getValidationError:function(){return this.checkValid(this.parentGeometry),this.validErr},checkValid:function(){if(arguments[0]instanceof Lt){var t=arguments[0];this.checkInvalidCoordinates(t.getCoordinates())}else if(arguments[0]instanceof Pt){var e=arguments[0];this.checkInvalidCoordinates(e.getCoordinates())}else if(arguments[0]instanceof bt){var n=arguments[0];if(this.checkInvalidCoordinates(n.getCoordinates()),null!==this.validErr)return null;if(this.checkClosedRing(n),null!==this.validErr)return null;var i=new $n(0,n);if(this.checkTooFewPoints(i),null!==this.validErr)return null;var r=new ae;i.computeSelfNodes(r,!0,!0),this.checkNoSelfIntersectingRings(i)}else if(arguments[0]instanceof St){var s=arguments[0];if(this.checkInvalidCoordinates(s.getCoordinates()),null!==this.validErr)return null;var i=new $n(0,s);this.checkTooFewPoints(i)}else if(arguments[0]instanceof Tt){var o=arguments[0];if(this.checkInvalidCoordinates(o),null!==this.validErr)return null;if(this.checkClosedRings(o),null!==this.validErr)return null;var i=new $n(0,o);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;if(this.checkHolesInShell(o,i),null!==this.validErr)return null;if(this.checkHolesNotNested(o,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof Ot){for(var a=arguments[0],u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkInvalidCoordinates(l),null!==this.validErr)return null;if(this.checkClosedRings(l),null!==this.validErr)return null}var i=new $n(0,a);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;for(var u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkHolesInShell(l,i),null!==this.validErr)return null}for(var u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkHolesNotNested(l,i),null!==this.validErr)return null}if(this.checkShellsNotNested(a,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof ft)for(var h=arguments[0],u=0;u<h.getNumGeometries();u++){var c=h.getGeometryN(u);if(this.checkValid(c),null!==this.validErr)return null}else if(arguments[0]instanceof B){var f=arguments[0];if(this.validErr=null,f.isEmpty())return null;if(f instanceof Lt)this.checkValid(f);else if(f instanceof Pt)this.checkValid(f);else if(f instanceof bt)this.checkValid(f);else if(f instanceof St)this.checkValid(f);else if(f instanceof Tt)this.checkValid(f);else if(f instanceof Ot)this.checkValid(f);else{if(!(f instanceof ft))throw new UnsupportedOperationException(f.getClass().getName());this.checkValid(f)}}},setSelfTouchingRingFormingHoleValid:function(t){this.isSelfTouchingRingFormingHoleValid=t},checkShellNotNested:function(t,e,n){var i=t.getCoordinates(),r=e.getExteriorRing(),s=r.getCoordinates(),o=ls.findPtNotNode(i,r,n);if(null===o)return null;var a=he.isPointInRing(o,s);if(!a)return null;if(e.getNumInteriorRing()<=0)return this.validErr=new us(us.NESTED_SHELLS,o),null;for(var u=null,l=0;l<e.getNumInteriorRing();l++){var h=e.getInteriorRingN(l);if(u=this.checkShellInsideHole(t,h,n),null===u)return null}this.validErr=new us(us.NESTED_SHELLS,u)},checkClosedRings:function(t){if(this.checkClosedRing(t.getExteriorRing()),null!==this.validErr)return null;for(var e=0;e<t.getNumInteriorRing();e++)if(this.checkClosedRing(t.getInteriorRingN(e)),null!==this.validErr)return null},checkClosedRing:function(t){if(!t.isClosed()){var e=null;t.getNumPoints()>=1&&(e=t.getCoordinateN(0)),this.validErr=new us(us.RING_NOT_CLOSED,e)}},checkShellsNotNested:function(t,e){for(var n=0;n<t.getNumGeometries();n++)for(var i=t.getGeometryN(n),r=i.getExteriorRing(),s=0;s<t.getNumGeometries();s++)if(n!==s){var o=t.getGeometryN(s);if(this.checkShellNotNested(r,o,e),null!==this.validErr)return null}},interfaces_:function(){return[]},getClass:function(){return ls}}),ls.findPtNotNode=function(t,e,n){for(var i=n.findEdge(e),r=i.getEdgeIntersectionList(),s=0;s<t.length;s++){var o=t[s];if(!r.isIntersection(o))return o}return null},ls.isValid=function(){if(arguments[0]instanceof B){var t=arguments[0],e=new ls(t);return e.isValid()}if(arguments[0]instanceof g){var n=arguments[0];return r.isNaN(n.x)?!1:r.isInfinite(n.x)?!1:r.isNaN(n.y)?!1:!r.isInfinite(n.y)}};var bo=Object.freeze({IsValidOp:ls}),Oo=Object.freeze({BoundaryOp:dt,IsSimpleOp:Gi,buffer:Co,distance:So,linemerge:wo,overlay:Lo,polygonize:Ro,relate:To,union:Po,valid:bo});h(hs,_t.CoordinateOperation),e(hs.prototype,{editCoordinates:function(t,e){if(0===t.length)return null;for(var n=new Array(t.length).fill(null),i=0;i<t.length;i++){var r=new g(t[i]);this.targetPM.makePrecise(r),n[i]=r}var s=new N(n,!1),o=s.toCoordinateArray(),a=0;e instanceof St&&(a=2),e instanceof bt&&(a=4);var u=n;return this.removeCollapsed&&(u=null),o.length<a?u:o},interfaces_:function(){return[]},getClass:function(){return hs}}),e(cs.prototype,{fixPolygonalTopology:function(t){var e=t;this.changePrecisionModel||(e=this.changePM(t,this.targetPM));var n=e.buffer(0),i=n;return this.changePrecisionModel||(i=t.getFactory().createGeometry(n)),i},reducePointwise:function(t){var e=null;if(this.changePrecisionModel){var n=this.createFactory(t.getFactory(),this.targetPM);e=new _t(n)}else e=new _t;var i=this.removeCollapsed;t.getDimension()>=2&&(i=!0);var r=e.edit(t,new hs(this.targetPM,i));return r},changePM:function(t,e){var n=this.createEditor(t.getFactory(),e);return n.edit(t,new _t.NoOpGeometryOperation)},setRemoveCollapsedComponents:function(t){this.removeCollapsed=t},createFactory:function(t,e){var n=new ie(e,t.getSRID(),t.getCoordinateSequenceFactory());return n},setChangePrecisionModel:function(t){this.changePrecisionModel=t},reduce:function(t){var e=this.reducePointwise(t);return this.isPointwise?e:R(e,Rt)?e.isValid()?e:this.fixPolygonalTopology(e):e},setPointwise:function(t){this.isPointwise=t},createEditor:function(t,e){if(t.getPrecisionModel()===e)return new _t;var n=this.createFactory(t,e),i=new _t(n);return i},interfaces_:function(){return[]},getClass:function(){return cs}}),cs.reduce=function(t,e){var n=new cs(e);return n.reduce(t)},cs.reducePointwise=function(t,e){var n=new cs(e);return n.setPointwise(!0),n.reduce(t)};var _o=Object.freeze({GeometryPrecisionReducer:cs});e(fs.prototype,{simplifySection:function(t,e){if(t+1===e)return null;this.seg.p0=this.pts[t],this.seg.p1=this.pts[e];for(var n=-1,i=t,r=t+1;e>r;r++){var s=this.seg.distance(this.pts[r]);s>n&&(n=s,i=r)}if(n<=this.distanceTolerance)for(var r=t+1;e>r;r++)this.usePt[r]=!1;else this.simplifySection(t,i),this.simplifySection(i,e)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(){this.usePt=new Array(this.pts.length).fill(null);for(var t=0;t<this.pts.length;t++)this.usePt[t]=!0;this.simplifySection(0,this.pts.length-1);for(var e=new N,t=0;t<this.pts.length;t++)this.usePt[t]&&e.add(new g(this.pts[t]));return e.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return fs}}),fs.simplify=function(t,e){var n=new fs(t);return n.setDistanceTolerance(e),n.simplify()},e(gs.prototype,{setEnsureValid:function(t){this.isEnsureValidTopology=t},getResultGeometry:function(){return this.inputGeom.isEmpty()?this.inputGeom.copy():new ds(this.isEnsureValidTopology,this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(0>t)throw new i(\"Tolerance must be non-negative\");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return gs}}),gs.simplify=function(t,e){var n=new gs(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(ds,xe),e(ds.prototype,{transformPolygon:function(t,e){if(t.isEmpty())return null;var n=xe.prototype.transformPolygon.call(this,t,e);return e instanceof Ot?n:this.createValidArea(n)},createValidArea:function(t){return this.isEnsureValidTopology?t.buffer(0):t},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=null;return i=0===n.length?new Array(0).fill(null):fs.simplify(n,this.distanceTolerance),this.factory.getCoordinateSequenceFactory().create(i)},transformMultiPolygon:function(t,e){var n=xe.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformLinearRing:function(t,e){var n=e instanceof Tt,i=xe.prototype.transformLinearRing.call(this,t,e);return!n||i instanceof bt?i:null},interfaces_:function(){return[]},getClass:function(){return ds}}),gs.DPTransformer=ds,h(ps,ce),e(ps.prototype,{getIndex:function(){return this.index},getParent:function(){return this.parent},interfaces_:function(){return[]},getClass:function(){return ps}}),e(vs.prototype,{addToResult:function(t){this.resultSegs.add(t)},asLineString:function(){return this.parentLine.getFactory().createLineString(vs.extractCoordinates(this.resultSegs))},getResultSize:function(){var t=this.resultSegs.size();return 0===t?0:t+1},getParent:function(){return this.parentLine},getSegment:function(t){return this.segs[t]},getParentCoordinates:function(){return this.parentLine.getCoordinates()},getMinimumSize:function(){return this.minimumSize},asLinearRing:function(){return this.parentLine.getFactory().createLinearRing(vs.extractCoordinates(this.resultSegs))},getSegments:function(){return this.segs},init:function(){var t=this.parentLine.getCoordinates();this.segs=new Array(t.length-1).fill(null);for(var e=0;e<t.length-1;e++){var n=new ps(t[e],t[e+1],this.parentLine,e);this.segs[e]=n}},getResultCoordinates:function(){return vs.extractCoordinates(this.resultSegs)},interfaces_:function(){return[]},getClass:function(){return vs}}),vs.extractCoordinates=function(t){for(var e=new Array(t.size()+1).fill(null),n=null,i=0;i<t.size();i++)n=t.get(i),e[i]=n.p0;return e[e.length-1]=n.p1,e},e(ms.prototype,{remove:function(t){this.index.remove(new C(t.p0,t.p1),t)},add:function(){if(arguments[0]instanceof vs)for(var t=arguments[0],e=t.getSegments(),n=0;n<e.length;n++){var i=e[n];this.add(i)}else if(arguments[0]instanceof ce){var r=arguments[0];this.index.insert(new C(r.p0,r.p1),r)}},query:function(t){var e=new C(t.p0,t.p1),n=new ys(t);this.index.query(e,n);var i=n.getItems();return i},interfaces_:function(){return[]},getClass:function(){return ms}}),e(ys.prototype,{visitItem:function(t){var e=t;C.intersects(e.p0,e.p1,this.querySeg.p0,this.querySeg.p1)&&this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[Ae]},getClass:function(){return ys}}),e(xs.prototype,{flatten:function(t,e){var n=this.linePts[t],i=this.linePts[e],r=new ce(n,i);return this.remove(this.line,t,e),this.outputIndex.add(r),r},hasBadIntersection:function(t,e,n){return this.hasBadOutputIntersection(n)?!0:!!this.hasBadInputIntersection(t,e,n)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplifySection:function(t,e,n){n+=1;var i=new Array(2).fill(null);if(t+1===e){var r=this.line.getSegment(t);return this.line.addToResult(r),null}var s=!0;if(this.line.getResultSize()<this.line.getMinimumSize()){var o=n+1;o<this.line.getMinimumSize()&&(s=!1)}var a=new Array(1).fill(null),u=this.findFurthestPoint(this.linePts,t,e,a);a[0]>this.distanceTolerance&&(s=!1);var l=new ce;if(l.p0=this.linePts[t],l.p1=this.linePts[e],i[0]=t,i[1]=e,this.hasBadIntersection(this.line,i,l)&&(s=!1),s){var r=this.flatten(t,e);return this.line.addToResult(r),null}this.simplifySection(t,u,n),this.simplifySection(u,e,n)},hasBadOutputIntersection:function(t){for(var e=this.outputIndex.query(t),n=e.iterator();n.hasNext();){var i=n.next();if(this.hasInteriorIntersection(i,t))return!0}return!1},findFurthestPoint:function(t,e,n,i){var r=new ce;r.p0=t[e],r.p1=t[n];for(var s=-1,o=e,a=e+1;n>a;a++){var u=t[a],l=r.distance(u);l>s&&(s=l,o=a)}return i[0]=s,o},simplify:function(t){this.line=t,this.linePts=t.getParentCoordinates(),this.simplifySection(0,this.linePts.length-1,0)},remove:function(t,e,n){for(var i=e;n>i;i++){var r=t.getSegment(i);this.inputIndex.remove(r)}},hasInteriorIntersection:function(t,e){return this.li.computeIntersection(t.p0,t.p1,e.p0,e.p1),this.li.isInteriorIntersection()},hasBadInputIntersection:function(t,e,n){for(var i=this.inputIndex.query(n),r=i.iterator();r.hasNext();){var s=r.next();if(this.hasInteriorIntersection(s,n)){if(xs.isInLineSection(t,e,s))continue;return!0}}return!1},interfaces_:function(){return[]},getClass:function(){return xs}}),xs.isInLineSection=function(t,e,n){if(n.getParent()!==t.getParent())return!1;var i=n.getIndex();return i>=e[0]&&i<e[1]},e(Es.prototype,{setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(t){for(var e=t.iterator();e.hasNext();)this.inputIndex.add(e.next());for(var e=t.iterator();e.hasNext();){var n=new xs(this.inputIndex,this.outputIndex);n.setDistanceTolerance(this.distanceTolerance),n.simplify(e.next())}},interfaces_:function(){return[]},getClass:function(){return Es}}),e(Is.prototype,{getResultGeometry:function(){if(this.inputGeom.isEmpty())return this.inputGeom.copy();this.linestringMap=new te,this.inputGeom.apply(new Cs(this)),this.lineSimplifier.simplify(this.linestringMap.values());var t=new Ns(this.linestringMap).transform(this.inputGeom);return t},setDistanceTolerance:function(t){if(0>t)throw new i(\"Tolerance must be non-negative\");this.lineSimplifier.setDistanceTolerance(t)},interfaces_:function(){return[]},getClass:function(){return Is}}),Is.simplify=function(t,e){var n=new Is(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(Ns,xe),e(Ns.prototype,{transformCoordinates:function(t,e){if(0===t.size())return null;if(e instanceof St){var n=this.linestringMap.get(e);return this.createCoordinateSequence(n.getResultCoordinates())}return xe.prototype.transformCoordinates.call(this,t,e)},interfaces_:function(){return[]},getClass:function(){return Ns}}),e(Cs.prototype,{filter:function(t){if(t instanceof St){var e=t;if(e.isEmpty())return null;var n=e.isClosed()?4:2,i=new vs(e,n);this.tps.linestringMap.put(e,i)}},interfaces_:function(){return[q]},getClass:function(){return Cs}}),Is.LineStringTransformer=Ns,Is.LineStringMapBuilderFilter=Cs;var Mo=Object.freeze({DouglasPeuckerSimplifier:gs,TopologyPreservingSimplifier:Is});e(Ss.prototype,{splitAt:function(){if(1===arguments.length){var t=arguments[0],e=this.minimumLen/this.segLen;if(t.distance(this.seg.p0)<this.minimumLen)return this.splitPt=this.seg.pointAlong(e),null;if(t.distance(this.seg.p1)<this.minimumLen)return this.splitPt=Ss.pointAlongReverse(this.seg,e),null;this.splitPt=t}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.getConstrainedLength(n),s=r/this.segLen;i.equals2D(this.seg.p0)?this.splitPt=this.seg.pointAlong(s):this.splitPt=Ss.pointAlongReverse(this.seg,s)}},setMinimumLength:function(t){this.minimumLen=t},getConstrainedLength:function(t){return t<this.minimumLen?this.minimumLen:t},getSplitPoint:function(){return this.splitPt},interfaces_:function(){return[]},getClass:function(){return Ss}}),Ss.pointAlongReverse=function(t,e){var n=new g;return n.x=t.p1.x-e*(t.p1.x-t.p0.x),n.y=t.p1.y-e*(t.p1.y-t.p0.y),n},e(ws.prototype,{findSplitPoint:function(t,e){},interfaces_:function(){return[]},getClass:function(){return ws}}),e(Ls.prototype,{findSplitPoint:function(t,e){var n=t.getLineSegment(),i=n.getLength(),r=i/2,s=new Ss(n),o=Ls.projectedSplitPoint(t,e),a=2*o.distance(e)*.8,u=a;return u>r&&(u=r),s.setMinimumLength(u),s.splitAt(o),s.getSplitPoint()},interfaces_:function(){return[ws]},getClass:function(){return Ls}}),Ls.projectedSplitPoint=function(t,e){var n=t.getLineSegment(),i=n.project(e);return i},e(Rs.prototype,{interfaces_:function(){return[]},getClass:function(){return Rs}}),Rs.triArea=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x)},Rs.isInCircleDDNormalized=function(t,e,n,i){var r=_.valueOf(t.x).selfSubtract(i.x),s=_.valueOf(t.y).selfSubtract(i.y),o=_.valueOf(e.x).selfSubtract(i.x),a=_.valueOf(e.y).selfSubtract(i.y),u=_.valueOf(n.x).selfSubtract(i.x),l=_.valueOf(n.y).selfSubtract(i.y),h=r.multiply(a).selfSubtract(o.multiply(s)),c=o.multiply(l).selfSubtract(u.multiply(a)),f=u.multiply(s).selfSubtract(r.multiply(l)),g=r.multiply(r).selfAdd(s.multiply(s)),d=o.multiply(o).selfAdd(a.multiply(a)),p=u.multiply(u).selfAdd(l.multiply(l)),v=g.selfMultiply(c).selfAdd(d.selfMultiply(f)).selfAdd(p.selfMultiply(h)),m=v.doubleValue()>0;return m},Rs.checkRobustInCircle=function(t,e,n,i){var r=Rs.isInCircleNonRobust(t,e,n,i),s=Rs.isInCircleDDSlow(t,e,n,i),o=Rs.isInCircleCC(t,e,n,i),a=ci.circumcentre(t,e,n);A.out.println(\"p radius diff a = \"+Math.abs(i.distance(a)-t.distance(a))/t.distance(a)),r===s&&r===o||(A.out.println(\"inCircle robustness failure (double result = \"+r+\", DD result = \"+s+\", CC result = \"+o+\")\"),A.out.println(se.toLineString(new Gt([t,e,n,i]))),A.out.println(\"Circumcentre = \"+se.toPoint(a)+\" radius = \"+t.distance(a)),A.out.println(\"p radius diff a = \"+Math.abs(i.distance(a)/t.distance(a)-1)),A.out.println(\"p radius diff b = \"+Math.abs(i.distance(a)/e.distance(a)-1)),A.out.println(\"p radius diff c = \"+Math.abs(i.distance(a)/n.distance(a)-1)),A.out.println())},Rs.isInCircleDDFast=function(t,e,n,i){var r=_.sqr(t.x).selfAdd(_.sqr(t.y)).selfMultiply(Rs.triAreaDDFast(e,n,i)),s=_.sqr(e.x).selfAdd(_.sqr(e.y)).selfMultiply(Rs.triAreaDDFast(t,n,i)),o=_.sqr(n.x).selfAdd(_.sqr(n.y)).selfMultiply(Rs.triAreaDDFast(t,e,i)),a=_.sqr(i.x).selfAdd(_.sqr(i.y)).selfMultiply(Rs.triAreaDDFast(t,e,n)),u=r.selfSubtract(s).selfAdd(o).selfSubtract(a),l=u.doubleValue()>0;return l},Rs.isInCircleCC=function(t,e,n,i){var r=ci.circumcentre(t,e,n),s=t.distance(r),o=i.distance(r)-s;return 0>=o},Rs.isInCircleNormalized=function(t,e,n,i){var r=t.x-i.x,s=t.y-i.y,o=e.x-i.x,a=e.y-i.y,u=n.x-i.x,l=n.y-i.y,h=r*a-o*s,c=o*l-u*a,f=u*s-r*l,g=r*r+s*s,d=o*o+a*a,p=u*u+l*l,v=g*c+d*f+p*h;return v>0},Rs.isInCircleDDSlow=function(t,e,n,i){var r=_.valueOf(i.x),s=_.valueOf(i.y),o=_.valueOf(t.x),a=_.valueOf(t.y),u=_.valueOf(e.x),l=_.valueOf(e.y),h=_.valueOf(n.x),c=_.valueOf(n.y),f=o.multiply(o).add(a.multiply(a)).multiply(Rs.triAreaDDSlow(u,l,h,c,r,s)),g=u.multiply(u).add(l.multiply(l)).multiply(Rs.triAreaDDSlow(o,a,h,c,r,s)),d=h.multiply(h).add(c.multiply(c)).multiply(Rs.triAreaDDSlow(o,a,u,l,r,s)),p=r.multiply(r).add(s.multiply(s)).multiply(Rs.triAreaDDSlow(o,a,u,l,h,c)),v=f.subtract(g).add(d).subtract(p),m=v.doubleValue()>0;\nreturn m},Rs.isInCircleNonRobust=function(t,e,n,i){var r=(t.x*t.x+t.y*t.y)*Rs.triArea(e,n,i)-(e.x*e.x+e.y*e.y)*Rs.triArea(t,n,i)+(n.x*n.x+n.y*n.y)*Rs.triArea(t,e,i)-(i.x*i.x+i.y*i.y)*Rs.triArea(t,e,n)>0;return r},Rs.isInCircleRobust=function(t,e,n,i){return Rs.isInCircleNormalized(t,e,n,i)},Rs.triAreaDDSlow=function(t,e,n,i,r,s){return n.subtract(t).multiply(s.subtract(e)).subtract(i.subtract(e).multiply(r.subtract(t)))},Rs.triAreaDDFast=function(t,e,n){var i=_.valueOf(e.x).selfSubtract(t.x).selfMultiply(_.valueOf(n.y).selfSubtract(t.y)),r=_.valueOf(e.y).selfSubtract(t.y).selfMultiply(_.valueOf(n.x).selfSubtract(t.x));return i.selfSubtract(r)},e(Ts.prototype,{circleCenter:function(t,e){var n=new Ts(this.getX(),this.getY()),i=this.bisector(n,t),r=this.bisector(t,e),s=new F(i,r),o=null;try{o=new Ts(s.getX(),s.getY())}catch(i){if(!(i instanceof w))throw i;A.err.println(\"a: \"+n+\"  b: \"+t+\"  c: \"+e),A.err.println(i)}finally{}return o},dot:function(t){return this.p.x*t.getX()+this.p.y*t.getY()},magn:function(){return Math.sqrt(this.p.x*this.p.x+this.p.y*this.p.y)},getZ:function(){return this.p.z},bisector:function(t,e){var n=e.getX()-t.getX(),i=e.getY()-t.getY(),r=new F(t.getX()+n/2,t.getY()+i/2,1),s=new F(t.getX()-i+n/2,t.getY()+n+i/2,1);return new F(r,s)},equals:function(){if(1===arguments.length){var t=arguments[0];return this.p.x===t.getX()&&this.p.y===t.getY()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.p.distance(e.getCoordinate())<n}},getCoordinate:function(){return this.p},isInCircle:function(t,e,n){return Rs.isInCircleRobust(t.p,e.p,n.p,this.p)},interpolateZValue:function(t,e,n){var i=t.getX(),r=t.getY(),s=e.getX()-i,o=n.getX()-i,a=e.getY()-r,u=n.getY()-r,l=s*u-o*a,h=this.getX()-i,c=this.getY()-r,f=(u*h-o*c)/l,g=(-a*h+s*c)/l,d=t.getZ()+f*(e.getZ()-t.getZ())+g*(n.getZ()-t.getZ());return d},midPoint:function(t){var e=(this.p.x+t.getX())/2,n=(this.p.y+t.getY())/2,i=(this.p.z+t.getZ())/2;return new Ts(e,n,i)},rightOf:function(t){return this.isCCW(t.dest(),t.orig())},isCCW:function(t,e){return(t.p.x-this.p.x)*(e.p.y-this.p.y)-(t.p.y-this.p.y)*(e.p.x-this.p.x)>0},getX:function(){return this.p.x},crossProduct:function(t){return this.p.x*t.getY()-this.p.y*t.getX()},setZ:function(t){this.p.z=t},times:function(t){return new Ts(t*this.p.x,t*this.p.y)},cross:function(){return new Ts(this.p.y,-this.p.x)},leftOf:function(t){return this.isCCW(t.orig(),t.dest())},toString:function(){return\"POINT (\"+this.p.x+\" \"+this.p.y+\")\"},sub:function(t){return new Ts(this.p.x-t.getX(),this.p.y-t.getY())},getY:function(){return this.p.y},classify:function(t,e){var n=this,i=e.sub(t),r=n.sub(t),s=i.crossProduct(r);return s>0?Ts.LEFT:0>s?Ts.RIGHT:i.getX()*r.getX()<0||i.getY()*r.getY()<0?Ts.BEHIND:i.magn()<r.magn()?Ts.BEYOND:t.equals(n)?Ts.ORIGIN:e.equals(n)?Ts.DESTINATION:Ts.BETWEEN},sum:function(t){return new Ts(this.p.x+t.getX(),this.p.y+t.getY())},distance:function(t,e){return Math.sqrt(Math.pow(e.getX()-t.getX(),2)+Math.pow(e.getY()-t.getY(),2))},circumRadiusRatio:function(t,e){var n=this.circleCenter(t,e),i=this.distance(n,t),r=this.distance(this,t),s=this.distance(t,e);return r>s&&(r=s),s=this.distance(e,this),r>s&&(r=s),i/r},interfaces_:function(){return[]},getClass:function(){return Ts}}),Ts.interpolateZ=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=e.distance(n),r=t.distance(e),s=n.z-e.z,o=e.z+s*(r/i);return o}if(4===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2],h=arguments[3],c=u.x,f=u.y,g=l.x-c,d=h.x-c,p=l.y-f,v=h.y-f,m=g*v-d*p,y=a.x-c,x=a.y-f,E=(v*y-d*x)/m,I=(-p*y+g*x)/m,N=u.z+E*(l.z-u.z)+I*(h.z-u.z);return N}},Ts.LEFT=0,Ts.RIGHT=1,Ts.BEYOND=2,Ts.BEHIND=3,Ts.BETWEEN=4,Ts.ORIGIN=5,Ts.DESTINATION=6,h(Ps,Ts),e(Ps.prototype,{getConstraint:function(){return this.constraint},setOnConstraint:function(t){this._isOnConstraint=t},merge:function(t){t._isOnConstraint&&(this._isOnConstraint=!0,this.constraint=t.constraint)},isOnConstraint:function(){return this._isOnConstraint},setConstraint:function(t){this._isOnConstraint=!0,this.constraint=t},interfaces_:function(){return[]},getClass:function(){return Ps}}),e(bs.prototype,{equalsNonOriented:function(t){return this.equalsOriented(t)?!0:!!this.equalsOriented(t.sym())},toLineSegment:function(){return new ce(this.vertex.getCoordinate(),this.dest().getCoordinate())},dest:function(){return this.sym().orig()},oNext:function(){return this.next},equalsOriented:function(t){return!(!this.orig().getCoordinate().equals2D(t.orig().getCoordinate())||!this.dest().getCoordinate().equals2D(t.dest().getCoordinate()))},dNext:function(){return this.sym().oNext().sym()},lPrev:function(){return this.next.sym()},rPrev:function(){return this.sym().oNext()},rot:function(){return this._rot},oPrev:function(){return this._rot.next._rot},sym:function(){return this._rot._rot},setOrig:function(t){this.vertex=t},lNext:function(){return this.invRot().oNext().rot()},getLength:function(){return this.orig().getCoordinate().distance(this.dest().getCoordinate())},invRot:function(){return this._rot.sym()},setDest:function(t){this.sym().setOrig(t)},setData:function(t){this.data=t},getData:function(){return this.data},delete:function(){this._rot=null},orig:function(){return this.vertex},rNext:function(){return this._rot.next.invRot()},toString:function(){var t=this.vertex.getCoordinate(),e=this.dest().getCoordinate();return se.toLineString(t,e)},isLive:function(){return null!==this._rot},getPrimary:function(){return this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0?this:this.sym()},dPrev:function(){return this.invRot().oNext().invRot()},setNext:function(t){this.next=t},interfaces_:function(){return[]},getClass:function(){return bs}}),bs.makeEdge=function(t,e){var n=new bs,i=new bs,r=new bs,s=new bs;n._rot=i,i._rot=r,r._rot=s,s._rot=n,n.setNext(n),i.setNext(s),r.setNext(r),s.setNext(i);var o=n;return o.setOrig(t),o.setDest(e),o},bs.swap=function(t){var e=t.oPrev(),n=t.sym().oPrev();bs.splice(t,e),bs.splice(t.sym(),n),bs.splice(t,e.lNext()),bs.splice(t.sym(),n.lNext()),t.setOrig(e.dest()),t.setDest(n.dest())},bs.splice=function(t,e){var n=t.oNext().rot(),i=e.oNext().rot(),r=e.oNext(),s=t.oNext(),o=i.oNext(),a=n.oNext();t.setNext(r),e.setNext(s),n.setNext(o),i.setNext(a)},bs.connect=function(t,e){var n=bs.makeEdge(t.dest(),e.orig());return bs.splice(n,t.lNext()),bs.splice(n.sym(),e),n},e(Os.prototype,{insertSite:function(t){var e=this.subdiv.locate(t);if(this.subdiv.isVertexOfEdge(e,t))return e;this.subdiv.isOnEdge(e,t.getCoordinate())&&(e=e.oPrev(),this.subdiv.delete(e.oNext()));var n=this.subdiv.makeEdge(e.orig(),t);bs.splice(n,e);var i=n;do n=this.subdiv.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);for(;;){var r=e.oPrev();if(r.dest().rightOf(e)&&t.isInCircle(e.orig(),r.dest(),e.dest()))bs.swap(e),e=e.oPrev();else{if(e.oNext()===i)return n;e=e.oNext().lPrev()}}},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},interfaces_:function(){return[]},getClass:function(){return Os}}),e(_s.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return _s}}),e(Ms.prototype,{init:function(){this.lastEdge=this.findEdge()},locate:function(t){this.lastEdge.isLive()||this.init();var e=this.subdiv.locateFromEdge(t,this.lastEdge);return this.lastEdge=e,e},findEdge:function(){var t=this.subdiv.getEdges();return t.iterator().next()},interfaces_:function(){return[_s]},getClass:function(){return Ms}}),h(Ds,l),e(Ds.prototype,{getSegment:function(){return this.seg},interfaces_:function(){return[]},getClass:function(){return Ds}}),Ds.msgWithSpatial=function(t,e){return null!==e?t+\" [ \"+e+\" ]\":t},e(As.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return As}}),e(Fs.prototype,{getTriangleVertices:function(t){var e=new Bs;return this.visitTriangles(e,t),e.getTriangleVertices()},isFrameVertex:function(t){return t.equals(this.frameVertex[0])?!0:t.equals(this.frameVertex[1])?!0:!!t.equals(this.frameVertex[2])},isVertexOfEdge:function(t,e){return!(!e.equals(t.orig(),this.tolerance)&&!e.equals(t.dest(),this.tolerance))},connect:function(t,e){var n=bs.connect(t,e);return this.quadEdges.add(n),n},getVoronoiCellPolygon:function(t,e){var n=new I,i=t;do{var r=t.rot().orig().getCoordinate();n.add(r),t=t.oPrev()}while(t!==i);var s=new N;s.addAll(n,!1),s.closeRing(),s.size()<4&&(A.out.println(s),s.add(s.get(s.size()-1),!0));var o=s.toCoordinateArray(),a=e.createPolygon(e.createLinearRing(o),null),u=i.orig();return a.setUserData(u.getCoordinate()),a},setLocator:function(t){this.locator=t},initSubdiv:function(){var t=this.makeEdge(this.frameVertex[0],this.frameVertex[1]),e=this.makeEdge(this.frameVertex[1],this.frameVertex[2]);bs.splice(t.sym(),e);var n=this.makeEdge(this.frameVertex[2],this.frameVertex[0]);return bs.splice(e.sym(),n),bs.splice(n.sym(),t),t},isFrameBorderEdge:function(t){var e=new Array(3).fill(null);Fs.getTriangleEdges(t,e);var n=new Array(3).fill(null);Fs.getTriangleEdges(t.sym(),n);var i=t.lNext().dest();if(this.isFrameVertex(i))return!0;var r=t.sym().lNext().dest();return!!this.isFrameVertex(r)},makeEdge:function(t,e){var n=bs.makeEdge(t,e);return this.quadEdges.add(n),n},visitTriangles:function(t,e){this.visitedKey++;var n=new pe;n.push(this.startingEdge);for(var i=new J;!n.empty();){var r=n.pop();if(!i.contains(r)){var s=this.fetchTriangleToVisit(r,n,e,i);null!==s&&t.visit(s)}}},isFrameEdge:function(t){return!(!this.isFrameVertex(t.orig())&&!this.isFrameVertex(t.dest()))},isOnEdge:function(t,e){this.seg.setCoordinates(t.orig().getCoordinate(),t.dest().getCoordinate());var n=this.seg.distance(e);return n<this.edgeCoincidenceTolerance},getEnvelope:function(){return new C(this.frameEnv)},createFrame:function(t){var e=t.getWidth(),n=t.getHeight(),i=0;i=e>n?10*e:10*n,this.frameVertex[0]=new Ts((t.getMaxX()+t.getMinX())/2,t.getMaxY()+i),this.frameVertex[1]=new Ts(t.getMinX()-i,t.getMinY()-i),this.frameVertex[2]=new Ts(t.getMaxX()+i,t.getMinY()-i),this.frameEnv=new C(this.frameVertex[0].getCoordinate(),this.frameVertex[1].getCoordinate()),this.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate())},getTriangleCoordinates:function(t){var e=new zs;return this.visitTriangles(e,t),e.getTriangles()},getVertices:function(t){for(var e=new J,n=this.quadEdges.iterator();n.hasNext();){var i=n.next(),r=i.orig();!t&&this.isFrameVertex(r)||e.add(r);var s=i.dest();!t&&this.isFrameVertex(s)||e.add(s)}return e},fetchTriangleToVisit:function(t,e,n,i){var r=t,s=0,o=!1;do{this.triEdges[s]=r,this.isFrameEdge(r)&&(o=!0);var a=r.sym();i.contains(a)||e.push(a),i.add(r),s++,r=r.lNext()}while(r!==t);return o&&!n?null:this.triEdges},getEdges:function(){if(0===arguments.length)return this.quadEdges;if(1===arguments.length){for(var t=arguments[0],e=this.getPrimaryEdges(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var s=r.next();n[i++]=t.createLineString([s.orig().getCoordinate(),s.dest().getCoordinate()])}return t.createMultiLineString(n)}},getVertexUniqueEdges:function(t){for(var e=new I,n=new J,i=this.quadEdges.iterator();i.hasNext();){var r=i.next(),s=r.orig();n.contains(s)||(n.add(s),!t&&this.isFrameVertex(s)||e.add(r));var o=r.sym(),a=o.orig();n.contains(a)||(n.add(a),!t&&this.isFrameVertex(a)||e.add(o))}return e},getTriangleEdges:function(t){var e=new qs;return this.visitTriangles(e,t),e.getTriangleEdges()},getPrimaryEdges:function(t){this.visitedKey++;var e=new I,n=new pe;n.push(this.startingEdge);for(var i=new J;!n.empty();){var r=n.pop();if(!i.contains(r)){var s=r.getPrimary();!t&&this.isFrameEdge(s)||e.add(s),n.push(r.oNext()),n.push(r.sym().oNext()),i.add(r),i.add(r.sym())}}return e},delete:function(t){bs.splice(t,t.oPrev()),bs.splice(t.sym(),t.sym().oPrev());var e=t.sym(),n=t.rot(),i=t.rot().sym();this.quadEdges.remove(t),this.quadEdges.remove(e),this.quadEdges.remove(n),this.quadEdges.remove(i),t.delete(),e.delete(),n.delete(),i.delete()},locateFromEdge:function(t,e){for(var n=0,i=this.quadEdges.size(),r=e;;){if(n++,n>i)throw new Ds(r.toLineSegment());if(t.equals(r.orig())||t.equals(r.dest()))break;if(t.rightOf(r))r=r.sym();else if(t.rightOf(r.oNext())){if(t.rightOf(r.dPrev()))break;r=r.dPrev()}else r=r.oNext()}return r},getTolerance:function(){return this.tolerance},getVoronoiCellPolygons:function(t){this.visitTriangles(new Gs,!0);for(var e=new I,n=this.getVertexUniqueEdges(!1),i=n.iterator();i.hasNext();){var r=i.next();e.add(this.getVoronoiCellPolygon(r,t))}return e},getVoronoiDiagram:function(t){var e=this.getVoronoiCellPolygons(t);return t.createGeometryCollection(ie.toGeometryArray(e))},getTriangles:function(t){for(var e=this.getTriangleCoordinates(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var s=r.next();n[i++]=t.createPolygon(t.createLinearRing(s),null)}return t.createGeometryCollection(n)},insertSite:function(t){var e=this.locate(t);if(t.equals(e.orig(),this.tolerance)||t.equals(e.dest(),this.tolerance))return e;var n=this.makeEdge(e.orig(),t);bs.splice(n,e);var i=n;do n=this.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);return i},locate:function(){if(1===arguments.length){if(arguments[0]instanceof Ts){var t=arguments[0];return this.locator.locate(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.locator.locate(new Ts(e))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.locator.locate(new Ts(n));if(null===r)return null;var s=r;r.dest().getCoordinate().equals2D(n)&&(s=r.sym());var o=s;do{if(o.dest().getCoordinate().equals2D(i))return o;o=o.oNext()}while(o!==s);return null}},interfaces_:function(){return[]},getClass:function(){return Fs}}),Fs.getTriangleEdges=function(t,e){if(e[0]=t,e[1]=e[0].lNext(),e[2]=e[1].lNext(),e[2].lNext()!==e[0])throw new i(\"Edges do not form a triangle\")},e(Gs.prototype,{visit:function(t){for(var e=t[0].orig().getCoordinate(),n=t[1].orig().getCoordinate(),i=t[2].orig().getCoordinate(),r=ci.circumcentre(e,n,i),s=new Ts(r),o=0;3>o;o++)t[o].rot().setOrig(s)},interfaces_:function(){return[As]},getClass:function(){return Gs}}),e(qs.prototype,{getTriangleEdges:function(){return this.triList},visit:function(t){this.triList.add(t.clone())},interfaces_:function(){return[As]},getClass:function(){return qs}}),e(Bs.prototype,{visit:function(t){this.triList.add([t[0].orig(),t[1].orig(),t[2].orig()])},getTriangleVertices:function(){return this.triList},interfaces_:function(){return[As]},getClass:function(){return Bs}}),e(zs.prototype,{checkTriangleSize:function(t){var e=\"\";t.length>=2?e=se.toLineString(t[0],t[1]):t.length>=1&&(e=se.toPoint(t[0]))},visit:function(t){this.coordList.clear();for(var e=0;3>e;e++){var n=t[e].orig();this.coordList.add(n.getCoordinate())}if(this.coordList.size()>0){this.coordList.closeRing();var i=this.coordList.toCoordinateArray();if(4!==i.length)return null;this.triCoords.add(i)}},getTriangles:function(){return this.triCoords},interfaces_:function(){return[As]},getClass:function(){return zs}}),Fs.TriangleCircumcentreVisitor=Gs,Fs.TriangleEdgesListVisitor=qs,Fs.TriangleVertexListVisitor=Bs,Fs.TriangleCoordinatesVisitor=zs,Fs.EDGE_COINCIDENCE_TOL_FACTOR=1e3,e(Vs.prototype,{getLineSegment:function(){return this.ls},getEndZ:function(){var t=this.ls.getCoordinate(1);return t.z},getStartZ:function(){var t=this.ls.getCoordinate(0);return t.z},intersection:function(t){return this.ls.intersection(t.getLineSegment())},getStart:function(){return this.ls.getCoordinate(0)},getEnd:function(){return this.ls.getCoordinate(1)},getEndY:function(){var t=this.ls.getCoordinate(1);return t.y},getStartX:function(){var t=this.ls.getCoordinate(0);return t.x},equalsTopo:function(t){return this.ls.equalsTopo(t.getLineSegment())},getStartY:function(){var t=this.ls.getCoordinate(0);return t.y},setData:function(t){this.data=t},getData:function(){return this.data},getEndX:function(){var t=this.ls.getCoordinate(1);return t.x},toString:function(){return this.ls.toString()},interfaces_:function(){return[]},getClass:function(){return Vs}}),e(ks.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return ks}}),e(Ys.prototype,{isRepeated:function(){return this.count>1},getRight:function(){return this.right},getCoordinate:function(){return this.p},setLeft:function(t){this.left=t},getX:function(){return this.p.x},getData:function(){return this.data},getCount:function(){return this.count},getLeft:function(){return this.left},getY:function(){return this.p.y},increment:function(){this.count=this.count+1},setRight:function(t){this.right=t},interfaces_:function(){return[]},getClass:function(){return Ys}}),e(Us.prototype,{insert:function(){if(1===arguments.length){var t=arguments[0];return this.insert(t,null)}if(2===arguments.length){var e=arguments[0],n=arguments[1];if(null===this.root)return this.root=new Ys(e,n),this.root;if(this.tolerance>0){var i=this.findBestMatchNode(e);if(null!==i)return i.increment(),i}return this.insertExact(e,n)}},query:function(){var t=arguments,e=this;if(1===arguments.length){var n=arguments[0],i=new I;return this.query(n,i),i}if(2===arguments.length)if(arguments[0]instanceof C&&R(arguments[1],y))!function(){var n=t[0],i=t[1];e.queryNode(e.root,n,!0,{interfaces_:function(){return[ks]},visit:function(t){i.add(t)}})}();else if(arguments[0]instanceof C&&R(arguments[1],ks)){var r=arguments[0],s=arguments[1];this.queryNode(this.root,r,!0,s)}},queryNode:function(t,e,n,i){if(null===t)return null;var r=null,s=null,o=null;n?(r=e.getMinX(),s=e.getMaxX(),o=t.getX()):(r=e.getMinY(),s=e.getMaxY(),o=t.getY());var a=o>r,u=s>=o;a&&this.queryNode(t.getLeft(),e,!n,i),e.contains(t.getCoordinate())&&i.visit(t),u&&this.queryNode(t.getRight(),e,!n,i)},findBestMatchNode:function(t){var e=new Xs(t,this.tolerance);return this.query(e.queryEnvelope(),e),e.getNode()},isEmpty:function(){return null===this.root},insertExact:function(t,e){for(var n=this.root,i=this.root,r=!0,s=!0;null!==n;){if(null!==n){var o=t.distance(n.getCoordinate())<=this.tolerance;if(o)return n.increment(),n}s=r?t.x<n.getX():t.y<n.getY(),i=n,n=s?n.getLeft():n.getRight(),r=!r}this.numberOfNodes=this.numberOfNodes+1;var a=new Ys(t,e);return s?i.setLeft(a):i.setRight(a),a},interfaces_:function(){return[]},getClass:function(){return Us}}),Us.toCoordinates=function(){if(1===arguments.length){var t=arguments[0];return Us.toCoordinates(t,!1)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new N,r=e.iterator();r.hasNext();)for(var s=r.next(),o=n?s.getCount():1,a=0;o>a;a++)i.add(s.getCoordinate(),!0);return i.toCoordinateArray()}},e(Xs.prototype,{visit:function(t){var e=this.p.distance(t.getCoordinate()),n=e<=this.tolerance;if(!n)return null;var i=!1;(null===this.matchNode||e<this.matchDist||null!==this.matchNode&&e===this.matchDist&&t.getCoordinate().compareTo(this.matchNode.getCoordinate())<1)&&(i=!0),i&&(this.matchNode=t,this.matchDist=e)},queryEnvelope:function(){var t=new C(this.p);return t.expandBy(this.tolerance),t},getNode:function(){return this.matchNode},interfaces_:function(){return[ks]},getClass:function(){return Xs}}),Us.BestMatchVisitor=Xs,e(Hs.prototype,{getInitialVertices:function(){return this.initialVertices},getKDT:function(){return this.kdt},enforceConstraints:function(){this.addConstraintVertices();var t=0,e=0;do e=this.enforceGabriel(this.segments),t++;while(e>0&&t<Hs.MAX_SPLIT_ITER)},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},getVertexFactory:function(){return this.vertexFactory},getPointArray:function(){for(var t=new Array(this.initialVertices.size()+this.segVertices.size()).fill(null),e=0,n=this.initialVertices.iterator();n.hasNext();){var i=n.next();t[e++]=i.getCoordinate()}for(var r=this.segVertices.iterator();r.hasNext();){var i=r.next();t[e++]=i.getCoordinate()}return t},setConstraints:function(t,e){this.segments=t,this.segVertices=e},computeConvexHull:function(){var t=new ie,e=this.getPointArray(),n=new me(e,t);this.convexHull=n.getConvexHull()},addConstraintVertices:function(){this.computeConvexHull(),this.insertSites(this.segVertices)},findNonGabrielPoint:function(t){var e=t.getStart(),n=t.getEnd(),i=new g((e.x+n.x)/2,(e.y+n.y)/2),s=e.distance(i),o=new C(i);o.expandBy(s);for(var a=this.kdt.query(o),u=null,l=r.MAX_VALUE,h=a.iterator();h.hasNext();){var c=h.next(),f=c.getCoordinate();if(!f.equals2D(e)&&!f.equals2D(n)){var d=i.distance(f);if(s>d){var p=d;(null===u||l>p)&&(u=f,l=p)}}}return u},getConstraintSegments:function(){return this.segments},setSplitPointFinder:function(t){this.splitFinder=t},getConvexHull:function(){return this.convexHull},getTolerance:function(){return this.tolerance},enforceGabriel:function(t){for(var e=new I,n=0,i=new I,r=t.iterator();r.hasNext();){var s=r.next(),o=this.findNonGabrielPoint(s);if(null!==o){this.splitPt=this.splitFinder.findSplitPoint(s,o);var a=this.createVertex(this.splitPt,s),u=(this.insertSite(a),new Vs(s.getStartX(),s.getStartY(),s.getStartZ(),a.getX(),a.getY(),a.getZ(),s.getData())),l=new Vs(a.getX(),a.getY(),a.getZ(),s.getEndX(),s.getEndY(),s.getEndZ(),s.getData());e.add(u),e.add(l),i.add(s),n+=1}}return t.removeAll(i),t.addAll(e),n},createVertex:function(){if(1===arguments.length){var t=arguments[0],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(t,null):new Ps(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(n,i):new Ps(n),e.setOnConstraint(!0),e}},getSubdivision:function(){return this.subdiv},computeBoundingBox:function(){var t=Hs.computeVertexEnvelope(this.initialVertices),e=Hs.computeVertexEnvelope(this.segVertices),n=new C(t);n.expandToInclude(e);var i=.2*n.getWidth(),r=.2*n.getHeight(),s=Math.max(i,r);this.computeAreaEnv=new C(n),this.computeAreaEnv.expandBy(s)},setVertexFactory:function(t){this.vertexFactory=t},formInitialDelaunay:function(){this.computeBoundingBox(),this.subdiv=new Fs(this.computeAreaEnv,this.tolerance),this.subdiv.setLocator(new Ms(this.subdiv)),this.incDel=new Os(this.subdiv),this.insertSites(this.initialVertices)},insertSite:function(){if(arguments[0]instanceof Ps){var t=arguments[0],e=this.kdt.insert(t.getCoordinate(),t);if(e.isRepeated()){var n=e.getData();return n.merge(t),n}return this.incDel.insertSite(t),t}if(arguments[0]instanceof g){var i=arguments[0];this.insertSite(this.createVertex(i))}},interfaces_:function(){return[]},getClass:function(){return Hs}}),Hs.computeVertexEnvelope=function(t){for(var e=new C,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i.getCoordinate())}return e},Hs.MAX_SPLIT_ITER=99,e(Ws.prototype,{create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords),e=Ws.toVertices(this.siteCoords);this.subdiv=new Fs(t,this.tolerance);var n=new Os(this.subdiv);n.insertSites(e)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof B){var t=arguments[0];this.siteCoords=Ws.extractUniqueCoordinates(t)}else if(R(arguments[0],v)){var e=arguments[0];this.siteCoords=Ws.unique(H.toCoordinateArray(e))}},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},interfaces_:function(){return[]},getClass:function(){return Ws}}),Ws.extractUniqueCoordinates=function(t){if(null===t)return new N;var e=t.getCoordinates();return Ws.unique(e)},Ws.envelope=function(t){for(var e=new C,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i)}return e},Ws.unique=function(t){var e=H.copyDeep(t);ut.sort(e);var n=new N(e,!1);return n},Ws.toVertices=function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ts(i))}return e},e(js.prototype,{createSiteVertices:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();this.constraintVertexMap.containsKey(i)||e.add(new Ps(i))}return e},create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords),e=new I;null!==this.constraintLines&&(t.expandToInclude(this.constraintLines.getEnvelopeInternal()),this.createVertices(this.constraintLines),e=js.createConstraintSegments(this.constraintLines));var n=this.createSiteVertices(this.siteCoords),i=new Hs(n,this.tolerance);i.setConstraints(e,new I(this.constraintVertexMap.values())),i.formInitialDelaunay(),i.enforceConstraints(),this.subdiv=i.getSubdivision()},setTolerance:function(t){this.tolerance=t},setConstraints:function(t){this.constraintLines=t},setSites:function(t){this.siteCoords=Ws.extractUniqueCoordinates(t)},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},createVertices:function(t){for(var e=t.getCoordinates(),n=0;n<e.length;n++){var i=new Ps(e[n]);this.constraintVertexMap.put(e[n],i)}},interfaces_:function(){return[]},getClass:function(){return js}}),js.createConstraintSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=kn.getLines(t),n=new I,i=e.iterator();i.hasNext();){var r=i.next();js.createConstraintSegments(r,n)}return n}if(2===arguments.length)for(var s=arguments[0],o=arguments[1],a=s.getCoordinates(),i=1;i<a.length;i++)o.add(new Vs(a[i-1],a[i]))},e(Ks.prototype,{create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords);this.diagramEnv=t;var e=Math.max(this.diagramEnv.getWidth(),this.diagramEnv.getHeight());this.diagramEnv.expandBy(e),null!==this.clipEnv&&this.diagramEnv.expandToInclude(this.clipEnv);var n=Ws.toVertices(this.siteCoords);this.subdiv=new Fs(t,this.tolerance);var i=new Os(this.subdiv);i.insertSites(n)},getDiagram:function(t){this.create();var e=this.subdiv.getVoronoiDiagram(t);return Ks.clipGeometryCollection(e,this.diagramEnv)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof B){var t=arguments[0];this.siteCoords=Ws.extractUniqueCoordinates(t)}else if(R(arguments[0],v)){var e=arguments[0];this.siteCoords=Ws.unique(H.toCoordinateArray(e))}},setClipEnvelope:function(t){this.clipEnv=t},getSubdivision:function(){return this.create(),this.subdiv},interfaces_:function(){return[]},getClass:function(){return Ks}}),Ks.clipGeometryCollection=function(t,e){for(var n=t.getFactory().toGeometry(e),i=new I,r=0;r<t.getNumGeometries();r++){var s=t.getGeometryN(r),o=null;e.contains(s.getEnvelopeInternal())?o=s:e.intersects(s.getEnvelopeInternal())&&(o=n.intersection(s),o.setUserData(s.getUserData())),null===o||o.isEmpty()||i.add(o)}return t.getFactory().createGeometryCollection(ie.toGeometryArray(i))};var Do=Object.freeze({ConformingDelaunayTriangulationBuilder:js,DelaunayTriangulationBuilder:Ws,VoronoiDiagramBuilder:Ks});e(Zs.prototype,{interfaces_:function(){return[]},getClass:function(){return Zs}}),Zs.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return ii.createEmptyResult(ii.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.UNION)},e(B.prototype,{equalsTopo:function(t){return this.getEnvelopeInternal().equals(t.getEnvelopeInternal())?Yr.relate(this,t).isEquals(this.getDimension(),t.getDimension()):!1},union:function(){if(0===arguments.length)return jr.union(this);if(1===arguments.length){var t=arguments[0];return Zs.union(this,t)}},isValid:function(){return ls.isValid(this)},intersection:function(t){if(this.isEmpty()||t.isEmpty())return ii.createEmptyResult(ii.INTERSECTION,this,t,this.factory);if(this.isGeometryCollection()){var e=t;return hn.map(this,{interfaces_:function(){return[MapOp]},map:function(t){return t.intersection(e)}})}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.INTERSECTION)},covers:function(t){return Yr.covers(this,t)},coveredBy:function(t){return Yr.coveredBy(this,t)},touches:function(t){return Yr.touches(this,t)},intersects:function(t){return Yr.intersects(this,t)},within:function(t){return Yr.within(this,t)},overlaps:function(t){return Yr.overlaps(this,t)},disjoint:function(t){return Yr.disjoint(this,t)},crosses:function(t){return Yr.crosses(this,t)},buffer:function(){if(1===arguments.length){var t=arguments[0];return sr.bufferOp(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return sr.bufferOp(this,e,n)}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];return sr.bufferOp(this,i,r,s)}},convexHull:function(){return new me(this).getConvexHull()},relate:function(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return Yr.relate.apply(Yr,[this].concat(e))},getCentroid:function(){if(this.isEmpty())return this.factory.createPoint();var t=ge.getCentroid(this);return this.createPointFromInternalCoord(t,this)},getInteriorPoint:function(){if(this.isEmpty())return this.factory.createPoint();var t=null,e=this.getDimension();if(0===e){var n=new li(this);t=n.getInteriorPoint()}else if(1===e){var n=new ui(this);t=n.getInteriorPoint()}else{var n=new oi(this);t=n.getInteriorPoint()}return this.createPointFromInternalCoord(t,this)},symDifference:function(t){if(this.isEmpty()||t.isEmpty()){if(this.isEmpty()&&t.isEmpty())return ii.createEmptyResult(ii.SYMDIFFERENCE,this,t,this.factory);if(this.isEmpty())return t.copy();if(t.isEmpty())return this.copy()}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.SYMDIFFERENCE)},createPointFromInternalCoord:function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},toText:function(){var t=new se;return t.write(this)},toString:function(){this.toText()},contains:function(t){return Yr.contains(this,t)},difference:function(t){return this.isEmpty()?ii.createEmptyResult(ii.DIFFERENCE,this,t,this.factory):t.isEmpty()?this.copy():(this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.DIFFERENCE))},isSimple:function(){var t=new Gi(this);return t.isSimple()},isWithinDistance:function(t,e){var n=this.getEnvelopeInternal().distance(t.getEnvelopeInternal());return n>e?!1:hr.isWithinDistance(this,t,e)},distance:function(t){return hr.distance(this,t)},isEquivalentClass:function(t){return this.getClass()===t.getClass()}});var Ao=\"1.1.2 (248dab8)\";t.version=Ao,t.algorithm=co,t.densify=fo,t.dissolve=go,t.geom=lo,t.index=mo,t.io=Io,t.noding=No,t.operation=Oo,t.precision=_o,t.simplify=Mo,t.triangulate=Do});\n", "// look here for help http://svn.osgeo.org/grass/grass/branches/releasebranch_6_4/vector/v.overlay/main.c\n//must be array of polygons\n\n// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\n\nvar jsts = require('jsts');\n\n/**\n * Takes two {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {Feature<Polygon>} poly1 input polygon\n * @param {Feature<Polygon>} poly2 another input polygon\n * @return {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-82.574787, 35.594087],\n *       [-82.574787, 35.615581],\n *       [-82.545261, 35.615581],\n *       [-82.545261, 35.594087],\n *       [-82.574787, 35.594087]\n *     ]]\n *   }\n * };\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-82.560024, 35.585153],\n *       [-82.560024, 35.602602],\n *       [-82.52964, 35.602602],\n *       [-82.52964, 35.585153],\n *       [-82.560024, 35.585153]\n *     ]]\n *   }\n * };\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * var union = turf.union(poly1, poly2);\n *\n * //=polygons\n *\n * //=union\n */\nmodule.exports = function (poly1, poly2) {\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(poly1.geometry));\n    var b = reader.read(JSON.stringify(poly2.geometry));\n    var union = a.union(b);\n    var writer = new jsts.io.GeoJSONWriter();\n\n    union = writer.write(union);\n    return {\n        type: 'Feature',\n        geometry: union,\n        properties: poly1.properties\n    };\n};\n", "// 1. run tin on points\n// 2. calculate lenth of all edges and area of all triangles\n// 3. remove triangles that fail the max length test\n// 4. buffer the results slightly\n// 5. merge the results\nvar tin = require('turf-tin');\nvar union = require('turf-union');\nvar distance = require('turf-distance');\n\n/**\n * Takes a set of {@link Point|points} and returns a concave hull polygon.\n *\n * Internally, this uses [turf-tin](https://github.com/Turfjs/turf-tin) to generate geometries.\n *\n * @param {FeatureCollection<Point>} points input points\n * @param {number} maxEdge the size of an edge necessary for part of the\n * hull to become concave (in miles)\n * @param {string} units used for maxEdge distance (miles or kilometers)\n * @returns {Feature<Polygon>} a concave hull\n * @throws {Error} if maxEdge parameter is missing\n * @throws {Error} if units parameter is missing\n * @example\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.601226, 44.642643]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.591442, 44.651436]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.580799, 44.648749]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.573589, 44.641788]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.587665, 44.64533]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.595218, 44.64765]\n *       }\n *     }\n *   ]\n * };\n *\n * var hull = turf.concave(points, 1, 'miles');\n *\n * var resultFeatures = points.features.concat(hull);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nfunction concave(points, maxEdge, units) {\n    if (typeof maxEdge !== 'number') throw new Error('maxEdge parameter is required');\n    if (typeof units !== 'string') throw new Error('units parameter is required');\n\n    var tinPolys = tin(points);\n    var filteredPolys = tinPolys.features.filter(filterTriangles);\n    tinPolys.features = filteredPolys;\n\n    function filterTriangles(triangle) {\n        var pt1 = triangle.geometry.coordinates[0][0];\n        var pt2 = triangle.geometry.coordinates[0][1];\n        var pt3 = triangle.geometry.coordinates[0][2];\n        var dist1 = distance(pt1, pt2, units);\n        var dist2 = distance(pt2, pt3, units);\n        var dist3 = distance(pt1, pt3, units);\n        return (dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge);\n    }\n\n    return merge(tinPolys);\n}\n\nfunction merge(polygons) {\n    var merged = JSON.parse(JSON.stringify(polygons.features[0])),\n        features = polygons.features;\n\n    for (var i = 0, len = features.length; i < len; i++) {\n        var poly = features[i];\n        if (poly.geometry) {\n            merged = union(merged, poly);\n        }\n    }\n    return merged;\n}\n\nmodule.exports = concave;\n", "// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\nvar jsts = require('jsts');\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second\n * polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon>} poly1 input Polygon feaure\n * @param {Feature<Polygon>} poly2 Polygon feature to difference from `poly1`\n * @return {Feature<Polygon>} a Polygon feature showing the area of `poly1` excluding the area of `poly2`\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-46.738586, -23.596711],\n *       [-46.738586, -23.458207],\n *       [-46.560058, -23.458207],\n *       [-46.560058, -23.596711],\n *       [-46.738586, -23.596711]\n *     ]]\n *   }\n * };\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-46.650009, -23.631314],\n *       [-46.650009, -23.5237],\n *       [-46.509246, -23.5237],\n *       [-46.509246, -23.631314],\n *       [-46.650009, -23.631314]\n *     ]]\n *   }\n * };\n *\n * var differenced = turf.difference(poly1, poly2);\n * differenced.properties.fill = '#f00';\n *\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * //=polygons\n *\n * //=differenced\n */\n\nmodule.exports = function (p1, p2) {\n    var poly1 = JSON.parse(JSON.stringify(p1));\n    var poly2 = JSON.parse(JSON.stringify(p2));\n    if (poly1.type !== 'Feature') {\n        poly1 = {\n            type: 'Feature',\n            properties: {},\n            geometry: poly1\n        };\n    }\n    if (poly2.type !== 'Feature') {\n        poly2 = {\n            type: 'Feature',\n            properties: {},\n            geometry: poly2\n        };\n    }\n\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(poly1.geometry));\n    var b = reader.read(JSON.stringify(poly2.geometry));\n    var differenced = a.difference(b);\n\n    if (differenced.isEmpty()) return undefined;\n\n    var writer = new jsts.io.GeoJSONWriter();\n    var geojsonGeometry = writer.write(differenced);\n\n    poly1.geometry = differenced;\n\n    return {\n        type: 'Feature',\n        properties: poly1.properties,\n        geometry: geojsonGeometry\n    };\n};\n", "var inside = require('turf-inside');\n\n/**\n * Joins attributes FeatureCollection of polygons with a FeatureCollection of\n * points. Given an `inProperty` on points and an `outProperty` for polygons,\n * this finds every point that lies within each polygon, collects the `inProperty`\n * values from those points, and adds them as an array to `outProperty` on the\n * polygon.\n *\n * @name collect\n * @param {FeatureCollection<Polygon>} polygons polygons with values on which to aggregate\n * @param {FeatureCollection<Point>} points points to be aggregated\n * @param {string} inProperty property to be nested from\n * @param {string} outProperty property to be nested into\n * @return {FeatureCollection<Polygon>} polygons with properties listed based on `outField`\n * @example\n * var poly1 = polygon([[[0,0],[10,0],[10,10],[0,10],[0,0]]]);\n * var poly2 = polygon([[[10,0],[20,10],[20,20],[20,0],[10,0]]]);\n * var polyFC = featurecollection([poly1, poly2]);\n * var pt1 = point([5,5], {population: 200});\n * var pt2 = point([1,3], {population: 600});\n * var pt3 = point([14,2], {population: 100});\n * var pt4 = point([13,1], {population: 200});\n * var pt5 = point([19,7], {population: 300});\n * var ptFC = featurecollection([pt1, pt2, pt3, pt4, pt5]);\n * var aggregated = aggregate(polyFC, ptFC, 'population', 'values');\n *\n * aggregated.features[0].properties.values // => [200, 600]);\n */\nmodule.exports = function collect(polygons, points, inProperty, outProperty) {\n    polygons.features.forEach(function (poly) {\n        var values = points.features.filter(function (pt) {\n            return inside(pt, poly);\n        }).map(function (pt) {\n            return pt.properties[inProperty];\n        });\n\n        if (!poly.properties) {\n            poly.properties = {};\n        }\n\n        poly.properties[outProperty] = values;\n    });\n\n    return polygons;\n};\n", "var coordEach = require('turf-meta').coordEach;\n\n/**\n * Takes input features and flips all of their coordinates\n * from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {(Feature|FeatureCollection)} input input features\n * @returns {(Feature|FeatureCollection)} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [20.566406, 43.421008]\n *   }\n * };\n *\n * //=serbia\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //=saudiArabia\n */\nmodule.exports = function flip(input) {\n    // ensure that we don't modify features in-place and changes to the\n    // output do not change the previous feature, including changes to nested\n    // properties.\n    input = JSON.parse(JSON.stringify(input));\n\n    coordEach(input, function (coord) {\n        coord.reverse();\n    });\n    return input;\n};\n", "/*\n (c) 2017, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n(function () { 'use strict';\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = p1.x,\n        y = p1.y,\n        dx = p2.x - x,\n        dy = p2.y - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2.x;\n            y = p2.y;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n\n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n        index;\n\n    for (var i = first + 1; i < last; i++) {\n        var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n        simplified.push(points[index]);\n        if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n\n    var simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n\n    return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n\n    if (points.length <= 2) return points;\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n\n    return points;\n}\n\n// export as AMD module / Node module / browser or worker variable\nif (typeof define === 'function' && define.amd) define(function() { return simplify; });\nelse if (typeof module !== 'undefined') {\n    module.exports = simplify;\n    module.exports.default = simplify;\n} else if (typeof self !== 'undefined') self.simplify = simplify;\nelse window.simplify = simplify;\n\n})();\n", "var simplify = require('simplify-js');\n\n// supported GeoJSON geometries, used to check whether to wrap in simpleFeature()\nvar supportedTypes = ['LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Takes a {@link LineString} or {@link Polygon} and returns a simplified version. Internally uses [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification.\n *\n * @name simplify\n * @param {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} feature feature to be simplified\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create\n * a higher-quality simplification with a different algorithm\n * @return {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} a simplified feature\n * @example\n  * var feature = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-70.603637, -33.399918],\n *       [-70.614624, -33.395332],\n *       [-70.639343, -33.392466],\n *       [-70.659942, -33.394759],\n *       [-70.683975, -33.404504],\n *       [-70.697021, -33.419406],\n *       [-70.701141, -33.434306],\n *       [-70.700454, -33.446339],\n *       [-70.694274, -33.458369],\n *       [-70.682601, -33.465816],\n *       [-70.668869, -33.472117],\n *       [-70.646209, -33.473835],\n *       [-70.624923, -33.472117],\n *       [-70.609817, -33.468107],\n *       [-70.595397, -33.458369],\n *       [-70.587158, -33.442901],\n *       [-70.587158, -33.426283],\n *       [-70.590591, -33.414248],\n *       [-70.594711, -33.406224],\n *       [-70.603637, -33.399918]\n *     ]]\n *   }\n * };\n\n * var tolerance = 0.01;\n *\n * var simplified = turf.simplify(\n *  feature, tolerance, false);\n *\n * //=feature\n *\n * //=simplified\n */\nmodule.exports = function (feature, tolerance, highQuality) {\n    if (feature.type === 'Feature') {\n        return simpleFeature(\n            simplifyHelper(feature, tolerance, highQuality),\n            feature.properties);\n    } else if (feature.type === 'FeatureCollection') {\n        return {\n            type: 'FeatureCollection',\n            features: feature.features.map(function (f) {\n                var simplified = simplifyHelper(f, tolerance, highQuality);\n\n                // we create simpleFeature here because it doesn't apply to GeometryCollection\n                // so we can't create it at simplifyHelper()\n                if (supportedTypes.indexOf(simplified.type) > -1) {\n                    return simpleFeature(simplified, f.properties);\n                } else {\n                    return simplified;\n                }\n            })\n        };\n    } else if (feature.type === 'GeometryCollection') {\n        return {\n            type: 'GeometryCollection',\n            geometries: feature.geometries.map(function (g) {\n                if (supportedTypes.indexOf(g.type) > -1) {\n                    return simplifyHelper({\n                        type: 'Feature',\n                        geometry: g\n                    }, tolerance, highQuality);\n                }\n                return g;\n            })\n        };\n    } else {\n        return feature;\n    }\n};\n\n\nfunction simplifyHelper(feature, tolerance, highQuality) {\n    if (feature.geometry.type === 'LineString') {\n        return {\n            type: 'LineString',\n            coordinates: simplifyLine(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiLineString') {\n        return {\n            type: 'MultiLineString',\n            coordinates: feature.geometry.coordinates.map(function (lines) {\n                return simplifyLine(lines, tolerance, highQuality);\n            })\n        };\n    } else if (feature.geometry.type === 'Polygon') {\n        return {\n            type: 'Polygon',\n            coordinates: simplifyPolygon(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiPolygon') {\n        return {\n            type: 'MultiPolygon',\n            coordinates: feature.geometry.coordinates.map(function (rings) {\n                return simplifyPolygon(rings, tolerance, highQuality);\n            })\n        };\n    } else {\n        // unsupported geometry type supplied\n        return feature;\n    }\n}\n\n/*\n* returns true if ring's first coordinate is the same as its last\n*/\nfunction checkValidity(ring) {\n    if (ring.length < 3) {\n        return false;\n    //if the last point is the same as the first, it's not a triangle\n    } else if (ring.length === 3 &&\n      ((ring[2][0] === ring[0][0]) && (ring[2][1] === ring[0][1]))) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nfunction simpleFeature(geom, properties) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: properties\n    };\n}\n\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplify(coordinates.map(function (coord) {\n        return {x: coord[0], y: coord[1]};\n    }), tolerance, highQuality).map(function (coords) {\n        return [coords.x, coords.y];\n    });\n}\n\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return {x: coord[0], y: coord[1]};\n        });\n        if (pts.length < 4) {\n            throw new Error('Invalid polygon');\n        }\n        var simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        //remove 1 percent of tolerance until enough points to make a triangle\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (\n            (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0]) ||\n                (simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1])) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\n", "/* eslint-disable */\n\n /**\n   * BezierSpline\n   * https://github.com/leszekr/bezier-spline-js\n   *\n   * @private\n   * @copyright\n   * Copyright (c) 2013 Leszek Rybicki\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\nvar Spline = function (options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    // this is to ensure compatibility with the 2d version\n    for (var i = 0; i < this.length; i++) this.points[i].z = this.points[i].z || 0;\n    for (var i = 0; i < this.length - 1; i++) {\n        var p1 = this.points[i];\n        var p2 = this.points[i + 1];\n        this.centers.push({\n            x: (p1.x + p2.x) / 2,\n            y: (p1.y + p2.y) / 2,\n            z: (p1.z + p2.z) / 2\n        });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (var i = 0; i < this.centers.length - 1; i++) {\n        var p1 = this.centers[i];\n        var p2 = this.centers[i + 1];\n        var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n        var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n        var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n        this.controls.push([{\n            x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n            y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n            z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)},\n            {\n                x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n                y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n                z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)}]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n};\n\n  /*\n    Caches an array of equidistant (more or less) points on the curve.\n  */\nSpline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n    for (var t = 0; t < this.duration; t += 10) {\n        var step = this.pos(t);\n        var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n        if (dist > mindist) {\n            steps.push(t);\n            laststep = step;\n        }\n    }\n    return steps;\n};\n\n  /*\n    returns angle and speed in the given point in the curve\n  */\nSpline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n        angle:180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n        speed:Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n};\n\n  /*\n    Gets the position of the point, given time.\n\n    WARNING: The speed is not constant. The time it takes between control points is constant.\n\n    For constant speed, use Spline.steps[i];\n  */\nSpline.prototype.pos = function (time) {\n\n    function bezier(t, p1, c1, c2, p2) {\n        var B = function (t) {\n            var t2 = t * t, t3 = t2 * t;\n            return [(t3), (3 * t2 * (1 - t)), (3 * t * (1 - t) * (1 - t)), ((1 - t) * (1 - t) * (1 - t))];\n        };\n        var b = B(t);\n        var pos = {\n            x : p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n            y : p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n            z : p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n        };\n        return pos;\n    }\n    var t = time - this.delay;\n    if (t < 0) t = 0;\n    if (t > this.duration) t = this.duration - 1;\n    //t = t-this.delay;\n    var t2 = (t) / this.duration;\n    if (t2 >= 1) return this.points[this.length - 1];\n\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n};\n\nmodule.exports = Spline;\n", "var linestring = require('turf-helpers').lineString;\nvar Spline = require('./spline.js');\n\n/**\n * Takes a {@link LineString|line} and returns a curved version\n * by applying a [Bezier spline](http://en.wikipedia.org/wiki/B%C3%A9zier_spline)\n * algorithm.\n *\n * The bezier spline implementation is by [Leszek Rybicki](http://leszek.rybicki.cc/).\n *\n * @name bezier\n * @param {Feature<LineString>} line input LineString\n * @param {Number} [resolution=10000] time in milliseconds between points\n * @param {Number} [sharpness=0.85] a measure of how curvy the path should be between splines\n * @returns {Feature<LineString>} curved line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"stroke\": \"#f00\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-76.091308, 18.427501],\n *       [-76.695556, 18.729501],\n *       [-76.552734, 19.40443],\n *       [-74.61914, 19.134789],\n *       [-73.652343, 20.07657],\n *       [-73.157958, 20.210656]\n *     ]\n *   }\n * };\n *\n * var curved = turf.bezier(line);\n * curved.properties = { stroke: '#0f0' };\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [line, curved]\n * };\n *\n * //=result\n */\nmodule.exports = function (line, resolution, sharpness) {\n    var lineOut = linestring([]);\n\n    lineOut.properties = line.properties;\n\n    var spline = new Spline({\n        points: line.geometry.coordinates.map(function (pt) {\n            return {x: pt[0], y: pt[1]};\n        }),\n        duration: resolution,\n        sharpness: sharpness\n    });\n\n    for (var i = 0; i < spline.duration; i += 10) {\n        var pos = spline.pos(i);\n        if (Math.floor(i / 100) % 2 === 0) {\n            lineOut.geometry.coordinates.push([pos.x, pos.y]);\n        }\n    }\n\n    return lineOut;\n};\n", "var inside = require('turf-inside');\n\n/**\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and performs a spatial join.\n *\n * @name tag\n * @param {FeatureCollection<Point>} points input points\n * @param {FeatureCollection<Polygon>} polygons input polygons\n * @param {string} field property in `polygons` to add to joined Point features\n * @param {string} outField property in `points` in which to store joined property from `polygons\n * @return {FeatureCollection<Point>} points with `containingPolyId` property containing values from `polyId`\n * @example\n * var bbox = [0, 0, 10, 10];\n * // create a triangular grid of polygons\n * var triangleGrid = turf.triangleGrid(bbox, 50, 'miles');\n * triangleGrid.features.forEach(function(f) {\n *   f.properties.fill = '#' +\n *     (~~(Math.random() * 16)).toString(16) +\n *     (~~(Math.random() * 16)).toString(16) +\n *     (~~(Math.random() * 16)).toString(16);\n *   f.properties.stroke = 0;\n *   f.properties['fill-opacity'] = 1;\n * });\n * var randomPoints = turf.random('point', 30, {\n *   bbox: bbox\n * });\n * var both = turf.featurecollection(\n *   triangleGrid.features.concat(randomPoints.features));\n *\n * //=both\n *\n * var tagged = turf.tag(randomPoints, triangleGrid,\n *                       'fill', 'marker-color');\n *\n * //=tagged\n */\nmodule.exports = function (points, polygons, field, outField) {\n    // prevent mutations\n    points = JSON.parse(JSON.stringify(points));\n    polygons = JSON.parse(JSON.stringify(polygons));\n    points.features.forEach(function (pt) {\n        if (!pt.properties) {\n            pt.properties = {};\n        }\n        polygons.features.forEach(function (poly) {\n            if (pt.properties[outField] === undefined) {\n                var isInside = inside(pt, poly);\n                if (isInside) {\n                    pt.properties[outField] = poly.properties[field];\n                }\n            }\n        });\n    });\n    return points;\n};\n", "// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nvar featureCollection = require('turf-helpers').featureCollection;\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @return {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.random('points', 1000);\n *\n * //=points\n *\n * var sample = turf.sample(points, 10);\n *\n * //=sample\n */\nmodule.exports = function (featurecollection, num) {\n    var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n    return outFC;\n};\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n", "var polygon = require('turf-helpers').polygon;\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {Array<number>} bbox an Array of bounding box coordinates in the form: ```[xLow, yLow, xHigh, yHigh]```\n * @return {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //=poly\n */\n\nmodule.exports = function (bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n\n    return polygon([[\n        lowLeft,\n        lowRight,\n        topRight,\n        topLeft,\n        lowLeft\n    ]]);\n};\n", "var bbox = require('turf-bbox');\nvar bboxPolygon = require('turf-bbox-polygon');\n\n/**\n * Takes any number of features and returns a rectangular {@link Polygon} that encompasses all vertices.\n *\n * @name envelope\n * @param {FeatureCollection} fc input features\n * @return {Feature<Polygon>} a rectangular Polygon feature that encompasses all vertices\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location A\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.343, 39.984]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location B\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.833, 39.284]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location C\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.534, 39.123]\n *       }\n *     }\n *   ]\n * };\n *\n * var enveloped = turf.envelope(fc);\n *\n * var resultFeatures = fc.features.concat(enveloped);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\nmodule.exports = function (features) {\n    return bboxPolygon(bbox(features));\n};\n", "var getCoord = require('turf-invariant').getCoord;\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them.\n *\n * @name bearing\n * @param {Feature<Point>} start starting Point\n * @param {Feature<Point>} end ending Point\n * @returns {Number} bearing in decimal degrees\n * @example\n * var point1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#f00'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var point2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#0f0'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [point1, point2]\n * };\n *\n * //=points\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //=bearing\n */\nmodule.exports = function (start, end) {\n    var degrees2radians = Math.PI / 180;\n    var radians2degrees = 180 / Math.PI;\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n\n    var lon1 = degrees2radians * coordinates1[0];\n    var lon2 = degrees2radians * coordinates2[0];\n    var lat1 = degrees2radians * coordinates1[1];\n    var lat2 = degrees2radians * coordinates2[1];\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    var bearing = radians2degrees * Math.atan2(a, b);\n\n    return bearing;\n};\n", "//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\nvar getCoord = require('turf-invariant').getCoord;\nvar helpers = require('turf-helpers');\nvar point = helpers.point;\nvar distanceToRadians = helpers.distanceToRadians;\n\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in degrees, radians, miles, or kilometers; and bearing in degrees. This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Feature<Point>} from starting point\n * @param {number} distance distance from the starting point\n * @param {number} bearing ranging from -180 to 180\n * @param {String} [units=kilometers] miles, kilometers, degrees, or radians\n * @returns {Feature<Point>} destination point\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var distance = 50;\n * var bearing = 90;\n * var units = 'miles';\n *\n * var destination = turf.destination(point, distance, bearing, units);\n * destination.properties['marker-color'] = '#f00';\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [point, destination]\n * };\n *\n * //=result\n */\nmodule.exports = function (from, distance, bearing, units) {\n    var degrees2radians = Math.PI / 180;\n    var radians2degrees = 180 / Math.PI;\n    var coordinates1 = getCoord(from);\n    var longitude1 = degrees2radians * coordinates1[0];\n    var latitude1 = degrees2radians * coordinates1[1];\n    var bearing_rad = degrees2radians * bearing;\n\n    var radians = distanceToRadians(distance, units);\n\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) *\n        Math.sin(radians) * Math.cos(latitude1),\n        Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n\n    return point([radians2degrees * longitude2, radians2degrees * latitude2]);\n};\n", "var bearing = require('turf-bearing');\nvar destination = require('turf-destination');\nvar distance = require('turf-distance');\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Feature<Point>} from first point\n * @param {Feature<Point>} to second point\n * @return {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var pt1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [144.834823, -37.771257]\n *   }\n * };\n * var pt2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [145.14244, -37.830937]\n *   }\n * };\n *\n * var midpointed = turf.midpoint(pt1, pt2);\n * midpointed.properties['marker-color'] = '#f00';\n *\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [pt1, pt2, midpointed]\n * };\n *\n * //=result\n */\nmodule.exports = function (from, to) {\n    var dist = distance(from, to, 'miles');\n    var heading = bearing(from, to);\n    var midpoint = destination(from, dist / 2, heading, 'miles');\n\n    return midpoint;\n};\n", "module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n", "// http://stackoverflow.com/questions/839899/how-do-i-calculate-a-point-on-a-circles-circumference\n// radians = degrees * (pi/180)\n// https://github.com/bjornharrtell/jsts/blob/master/examples/buffer.html\n\nvar helpers = require('turf-helpers');\nvar featureCollection = helpers.featureCollection;\nvar jsts = require('jsts');\nvar normalize = require('geojson-normalize');\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * @name buffer\n * @param {(Feature|FeatureCollection)} feature input to be buffered\n * @param {number} distance distance to draw the buffer\n * @param {string} unit any of the options supported by turf units\n * @return {FeatureCollection<Polygon>|FeatureCollection<MultiPolygon>|Polygon|MultiPolygon} buffered features\n *\n * @example\n * var pt = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-90.548630, 14.616599]\n *   }\n * };\n * var unit = 'miles';\n *\n * var buffered = turf.buffer(pt, 500, unit);\n * var result = turf.featurecollection([buffered, pt]);\n *\n * //=result\n */\n\nmodule.exports = function (feature, radius, units) {\n\n    var degrees = helpers.distanceToDegrees(radius, units);\n    var fc = normalize(feature);\n    var buffered = normalize(featureCollection(fc.features.map(function (f) {\n        return bufferOp(f, degrees);\n    })));\n\n    if (buffered.features.length > 1) return buffered;\n    else if (buffered.features.length === 1) return buffered.features[0];\n};\n\nfunction bufferOp(feature, radius) {\n    var reader = new jsts.io.GeoJSONReader();\n    var geom = reader.read(feature.geometry);\n    var buffered = geom.buffer(radius);\n    var writer = new jsts.io.GeoJSONWriter();\n    buffered = writer.write(buffered);\n\n    return {\n        type: 'Feature',\n        geometry: buffered,\n        properties: {}\n    };\n}\n", "var bbox = require('turf-bbox'),\n    point = require('turf-helpers').point;\n\n/**\n * Takes a {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {FeatureCollection} features input features\n * @return {Feature<Point>} a Point feature at the\n * absolute center point of all input features\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.522259, 35.4691]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.502754, 35.463455]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.508269, 35.463245]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.516809, 35.465779]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.515372, 35.467072]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.509363, 35.463053]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.511123, 35.466601]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.518547, 35.469327]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.519706, 35.469659]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.517839, 35.466998]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.508678, 35.464942]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.514914, 35.463453]\n *       }\n *     }\n *   ]\n * };\n *\n * var centerPt = turf.center(features);\n * centerPt.properties['marker-size'] = 'large';\n * centerPt.properties['marker-color'] = '#000';\n *\n * var resultFeatures = features.features.concat(centerPt);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\nmodule.exports = function (layer) {\n    var ext = bbox(layer);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y]);\n};\n", "var each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes one or more features and calculates the centroid using\n * the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating\n * the centroid of a set of polygons.\n *\n * @name centroid\n * @param {(Feature|FeatureCollection)} features input features\n * @return {Feature<Point>} the centroid of the input features\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [105.818939,21.004714],\n *       [105.818939,21.061754],\n *       [105.890007,21.061754],\n *       [105.890007,21.004714],\n *       [105.818939,21.004714]\n *     ]]\n *   }\n * };\n *\n * var centroidPt = turf.centroid(poly);\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly, centroidPt]\n * };\n *\n * //=result\n */\nmodule.exports = function (features) {\n    var xSum = 0, ySum = 0, len = 0;\n    each(features, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len]);\n};\n", "var meta = require('turf-meta');\n\n/**\n * Combines a {@link FeatureCollection} of {@link Point},\n * {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or\n * {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<(Point|LineString|Polygon)>} fc a FeatureCollection of any type\n * @return {FeatureCollection<(MultiPoint|MultiLineString|MultiPolygon)>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.026432, 47.49134]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.074497, 47.509548]\n *       }\n *     }\n *   ]\n * };\n *\n * var combined = turf.combine(fc);\n *\n * //=combined\n */\n\nmodule.exports = function (fc) {\n    var groups = {\n        MultiPoint: {coordinates: [], properties: []},\n        MultiLineString: {coordinates: [], properties: []},\n        MultiPolygon: {coordinates: [], properties: []}\n    };\n\n    var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n        memo[item.replace('Multi', '')] = item;\n        return memo;\n    }, {});\n\n    function addToGroup(feature, key, multi) {\n        if (!multi) {\n            groups[key].coordinates.push(feature.geometry.coordinates);\n        } else {\n            groups[key].coordinates = groups[key].coordinates.concat(feature.geometry.coordinates);\n        }\n        groups[key].properties.push(feature.properties);\n    }\n\n    meta.featureEach(fc, function (feature) {\n        if (!feature.geometry) return;\n        if (groups[feature.geometry.type]) {\n            addToGroup(feature, feature.geometry.type, true);\n        } else if (multiMapping[feature.geometry.type]) {\n            addToGroup(feature, multiMapping[feature.geometry.type], false);\n        }\n    });\n\n    return {\n        type: 'FeatureCollection',\n        features: Object.keys(groups)\n            .filter(function (key) {\n                return groups[key].coordinates.length;\n            })\n            .sort()\n            .map(function (key) {\n                return {\n                    type: 'Feature',\n                    properties: {\n                        collectedProperties: groups[key].properties\n                    },\n                    geometry: {\n                        type: key,\n                        coordinates: groups[key].coordinates\n                    }\n                };\n            })\n    };\n};\n", "var featureCollection = require('turf-helpers').featureCollection;\nvar each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\nmodule.exports = function (geojson) {\n    var points = [];\n    each(geojson, function (coord) {\n        points.push(point(coord));\n    });\n    return featureCollection(points);\n};\n", "'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "var polygon = require('turf-helpers').polygon;\nvar earcut = require('earcut');\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} polygon the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var polygon = {\"type\":\"Feature\",\"id\":\"USA-CA\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-123.233256,42.006186],[-122.378853,42.011663],[-121.037003,41.995232],[-120.001861,41.995232],[-119.996384,40.264519],[-120.001861,38.999346],[-118.71478,38.101128],[-117.498899,37.21934],[-116.540435,36.501861],[-115.85034,35.970598],[-114.634459,35.00118],[-114.634459,34.87521],[-114.470151,34.710902],[-114.333228,34.448009],[-114.136058,34.305608],[-114.256551,34.174162],[-114.415382,34.108438],[-114.535874,33.933176],[-114.497536,33.697668],[-114.524921,33.54979],[-114.727567,33.40739],[-114.661844,33.034958],[-114.524921,33.029481],[-114.470151,32.843265],[-114.524921,32.755634],[-114.72209,32.717295],[-116.04751,32.624187],[-117.126467,32.536556],[-117.24696,32.668003],[-117.252437,32.876127],[-117.329114,33.122589],[-117.471515,33.297851],[-117.7837,33.538836],[-118.183517,33.763391],[-118.260194,33.703145],[-118.413548,33.741483],[-118.391641,33.840068],[-118.566903,34.042715],[-118.802411,33.998899],[-119.218659,34.146777],[-119.278905,34.26727],[-119.558229,34.415147],[-119.875891,34.40967],[-120.138784,34.475393],[-120.472878,34.448009],[-120.64814,34.579455],[-120.609801,34.858779],[-120.670048,34.902595],[-120.631709,35.099764],[-120.894602,35.247642],[-120.905556,35.450289],[-121.004141,35.461243],[-121.168449,35.636505],[-121.283465,35.674843],[-121.332757,35.784382],[-121.716143,36.195153],[-121.896882,36.315645],[-121.935221,36.638785],[-121.858544,36.6114],[-121.787344,36.803093],[-121.929744,36.978355],[-122.105006,36.956447],[-122.335038,37.115279],[-122.417192,37.241248],[-122.400761,37.361741],[-122.515777,37.520572],[-122.515777,37.783465],[-122.329561,37.783465],[-122.406238,38.15042],[-122.488392,38.112082],[-122.504823,37.931343],[-122.701993,37.893004],[-122.937501,38.029928],[-122.97584,38.265436],[-123.129194,38.451652],[-123.331841,38.566668],[-123.44138,38.698114],[-123.737134,38.95553],[-123.687842,39.032208],[-123.824765,39.366301],[-123.764519,39.552517],[-123.85215,39.831841],[-124.109566,40.105688],[-124.361506,40.259042],[-124.410798,40.439781],[-124.158859,40.877937],[-124.109566,41.025814],[-124.158859,41.14083],[-124.065751,41.442061],[-124.147905,41.715908],[-124.257444,41.781632],[-124.213628,42.000709],[-123.233256,42.006186]]]}};\n *\n * var triangles = turf.tesselate(polygon);\n *\n * //=triangles\n */\n\nmodule.exports = function (poly) {\n    if (!poly.geometry || (poly.geometry.type !== 'Polygon' && poly.geometry.type !== 'MultiPolygon')) {\n        throw new Error('input must be a Polygon or MultiPolygon');\n    }\n\n    var fc = {type: 'FeatureCollection', features: []};\n\n    if (poly.geometry.type === 'Polygon') {\n        fc.features = processPolygon(poly.geometry.coordinates);\n    } else {\n        poly.geometry.coordinates.forEach(function (coordinates) {\n            fc.features = fc.features.concat(processPolygon(coordinates));\n        });\n    }\n\n    return fc;\n};\n\nfunction processPolygon(coordinates) {\n    var data = flattenCoords(coordinates);\n    var dim = 2;\n    var result = earcut(data.vertices, data.holes, dim);\n\n    var features = [];\n    var vertices = [];\n\n    result.forEach(function (vert, i) {\n        var index = result[i];\n        vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n    });\n\n    for (var i = 0; i < vertices.length; i += 3) {\n        var coords = vertices.slice(i, i + 3);\n        coords.push(vertices[i]);\n        features.push(polygon([coords]));\n    }\n\n    return features;\n}\n\nfunction flattenCoords(data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n\n    return result;\n}\n", "// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\nvar jsts = require('jsts');\n\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @return {(Feature<Polygon>|undefined|Feature<MultiLineString>)} if `poly1` and `poly2` overlap, returns a Polygon feature representing the area they overlap; if `poly1` and `poly2` do not overlap, returns `undefined`; if `poly1` and `poly2` share a border, a MultiLineString of the locations where their borders are shared\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.801742, 45.48565],\n *       [-122.801742, 45.60491],\n *       [-122.584762, 45.60491],\n *       [-122.584762, 45.48565],\n *       [-122.801742, 45.48565]\n *     ]]\n *   }\n * }\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.520217, 45.535693],\n *       [-122.64038, 45.553967],\n *       [-122.720031, 45.526554],\n *       [-122.669906, 45.507309],\n *       [-122.723464, 45.446643],\n *       [-122.532577, 45.408574],\n *       [-122.487258, 45.477466],\n *       [-122.520217, 45.535693]\n *     ]]\n *   }\n * }\n *\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //=polygons\n *\n * //=intersection\n */\nmodule.exports = function intersect(poly1, poly2) {\n    var geom1, geom2;\n    if (poly1.type === 'Feature') geom1 = poly1.geometry;\n    else geom1 = poly1;\n    if (poly2.type === 'Feature') geom2 = poly2.geometry;\n    else geom2 = poly2;\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(geom1));\n    var b = reader.read(JSON.stringify(geom2));\n    var intersection = a.intersection(b);\n\n    if (intersection.isEmpty()) {\n        return undefined;\n    }\n\n    var writer = new jsts.io.GeoJSONWriter();\n\n    var geojsonGeometry = writer.write(intersection);\n    return {\n        type: 'Feature',\n        properties: {},\n        geometry: geojsonGeometry\n    };\n};\n", "var distance = require('turf-distance');\n\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearest\n * @param {Feature<Point>} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @return {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [28.965797, 41.010086]\n *   }\n * };\n * var against = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.973865, 41.011122]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.948459, 41.024204]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.938674, 41.013324]\n *       }\n *     }\n *   ]\n * };\n *\n * var nearest = turf.nearest(point, against);\n * nearest.properties['marker-color'] = '#f00';\n *\n * var resultFeatures = against.features.concat(point);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (targetPoint, points) {\n    var nearestPoint, minDist = Infinity;\n    for (var i = 0; i < points.features.length; i++) {\n        var distanceToPoint = distance(targetPoint, points.features[i], 'miles');\n        if (distanceToPoint < minDist) {\n            nearestPoint = points.features[i];\n            minDist = distanceToPoint;\n        }\n    }\n    return nearestPoint;\n};\n", "module.exports = function() {\n    throw new Error('call .point() or .polygon() instead');\n};\n\nfunction position(bbox) {\n    if (bbox) return coordInBBBOX(bbox);\n    else return [lon(), lat()];\n}\n\nmodule.exports.position = position;\n\nmodule.exports.point = function(count, bbox) {\n    var features = [];\n    for (i = 0; i < count; i++) {\n        features.push(feature(bbox ? point(position(bbox)) : point()));\n    }\n    return collection(features);\n};\n\nmodule.exports.polygon = function(count, num_vertices, max_radial_length, bbox) {\n    if (typeof num_vertices !== 'number') num_vertices = 10;\n    if (typeof max_radial_length !== 'number') max_radial_length = 10;\n    var features = [];\n    for (i = 0; i < count; i++) {\n        var vertices = [],\n            circle_offsets = Array.apply(null,\n                new Array(num_vertices + 1)).map(Math.random);\n\n        circle_offsets.forEach(sumOffsets);\n        circle_offsets.forEach(scaleOffsets);\n        vertices[vertices.length - 1] = vertices[0]; // close the ring\n\n        // center the polygon around something\n        vertices = vertices.map(vertexToCoordinate(position(bbox)));\n        features.push(feature(polygon([vertices])));\n    }\n\n    function sumOffsets(cur, index, arr) {\n        arr[index] = (index > 0) ? cur + arr[index - 1] : cur;\n    }\n\n    function scaleOffsets(cur, index) {\n        cur = cur * 2 * Math.PI / circle_offsets[circle_offsets.length - 1];\n        var radial_scaler = Math.random();\n        vertices.push([\n            radial_scaler * max_radial_length * Math.sin(cur),\n            radial_scaler * max_radial_length * Math.cos(cur)\n        ]);\n    }\n\n    return collection(features);\n};\n\n\nfunction vertexToCoordinate(hub) {\n    return function(cur, index) { return [cur[0] + hub[0], cur[1] + hub[1]]; };\n}\n\nfunction rnd() { return Math.random() - 0.5; }\nfunction lon() { return rnd() * 360; }\nfunction lat() { return rnd() * 180; }\n\nfunction point(coordinates) {\n    return {\n        type: 'Point',\n        coordinates: coordinates || [lon(), lat()]\n    };\n}\n\nfunction coordInBBBOX(bbox) {\n    return [\n        (Math.random() * (bbox[2] - bbox[0])) + bbox[0],\n        (Math.random() * (bbox[3] - bbox[1])) + bbox[1]];\n}\n\nfunction pointInBBBOX() {\n    return {\n        type: 'Point',\n        coordinates: [lon(), lat()]\n    };\n}\n\nfunction polygon(coordinates) {\n    return {\n        type: 'Polygon',\n        coordinates: coordinates\n    };\n}\n\nfunction feature(geom) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: {}\n    };\n}\n\nfunction collection(f) {\n    return {\n        type: 'FeatureCollection',\n        features: f\n    };\n}\n", "var random = require('geojson-random');\n\n/**\n * Generates random {@link GeoJSON} data, including {@link Point|Points} and {@link Polygon|Polygons}, for testing\n * and experimentation.\n *\n * @name random\n * @param {String} [type='point'] type of features desired: 'points' or 'polygons'\n * @param {Number} [count=1] how many geometries should be generated.\n * @param {Object} options options relevant to the feature desired. Can include:\n * @param {Array<number>} options.bbox a bounding box inside of which geometries\n * are placed. In the case of {@link Point} features, they are guaranteed to be within this bounds,\n * while {@link Polygon} features have their centroid within the bounds.\n * @param {Number} [options.num_vertices=10] options.vertices the number of vertices added\n * to polygon features.\n * @param {Number} [options.max_radial_length=10] the total number of decimal\n * degrees longitude or latitude that a polygon can extent outwards to\n * from its center.\n * @return {FeatureCollection} generated random features\n * @example\n * var points = turf.random('points', 100, {\n *   bbox: [-70, 40, -60, 60]\n * });\n *\n * //=points\n *\n * var polygons = turf.random('polygons', 4, {\n *   bbox: [-70, 40, -60, 60]\n * });\n *\n * //=polygons\n */\nmodule.exports = function (type, count, options) {\n    options = options || {};\n    count = count || 1;\n    switch (type) {\n    case 'point':\n    case 'points':\n    case undefined:\n        return random.point(count, options.bbox);\n    case 'polygon':\n    case 'polygons':\n        return random.polygon(\n                count,\n                options.num_vertices,\n                options.max_radial_length,\n                options.bbox);\n    default:\n        throw new Error('Unknown type given: valid options are points and polygons');\n    }\n};\n", "/**\n * Takes a {@link Polygon|polygon} and returns {@link Point|points} at all self-intersections.\n *\n * @name kinks\n * @param {Feature<Polygon>|Polygon} polygon input polygon\n * @returns {FeatureCollection<Point>} self-intersections\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-12.034835, 8.901183],\n *       [-12.060413, 8.899826],\n *       [-12.03638, 8.873199],\n *       [-12.059383, 8.871418],\n *       [-12.034835, 8.901183]\n *     ]]\n *   }\n * };\n *\n * var kinks = turf.kinks(poly);\n *\n * var resultFeatures = kinks.intersections.features.concat(poly);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\nvar point = require('turf-helpers').point;\n\nmodule.exports = function (polyIn) {\n    var poly;\n    var results = {\n        type: 'FeatureCollection',\n        features: []\n    };\n    if (polyIn.type === 'Feature') {\n        poly = polyIn.geometry;\n    } else {\n        poly = polyIn;\n    }\n    poly.coordinates.forEach(function (ring1) {\n        poly.coordinates.forEach(function (ring2) {\n            for (var i = 0; i < ring1.length - 1; i++) {\n                for (var k = 0; k < ring2.length - 1; k++) {\n                    // don't check adjacent sides of a given ring, since of course they intersect in a vertex.\n                    if (ring1 === ring2 && (Math.abs(i - k) === 1 || Math.abs(i - k) === ring1.length - 2)) {\n                        continue;\n                    }\n\n                    var intersection = lineIntersects(ring1[i][0], ring1[i][1], ring1[i + 1][0], ring1[i + 1][1],\n                        ring2[k][0], ring2[k][1], ring2[k + 1][0], ring2[k + 1][1]);\n                    if (intersection) {\n                        results.features.push(point([intersection[0], intersection[1]]));\n                    }\n                }\n            }\n        });\n    });\n    return results;\n};\n\n\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n    var denominator, a, b, numerator1, numerator2,\n        result = {\n            x: null,\n            y: null,\n            onLine1: false,\n            onLine2: false\n        };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a >= 0 && a <= 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b >= 0 && b <= 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n", "var featureCollection = require('turf-helpers').featureCollection;\nvar centroid = require('turf-center');\nvar distance = require('turf-distance');\nvar inside = require('turf-inside');\nvar explode = require('turf-explode');\n\n/**\n * Takes a feature and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @param {(Feature|FeatureCollection)} fc any feature or set of features\n * @returns {Feature} a point on the surface of `input`\n * @example\n * // create a random polygon\n * var polygon = turf.random('polygon');\n *\n * //=polygon\n *\n * var pointOnPolygon = turf.pointOnSurface(polygon);\n *\n* var resultFeatures = polygon.features.concat(pointOnPolygon);\n* var result = {\n*   \"type\": \"FeatureCollection\",\n*   \"features\": resultFeatures\n* };\n *\n * //=result\n */\nfunction pointOnSurface(fc) {\n    // normalize\n    if (fc.type !== 'FeatureCollection') {\n        if (fc.type !== 'Feature') {\n            fc = {\n                type: 'Feature',\n                geometry: fc,\n                properties: {}\n            };\n        }\n        fc = featureCollection([fc]);\n    }\n\n    //get centroid\n    var cent = centroid(fc);\n\n    // check to see if centroid is on surface\n    var onSurface = false;\n    var i = 0;\n    while (!onSurface && i < fc.features.length) {\n        var geom = fc.features[i].geometry;\n        var x, y, x1, y1, x2, y2, k;\n        var onLine = false;\n        if (geom.type === 'Point') {\n            if (cent.geometry.coordinates[0] === geom.coordinates[0] &&\n        cent.geometry.coordinates[1] === geom.coordinates[1]) {\n                onSurface = true;\n            }\n        } else if (geom.type === 'MultiPoint') {\n            var onMultiPoint = false;\n            k = 0;\n            while (!onMultiPoint && k < geom.coordinates.length) {\n                if (cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n                    onSurface = true;\n                    onMultiPoint = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'LineString') {\n            k = 0;\n            while (!onLine && k < geom.coordinates.length - 1) {\n                x = cent.geometry.coordinates[0];\n                y = cent.geometry.coordinates[1];\n                x1 = geom.coordinates[k][0];\n                y1 = geom.coordinates[k][1];\n                x2 = geom.coordinates[k + 1][0];\n                y2 = geom.coordinates[k + 1][1];\n                if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                    onLine = true;\n                    onSurface = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'MultiLineString') {\n            var j = 0;\n            while (j < geom.coordinates.length) {\n                onLine = false;\n                k = 0;\n                var line = geom.coordinates[j];\n                while (!onLine && k < line.length - 1) {\n                    x = cent.geometry.coordinates[0];\n                    y = cent.geometry.coordinates[1];\n                    x1 = line[k][0];\n                    y1 = line[k][1];\n                    x2 = line[k + 1][0];\n                    y2 = line[k + 1][1];\n                    if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                        onLine = true;\n                        onSurface = true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n        } else if (geom.type === 'Polygon' || geom.type === 'MultiPolygon') {\n            var f = {\n                type: 'Feature',\n                geometry: geom,\n                properties: {}\n            };\n            if (inside(cent, f)) {\n                onSurface = true;\n            }\n        }\n        i++;\n    }\n    if (onSurface) {\n        return cent;\n    } else {\n        var vertices = featureCollection([]);\n        for (i = 0; i < fc.features.length; i++) {\n            vertices.features = vertices.features.concat(explode(fc.features[i]).features);\n        }\n        var closestVertex;\n        var closestDistance = Infinity;\n        for (i = 0; i < vertices.features.length; i++) {\n            var dist = distance(cent, vertices.features[i], 'miles');\n            if (dist < closestDistance) {\n                closestDistance = dist;\n                closestVertex = vertices.features[i];\n            }\n        }\n        return closestVertex;\n    }\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n    var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n    var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n    if (ab === ap + pb) {\n        return true;\n    }\n}\n\nmodule.exports = pointOnSurface;\n", "module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n", "var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}", "var geometryArea = require('geojson-area').geometry;\n\n/**\n * Takes a one or more features and returns their area\n * in square meters.\n *\n * @param {(Feature|FeatureCollection)} input input features\n * @return {Number} area in square meters\n * @example\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-67.031021, 10.458102],\n *           [-67.031021, 10.53372],\n *           [-66.929397, 10.53372],\n *           [-66.929397, 10.458102],\n *           [-67.031021, 10.458102]\n *         ]]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-66.919784, 10.397325],\n *           [-66.919784, 10.513467],\n *           [-66.805114, 10.513467],\n *           [-66.805114, 10.397325],\n *           [-66.919784, 10.397325]\n *         ]]\n *       }\n *     }\n *   ]\n * };\n *\n * var area = turf.area(polygons);\n *\n * //=area\n */\nfunction area(input) {\n    if (input.type === 'FeatureCollection') {\n        for (var i = 0, sum = 0; i < input.features.length; i++) {\n            if (input.features[i].geometry) {\n                sum += geometryArea(input.features[i].geometry);\n            }\n        }\n        return sum;\n    } else if (input.type === 'Feature') {\n        return geometryArea(input.geometry);\n    } else {\n        return geometryArea(input);\n    }\n}\nmodule.exports = area;\n", "var measureDistance = require('turf-distance');\nvar point = require('turf-helpers').point;\nvar bearing = require('turf-bearing');\nvar destination = require('turf-destination');\n\n/**\n * Takes a {@link LineString|line} and returns a {@link Point|point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {String} [units=miles] can be degrees, radians, miles, or kilometers\n * @return {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n *\n * var along = turf.along(line, 1, 'miles');\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [line, along]\n * };\n *\n * //=result\n */\nmodule.exports = function (line, distance, units) {\n    var coords;\n    if (line.type === 'Feature') coords = line.geometry.coordinates;\n    else if (line.type === 'LineString') coords = line.coordinates;\n    else throw new Error('input must be a LineString Feature or Geometry');\n\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance >= travelled && i === coords.length - 1) break;\n        else if (travelled >= distance) {\n            var overshot = distance - travelled;\n            if (!overshot) return point(coords[i]);\n            else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, units);\n                return interpolated;\n            }\n        } else {\n            travelled += measureDistance(coords[i], coords[i + 1], units);\n        }\n    }\n    return point(coords[coords.length - 1]);\n};\n", "var distance = require('turf-distance');\nvar point = require('turf-helpers').point;\n\n/**\n * Takes a {@link LineString|line} and measures its length in the specified units.\n *\n * @name lineDistance\n * @param {Feature<LineString>} line line to measure\n * @param {String} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @return {Number} length of the input line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n *\n * var length = turf.lineDistance(line, 'miles');\n *\n * //=line\n *\n * //=length\n */\nmodule.exports = function lineDistance(line, units) {\n    if (line.type === 'FeatureCollection') {\n        return line.features.reduce(function (memo, feature) {\n            return memo + lineDistance(feature, units);\n        }, 0);\n    }\n\n    var geometry = line.type === 'Feature' ? line.geometry : line;\n    var d, i;\n\n    if (geometry.type === 'LineString') {\n        return length(geometry.coordinates, units);\n    } else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n        d = 0;\n        for (i = 0; i < geometry.coordinates.length; i++) {\n            d += length(geometry.coordinates[i], units);\n        }\n        return d;\n    } else if (line.type === 'MultiPolygon') {\n        d = 0;\n        for (i = 0; i < geometry.coordinates.length; i++) {\n            for (var j = 0; j < geometry.coordinates[i].length; j++) {\n                d += length(geometry.coordinates[i][j], units);\n            }\n        }\n        return d;\n    } else {\n        throw new Error('input must be a LineString, MultiLineString, ' +\n            'Polygon, or MultiPolygon Feature or Geometry (or a FeatureCollection ' +\n            'containing only those types)');\n    }\n\n};\n\nfunction length(coords, units) {\n    var travelled = 0;\n    var prevCoords = point(coords[0]);\n    var curCoords = point(coords[0]);\n    var temp;\n    for (var i = 1; i < coords.length; i++) {\n        curCoords.geometry.coordinates = coords[i];\n        travelled += distance(prevCoords, curCoords, units);\n        temp = prevCoords;\n        prevCoords = curCoords;\n        curCoords = temp;\n    }\n    return travelled;\n}\n", "var distance = require('turf-distance');\nvar point = require('turf-helpers').point;\nvar bearing = require('turf-bearing');\nvar destination = require('turf-destination');\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the LineString.\n *\n * @name pointOnLine\n * @param {Feature<LineString>} line line to snap to\n * @param {Feature<Point>} point point to snap from\n * @return {Feature<Point>} closest point on the `line` to `point`\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n * var pt = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.037076, 38.884017]\n *   }\n * };\n *\n * var snapped = turf.pointOnLine(line, pt);\n * snapped.properties['marker-color'] = '#00f'\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [line, pt, snapped]\n * };\n *\n * //=result\n */\n\nmodule.exports = function (line, pt) {\n    var coords;\n    if (line.type === 'Feature') {\n        coords = line.geometry.coordinates;\n    } else if (line.type === 'LineString') {\n        coords = line.coordinates;\n    } else {\n        throw new Error('input must be a LineString Feature or Geometry');\n    }\n\n    return pointOnLine(pt, coords);\n};\n\nfunction pointOnLine(pt, coords) {\n    var units = 'miles';\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity\n    });\n    for (var i = 0; i < coords.length - 1; i++) {\n        var start = point(coords[i]);\n        var stop = point(coords[i + 1]);\n        //start\n        start.properties.dist = distance(pt, start, units);\n        //stop\n        stop.properties.dist = distance(pt, stop, units);\n        //perpendicular\n        var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n        var direction = bearing(start, stop);\n        var perpendicularPt1 = destination(pt, heightDistance, direction + 90, units);\n        var perpendicularPt2 = destination(pt, heightDistance, direction - 90, units);\n        var intersect = lineIntersects(\n        perpendicularPt1.geometry.coordinates[0],\n        perpendicularPt1.geometry.coordinates[1],\n        perpendicularPt2.geometry.coordinates[0],\n        perpendicularPt2.geometry.coordinates[1],\n        start.geometry.coordinates[0],\n        start.geometry.coordinates[1],\n        stop.geometry.coordinates[0],\n        stop.geometry.coordinates[1]\n        );\n        var intersectPt;\n        if (intersect) {\n            intersectPt = point(intersect);\n            intersectPt.properties.dist = distance(pt, intersectPt, units);\n        }\n\n        if (start.properties.dist < closestPt.properties.dist) {\n            closestPt = start;\n            closestPt.properties.index = i;\n        }\n        if (stop.properties.dist < closestPt.properties.dist) {\n            closestPt = stop;\n            closestPt.properties.index = i;\n        }\n        if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n            closestPt = intersectPt;\n            closestPt.properties.index = i;\n        }\n    }\n\n    return closestPt;\n}\n\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n    var denominator, a, b, numerator1, numerator2;\n    var result = {\n        x: null,\n        y: null,\n        onLine1: false,\n        onLine2: false\n    };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a > 0 && a < 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b > 0 && b < 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n", "var linestring = require('turf-helpers').lineString;\nvar pointOnLine = require('turf-point-on-line');\n\n/**\n * Takes a {@link LineString|line}, a start {@link Point}, and a stop point\n * and returns a subsection of the line in-between those points.\n * The start & stop points don't need to fall exactly on the line.\n *\n * This can be useful for extracting only the part of a route between waypoints.\n *\n * @name lineSlice\n * @param {Feature<Point>} point1 starting point\n * @param {Feature<Point>} point2 stopping point\n * @param {Feature<LineString>|LineString} line line to slice\n * @return {Feature<LineString>} sliced line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n * var start = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.029609, 38.881946]\n *   }\n * };\n * var stop = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.021884, 38.889563]\n *   }\n * };\n *\n * var sliced = turf.lineSlice(start, stop, line);\n *\n * //=line\n *\n * //=sliced\n */\n\nmodule.exports = function lineSlice(startPt, stopPt, line) {\n    var coords;\n    if (line.type === 'Feature') {\n        coords = line.geometry.coordinates;\n    } else if (line.type === 'LineString') {\n        coords = line.coordinates;\n    } else {\n        throw new Error('input must be a LineString Feature or Geometry');\n    }\n\n    var startVertex = pointOnLine(line, startPt);\n    var stopVertex = pointOnLine(line, stopPt);\n    var ends;\n    if (startVertex.properties.index <= stopVertex.properties.index) {\n        ends = [startVertex, stopVertex];\n    } else {\n        ends = [stopVertex, startVertex];\n    }\n    var clipLine = linestring([ends[0].geometry.coordinates], {});\n    for (var i = ends[0].properties.index + 1; i < ends[1].properties.index + 1; i++) {\n        clipLine.geometry.coordinates.push(coords[i]);\n    }\n    clipLine.geometry.coordinates.push(ends[1].geometry.coordinates);\n    return clipLine;\n};\n", "var point = require('turf-helpers').point;\nvar featurecollection = require('turf-helpers').featureCollection;\nvar distance = require('turf-distance');\n/**\n * Takes a bounding box and a cell depth and returns a set of {@link Point|points} in a grid.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize the distance across each cell\n * @param {string} [units=kilometers] used in calculating cellWidth, can be degrees, radians, miles, or kilometers\n * @return {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellWidth = 3;\n * var units = 'miles';\n *\n * var grid = turf.pointGrid(extent, cellWidth, units);\n *\n * //=grid\n */\nmodule.exports = function pointGrid(bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            fc.features.push(point([currentX, currentY]));\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return fc;\n};\n", "var featurecollection = require('turf-helpers').featureCollection;\nvar point = require('turf-helpers').point;\nvar polygon = require('turf-helpers').polygon;\nvar distance = require('turf-distance');\n\n/**\n * Takes a bounding box and a cell depth and returns a set of square {@link Polygon|polygons} in a grid.\n *\n * @name squareGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize width of each cell\n * @param {string} units units to use for cellWidth\n * @return {FeatureCollection<Polygon>} grid a grid of polygons\n * @example\n * var extent = [-77.3876953125,38.71980474264239,-76.9482421875,39.027718840211605];\n * var cellWidth = 10;\n * var units = 'miles';\n *\n * var squareGrid = turf.squareGrid(extent, cellWidth, units);\n *\n * //=squareGrid\n */\nmodule.exports = function squareGrid(bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            var cellPoly = polygon([[\n                [currentX, currentY],\n                [currentX, currentY + cellHeight],\n                [currentX + cellWidth, currentY + cellHeight],\n                [currentX + cellWidth, currentY],\n                [currentX, currentY]\n            ]]);\n            fc.features.push(cellPoly);\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return fc;\n};\n", "var featurecollection = require('turf-helpers').featureCollection;\nvar polygon = require('turf-helpers').polygon;\nvar distance = require('turf-distance');\n\n/**\n * Takes a bounding box and a cell depth and returns a set of triangular {@link Polygon|polygons} in a grid.\n *\n * @name triangleGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize dimension of each cell\n * @param {string} units units to use for cellWidth\n * @return {FeatureCollection<Polygon>} grid of polygons\n * @example\n * var extent = [-77.3876953125,38.71980474264239,-76.9482421875,39.027718840211605];\n * var cellWidth = 10;\n * var units = 'miles';\n *\n * var triangleGrid = turf.triangleGrid(extent, cellWidth, units);\n *\n * //=triangleGrid\n */\nmodule.exports = function (bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var xi = 0;\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var yi = 0;\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            if (xi % 2 === 0 && yi % 2 === 0) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]]));\n            } else if (xi % 2 === 0 && yi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]]));\n            } else if (yi % 2 === 0 && xi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]));\n            } else if (yi % 2 === 1 && xi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]]));\n            }\n            currentY += cellHeight;\n            yi++;\n        }\n        xi++;\n        currentX += cellWidth;\n    }\n    return fc;\n};\n\n", "var point = require('turf-helpers').point;\nvar polygon = require('turf-helpers').polygon;\nvar distance = require('turf-distance');\nvar featurecollection = require('turf-helpers').featureCollection;\n\n//Precompute cosines and sines of angles used in hexagon creation\n// for performance gain\nvar cosines = [];\nvar sines = [];\nfor (var i = 0; i < 6; i++) {\n    var angle = 2 * Math.PI / 6 * i;\n    cosines.push(Math.cos(angle));\n    sines.push(Math.sin(angle));\n}\n\n/**\n * Takes a bounding box and a cell size in degrees and returns a {@link FeatureCollection} of flat-topped\n * hexagons ({@link Polygon} features) aligned in an \"odd-q\" vertical grid as\n * described in [Hexagonal Grids](http://www.redblobgames.com/grids/hexagons/).\n *\n * @name hexGrid\n * @param {Array<number>} bbox bounding box in [minX, minY, maxX, maxY] order\n * @param {number} cellSize dimension of cell in specified units\n * @param {string} units used in calculating cellWidth ('miles' or 'kilometers')\n * @param {boolean} triangles whether to return as triangles instead of hexagons\n * @return {FeatureCollection<Polygon>} a hexagonal grid\n * @example\n * var bbox = [-96,31,-84,40];\n * var cellWidth = 50;\n * var units = 'miles';\n *\n * var hexgrid = turf.hexGrid(bbox, cellWidth, units);\n *\n * //=hexgrid\n */\nmodule.exports = function hexGrid(bbox, cellSize, units, triangles) {\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n    var radius = cellWidth / 2;\n\n    var hex_width = radius * 2;\n    var hex_height = Math.sqrt(3) / 2 * cellHeight;\n\n    var box_width = bbox[2] - bbox[0];\n    var box_height = bbox[3] - bbox[1];\n\n    var x_interval = 3 / 4 * hex_width;\n    var y_interval = hex_height;\n\n    var x_span = box_width / (hex_width - radius / 2);\n    var x_count = Math.ceil(x_span);\n    if (Math.round(x_span) === x_count) {\n        x_count++;\n    }\n\n    var x_adjust = ((x_count * x_interval - radius / 2) - box_width) / 2 - radius / 2;\n\n    var y_count = Math.ceil(box_height / hex_height);\n\n    var y_adjust = (box_height - y_count * hex_height) / 2;\n\n    var hasOffsetY = y_count * hex_height - box_height > hex_height / 2;\n    if (hasOffsetY) {\n        y_adjust -= hex_height / 4;\n    }\n\n    var fc = featurecollection([]);\n    for (var x = 0; x < x_count; x++) {\n        for (var y = 0; y <= y_count; y++) {\n\n            var isOdd = x % 2 === 1;\n            if (y === 0 && isOdd) {\n                continue;\n            }\n\n            if (y === 0 && hasOffsetY) {\n                continue;\n            }\n\n            var center_x = x * x_interval + bbox[0] - x_adjust;\n            var center_y = y * y_interval + bbox[1] + y_adjust;\n\n            if (isOdd) {\n                center_y -= hex_height / 2;\n            }\n            if (triangles) {\n                fc.features.push.apply(fc.features, hexTriangles([center_x, center_y], cellWidth / 2, cellHeight / 2));\n            } else {\n                fc.features.push(hexagon([center_x, center_y], cellWidth / 2, cellHeight / 2));\n            }\n        }\n    }\n\n    return fc;\n};\n\n//Center should be [x, y]\nfunction hexagon(center, rx, ry) {\n    var vertices = [];\n    for (var i = 0; i < 6; i++) {\n        var x = center[0] + rx * cosines[i];\n        var y = center[1] + ry * sines[i];\n        vertices.push([x, y]);\n    }\n    //first and last vertex must be the same\n    vertices.push(vertices[0]);\n    return polygon([vertices]);\n}\n\n//Center should be [x, y]\nfunction hexTriangles(center, rx, ry) {\n    var triangles = [];\n    for (var i = 0; i < 6; i++) {\n        var vertices = [];\n        vertices.push(center);\n        vertices.push([\n            center[0] + rx * cosines[i],\n            center[1] + ry * sines[i]\n        ]);\n        vertices.push([\n            center[0] + rx * cosines[(i + 1) % 6],\n            center[1] + ry * sines[(i + 1) % 6]\n        ]);\n        vertices.push(center);\n        triangles.push(polygon([vertices]));\n    }\n    return triangles;\n}\n", "/*eslint global-require: 0*/\n\n/**\n * Turf is a modular geospatial analysis engine written in JavaScript. It performs geospatial\n * processing tasks with GeoJSON data and can be run on a server or in a browser.\n *\n * @module turf\n * @summary Geospatial analysis for JavaScript\n */\nmodule.exports = {\n    isolines: require('turf-isolines'),\n    convex: require('turf-convex'),\n    within: require('turf-within'),\n    concave: require('turf-concave'),\n    difference: require('turf-difference'),\n    collect: require('turf-collect'),\n    flip: require('turf-flip'),\n    simplify: require('turf-simplify'),\n    bezier: require('turf-bezier'),\n    tag: require('turf-tag'),\n    sample: require('turf-sample'),\n    envelope: require('turf-envelope'),\n    square: require('turf-square'),\n    midpoint: require('turf-midpoint'),\n    buffer: require('turf-buffer'),\n    center: require('turf-center'),\n    centroid: require('turf-centroid'),\n    combine: require('turf-combine'),\n    distance: require('turf-distance'),\n    explode: require('turf-explode'),\n    bbox: require('turf-bbox'),\n    tesselate: require('turf-tesselate'),\n    bboxPolygon: require('turf-bbox-polygon'),\n    inside: require('turf-inside'),\n    intersect: require('turf-intersect'),\n    nearest: require('turf-nearest'),\n    planepoint: require('turf-planepoint'),\n    random: require('turf-random'),\n    tin: require('turf-tin'),\n    union: require('turf-union'),\n    bearing: require('turf-bearing'),\n    destination: require('turf-destination'),\n    kinks: require('turf-kinks'),\n    pointOnSurface: require('turf-point-on-surface'),\n    area: require('turf-area'),\n    along: require('turf-along'),\n    lineDistance: require('turf-line-distance'),\n    lineSlice: require('turf-line-slice'),\n    pointOnLine: require('turf-point-on-line'),\n    pointGrid: require('turf-point-grid'),\n    squareGrid: require('turf-square-grid'),\n    triangleGrid: require('turf-triangle-grid'),\n    hexGrid: require('turf-hex-grid')\n};\n\nvar helpers = require('turf-helpers');\n\nmodule.exports.point = helpers.point;\nmodule.exports.polygon = helpers.polygon;\nmodule.exports.lineString = helpers.lineString;\nmodule.exports.multiPoint = helpers.multiPoint;\nmodule.exports.multiPolygon = helpers.multiPolygon;\nmodule.exports.multiLineString = helpers.multiLineString;\nmodule.exports.feature = helpers.feature;\nmodule.exports.featureCollection = helpers.featureCollection;\nmodule.exports.geometryCollection = helpers.geometryCollection;\n"],
  "mappings": "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AAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxY,YAAI,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxY,YAAI,IAAI,IAAI,GAAG,CAAC;AAChB,eAAO,EAAE,EAAE,SAAS,CAAC;AAAA,MACvB;AAAA,IACF;AAEA,aAAS,cAAc,KAAK,MAAM,OAAO,KAAK;AAC5C,aAAO,SAAS,kBAAkB,IAAI,IAAI,IAAI,IAAI,IAAI;AACpD,YAAI,IAAI,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC99E,YAAI,IAAI,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,G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",
  "names": ["i", "i", "i", "i", "i", "a", "i", "i", "c", "i", "i", "orientation3Exact", "orientation4Exact", "proc", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "t", "e", "n", "i", "r", "s", "o", "a", "u", "l", "h", "c", "f", "d", "p", "v", "m", "y", "x", "E", "N", "C", "S", "g", "I", "i", "i", "i", "t", "t2", "t3", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i"]
}
